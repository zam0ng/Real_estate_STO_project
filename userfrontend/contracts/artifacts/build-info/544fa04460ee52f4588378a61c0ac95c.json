{
	"id": "544fa04460ee52f4588378a61c0ac95c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"userfrontend/contracts/ERC20subscription.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract ERC20subscription is ERC20, Ownable {\r\n    uint256 private _totalMinted;\r\n    uint256 private _totalSupply;\r\n    uint256 private _lockTime;\r\n    uint256 public _adminLockTime;\r\n    string private _documentURI;\r\n    string private _tokenSymbol;\r\n\r\n    modifier lockTimeCheck() {\r\n        if (msg.sender == owner()) {\r\n            require(\r\n                block.timestamp >= _adminLockTime,\r\n                \"admin's tokens are locked for an year\"\r\n            );\r\n        }\r\n        require(block.timestamp >= _lockTime, \"not for sale yet\");\r\n        _;\r\n    }\r\n\r\n    // owner주소, 이름, symbol , 총공급량, 구매자주소[],분배량[],락업시간,documenturi\r\n    constructor(\r\n        address _owner,\r\n        string memory _name,\r\n        string memory _symbol,\r\n        uint256 __totalSupply,\r\n        address[] memory subscribers,\r\n        uint256[] memory amounts,\r\n        uint256 __lockTime\r\n    )  ERC20(_name,_symbol) Ownable(_owner){\r\n        require(subscribers.length == amounts.length, \"subscribers and their amounts do not match\");\r\n        _totalSupply = __totalSupply;\r\n        _lockTime = block.timestamp + __lockTime;\r\n\r\n        for (uint256 i = 0; i < subscribers.length; i++) {\r\n            require(amounts[i] + _totalMinted <= _totalSupply);\r\n            _mint(subscribers[i], amounts[i]);\r\n            _totalMinted += amounts[i];\r\n        }\r\n\r\n        uint256 remainedTokens = _totalSupply - _totalMinted;\r\n        if (remainedTokens > 0) {\r\n            _mint(_owner, remainedTokens);\r\n            _adminLockTime = block.timestamp + 31536000; // 1년\r\n        }\r\n    }\r\n\r\n    event TransferWithSymbol(\r\n        address from,\r\n        address to,\r\n        uint256 value,\r\n        string symbol\r\n    );\r\n\r\n    function decimals() public pure override returns (uint8) {\r\n        return 0;\r\n    }\r\n\r\n    function transfer(\r\n        address to,\r\n        uint256 amount\r\n    ) public override lockTimeCheck returns (bool) {\r\n        uint256 newTotalBalance = balanceOf(to) + amount;\r\n        require(\r\n            newTotalBalance < (20 * totalSupply()) / 100,\r\n            \"Ownership capped at 20% to ensure decentralization\"\r\n        );\r\n\r\n        emit TransferWithSymbol(msg.sender, to, amount, _tokenSymbol);\r\n\r\n        return super.transfer(to, amount);\r\n    }\r\n\r\n    function getLockTime() public view returns (uint256) {\r\n        return _lockTime;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint amount\r\n    ) public override returns (bool) {\r\n        if (from == owner()) {\r\n            require(\r\n                block.timestamp >= _adminLockTime,\r\n                \"Admin's tokens are locked\"\r\n            );\r\n        } else {\r\n            require(block.timestamp >= _lockTime, \"Tokens are locked\");\r\n        }\r\n        uint256 newTotalBalance = balanceOf(to) + amount;\r\n        require(\r\n            newTotalBalance < (20 * totalSupply()) / 100,\r\n            \"Ownership capped at 20% to ensure decentralization\"\r\n        );\r\n\r\n        return super.transferFrom(from, to, amount);\r\n    }\r\n\r\n    function getDocumentURI() public view returns (string memory) {\r\n        return _documentURI;\r\n    }\r\n\r\n    function setDocumentURI (string memory __documentURI) public onlyOwner{\r\n        _documentURI = __documentURI;\r\n    }\r\n\r\n    function ForceMint(address _useraddress, uint256 amount) public onlyOwner {\r\n        _mint(_useraddress, amount);\r\n    }\r\n\r\n    function ForceBurn(address _useraddress, uint256 amount) public onlyOwner {\r\n        _burn(_useraddress, amount);\r\n    }\r\n}\r\n\r\n// 토큰 강제소각, 재발행 (동적 공급량) (완료_)\r\n// 락업 (완료)\r\n// 계약서 첨부 (완료)\r\n// admin 물량 자동락업 1년 (완료)\r\n// 단일 계좌 20% 이상 보유 제한\r\n"
			},
			"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"userfrontend/contracts/ERC20subscription.sol": {
				"ERC20subscription": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "__totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "subscribers",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "__lockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"name": "TransferWithSymbol",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_useraddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ForceBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_useraddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ForceMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_adminLockTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDocumentURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLockTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "__documentURI",
									"type": "string"
								}
							],
							"name": "setDocumentURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"userfrontend/contracts/ERC20subscription.sol\":206:3775  contract ERC20subscription is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"userfrontend/contracts/ERC20subscription.sol\":890:1816  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1161:1167  _owner */\n  dup7\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1138:1143  _name */\n  dup7\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1144:1151  _symbol */\n  dup7\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1209:1216  amounts */\n  dup2\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1209:1223  amounts.length */\n  mload\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1187:1198  subscribers */\n  dup4\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1187:1205  subscribers.length */\n  mload\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1187:1223  subscribers.length == amounts.length */\n  eq\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1179:1270  require(subscribers.length == amounts.length, \"subscribers and their amounts do not match\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1296:1309  __totalSupply */\n  dup4\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1281:1293  _totalSupply */\n  0x07\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1281:1309  _totalSupply = __totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1350:1360  __lockTime */\n  dup1\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1332:1347  block.timestamp */\n  timestamp\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1332:1360  block.timestamp + __lockTime */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1320:1329  _lockTime */\n  0x08\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1320:1360  _lockTime = block.timestamp + __lockTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1378:1387  uint256 i */\n  0x00\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1373:1588  for (uint256 i = 0; i < subscribers.length; i++) {... */\ntag_23:\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1397:1408  subscribers */\n  dup4\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1397:1415  subscribers.length */\n  mload\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1393:1394  i */\n  dup2\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1393:1415  i < subscribers.length */\n  lt\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1373:1588  for (uint256 i = 0; i < subscribers.length; i++) {... */\n  iszero\n  tag_24\n  jumpi\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1474:1486  _totalSupply */\n  sload(0x07)\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1458:1470  _totalMinted */\n  sload(0x06)\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1445:1452  amounts */\n  dup5\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1453:1454  i */\n  dup4\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1445:1455  amounts[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_26\n  jumpi\n  tag_27\n  tag_28\n  jump\t// in\ntag_27:\ntag_26:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1445:1470  amounts[i] + _totalMinted */\n  tag_29\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_29:\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1445:1486  amounts[i] + _totalMinted <= _totalSupply */\n  gt\n  iszero\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1437:1487  require(amounts[i] + _totalMinted <= _totalSupply) */\n  tag_30\n  jumpi\n  0x00\n  dup1\n  revert\ntag_30:\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1502:1535  _mint(subscribers[i], amounts[i]) */\n  tag_31\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1508:1519  subscribers */\n  dup5\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1520:1521  i */\n  dup3\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1508:1522  subscribers[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_32\n  jumpi\n  tag_33\n  tag_28\n  jump\t// in\ntag_33:\ntag_32:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1524:1531  amounts */\n  dup5\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1532:1533  i */\n  dup4\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1524:1534  amounts[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_34\n  jumpi\n  tag_35\n  tag_28\n  jump\t// in\ntag_35:\ntag_34:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1502:1507  _mint */\n  shl(0x20, tag_36)\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1502:1535  _mint(subscribers[i], amounts[i]) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1566:1573  amounts */\n  dup3\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1574:1575  i */\n  dup2\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1566:1576  amounts[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_37\n  jumpi\n  tag_38\n  tag_28\n  jump\t// in\ntag_38:\ntag_37:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1550:1562  _totalMinted */\n  0x06\n  0x00\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1550:1576  _totalMinted += amounts[i] */\n  dup3\n  dup3\n  sload\n  tag_39\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_39:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1417:1420  i++ */\n  dup1\n  dup1\n  tag_40\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  swap2\n  pop\n  pop\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1373:1588  for (uint256 i = 0; i < subscribers.length; i++) {... */\n  jump(tag_23)\ntag_24:\n  pop\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1600:1622  uint256 remainedTokens */\n  0x00\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1640:1652  _totalMinted */\n  sload(0x06)\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1625:1637  _totalSupply */\n  sload(0x07)\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1625:1652  _totalSupply - _totalMinted */\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1600:1652  uint256 remainedTokens = _totalSupply - _totalMinted */\n  swap1\n  pop\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1684:1685  0 */\n  0x00\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1667:1681  remainedTokens */\n  dup2\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1667:1685  remainedTokens > 0 */\n  gt\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1663:1809  if (remainedTokens > 0) {... */\n  iszero\n  tag_44\n  jumpi\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1702:1731  _mint(_owner, remainedTokens) */\n  tag_45\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1708:1714  _owner */\n  dup9\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1716:1730  remainedTokens */\n  dup3\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1702:1707  _mint */\n  shl(0x20, tag_36)\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1702:1731  _mint(_owner, remainedTokens) */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1781:1789  31536000 */\n  0x01e13380\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1763:1778  block.timestamp */\n  timestamp\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1763:1789  block.timestamp + 31536000 */\n  tag_46\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_46:\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1746:1760  _adminLockTime */\n  0x09\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1746:1789  _adminLockTime = block.timestamp + 31536000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1663:1809  if (remainedTokens > 0) {... */\ntag_44:\n    /* \"userfrontend/contracts/ERC20subscription.sol\":1168:1816  {... */\n  pop\n    /* \"userfrontend/contracts/ERC20subscription.sol\":890:1816  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"userfrontend/contracts/ERC20subscription.sol\":206:3775  contract ERC20subscription is ERC20, Ownable {... */\n  jump(tag_47)\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_36:\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_51\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_51:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_50:\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_52\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_53)\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_52:\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_53:\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_55\n  jumpi\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_56\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_56:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_57)\ntag_55:\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_58\n  jumpi\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_59\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_60\n  jump\t// in\ntag_59:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_58:\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_57:\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_61\n  jumpi\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_62)\ntag_61:\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_62:\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_63\n  swap2\n  swap1\n  tag_64\n  jump\t// in\ntag_63:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_65:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_66:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_67:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_68:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_69:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_122\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_68\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_70:\n    /* \"#utility.yul\":641:665   */\n  tag_124\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_69\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_125\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_125:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_71:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_127\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_70\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_72:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_73:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_74:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_75:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_76:\n    /* \"#utility.yul\":1468:1495   */\n  tag_133\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_74\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_135\n  tag_75\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":1541:1629   */\ntag_134:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_77:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_137\n  tag_65\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_138\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_76\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2115   */\ntag_78:\n    /* \"#utility.yul\":1869:1873   */\n  0x00\n    /* \"#utility.yul\":1959:1977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1948:1978   */\n  gt\n    /* \"#utility.yul\":1945:2001   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":1981:1999   */\n  tag_141\n  tag_75\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":1945:2001   */\ntag_140:\n    /* \"#utility.yul\":2019:2048   */\n  tag_142\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2019:2048   */\n  tag_74\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":2011:2048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2097:2101   */\n  dup2\n    /* \"#utility.yul\":2093:2108   */\n  add\n    /* \"#utility.yul\":2085:2108   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2121:2367   */\ntag_79:\n    /* \"#utility.yul\":2202:2203   */\n  0x00\n    /* \"#utility.yul\":2212:2325   */\ntag_144:\n    /* \"#utility.yul\":2226:2232   */\n  dup4\n    /* \"#utility.yul\":2223:2224   */\n  dup2\n    /* \"#utility.yul\":2220:2233   */\n  lt\n    /* \"#utility.yul\":2212:2325   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":2311:2312   */\n  dup1\n    /* \"#utility.yul\":2306:2309   */\n  dup3\n    /* \"#utility.yul\":2302:2313   */\n  add\n    /* \"#utility.yul\":2296:2314   */\n  mload\n    /* \"#utility.yul\":2292:2293   */\n  dup2\n    /* \"#utility.yul\":2287:2290   */\n  dup5\n    /* \"#utility.yul\":2283:2294   */\n  add\n    /* \"#utility.yul\":2276:2315   */\n  mstore\n    /* \"#utility.yul\":2248:2250   */\n  0x20\n    /* \"#utility.yul\":2245:2246   */\n  dup2\n    /* \"#utility.yul\":2241:2251   */\n  add\n    /* \"#utility.yul\":2236:2251   */\n  swap1\n  pop\n    /* \"#utility.yul\":2212:2325   */\n  jump(tag_144)\ntag_146:\n    /* \"#utility.yul\":2359:2360   */\n  0x00\n    /* \"#utility.yul\":2350:2356   */\n  dup5\n    /* \"#utility.yul\":2345:2348   */\n  dup5\n    /* \"#utility.yul\":2341:2357   */\n  add\n    /* \"#utility.yul\":2334:2361   */\n  mstore\n    /* \"#utility.yul\":2183:2367   */\n  pop\n    /* \"#utility.yul\":2121:2367   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2373:2807   */\ntag_80:\n    /* \"#utility.yul\":2462:2467   */\n  0x00\n    /* \"#utility.yul\":2487:2553   */\n  tag_148\n    /* \"#utility.yul\":2503:2552   */\n  tag_149\n    /* \"#utility.yul\":2545:2551   */\n  dup5\n    /* \"#utility.yul\":2503:2552   */\n  tag_78\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":2487:2553   */\n  tag_77\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":2478:2553   */\n  swap1\n  pop\n    /* \"#utility.yul\":2576:2582   */\n  dup3\n    /* \"#utility.yul\":2569:2574   */\n  dup2\n    /* \"#utility.yul\":2562:2583   */\n  mstore\n    /* \"#utility.yul\":2614:2618   */\n  0x20\n    /* \"#utility.yul\":2607:2612   */\n  dup2\n    /* \"#utility.yul\":2603:2619   */\n  add\n    /* \"#utility.yul\":2652:2655   */\n  dup5\n    /* \"#utility.yul\":2643:2649   */\n  dup5\n    /* \"#utility.yul\":2638:2641   */\n  dup5\n    /* \"#utility.yul\":2634:2650   */\n  add\n    /* \"#utility.yul\":2631:2656   */\n  gt\n    /* \"#utility.yul\":2628:2740   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":2659:2738   */\n  tag_151\n  tag_73\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":2628:2740   */\ntag_150:\n    /* \"#utility.yul\":2749:2801   */\n  tag_152\n    /* \"#utility.yul\":2794:2800   */\n  dup5\n    /* \"#utility.yul\":2789:2792   */\n  dup3\n    /* \"#utility.yul\":2784:2787   */\n  dup6\n    /* \"#utility.yul\":2749:2801   */\n  tag_79\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":2468:2807   */\n  pop\n    /* \"#utility.yul\":2373:2807   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2827:3182   */\ntag_81:\n    /* \"#utility.yul\":2894:2899   */\n  0x00\n    /* \"#utility.yul\":2943:2946   */\n  dup3\n    /* \"#utility.yul\":2936:2940   */\n  0x1f\n    /* \"#utility.yul\":2928:2934   */\n  dup4\n    /* \"#utility.yul\":2924:2941   */\n  add\n    /* \"#utility.yul\":2920:2947   */\n  slt\n    /* \"#utility.yul\":2910:3032   */\n  tag_154\n  jumpi\n    /* \"#utility.yul\":2951:3030   */\n  tag_155\n  tag_72\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":2910:3032   */\ntag_154:\n    /* \"#utility.yul\":3061:3067   */\n  dup2\n    /* \"#utility.yul\":3055:3068   */\n  mload\n    /* \"#utility.yul\":3086:3176   */\n  tag_156\n    /* \"#utility.yul\":3172:3175   */\n  dup5\n    /* \"#utility.yul\":3164:3170   */\n  dup3\n    /* \"#utility.yul\":3157:3161   */\n  0x20\n    /* \"#utility.yul\":3149:3155   */\n  dup7\n    /* \"#utility.yul\":3145:3162   */\n  add\n    /* \"#utility.yul\":3086:3176   */\n  tag_80\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":3077:3176   */\n  swap2\n  pop\n    /* \"#utility.yul\":2900:3182   */\n  pop\n    /* \"#utility.yul\":2827:3182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3188:3265   */\ntag_82:\n    /* \"#utility.yul\":3225:3232   */\n  0x00\n    /* \"#utility.yul\":3254:3259   */\n  dup2\n    /* \"#utility.yul\":3243:3259   */\n  swap1\n  pop\n    /* \"#utility.yul\":3188:3265   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3271:3393   */\ntag_83:\n    /* \"#utility.yul\":3344:3368   */\n  tag_159\n    /* \"#utility.yul\":3362:3367   */\n  dup2\n    /* \"#utility.yul\":3344:3368   */\n  tag_82\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":3337:3342   */\n  dup2\n    /* \"#utility.yul\":3334:3369   */\n  eq\n    /* \"#utility.yul\":3324:3387   */\n  tag_160\n  jumpi\n    /* \"#utility.yul\":3383:3384   */\n  0x00\n    /* \"#utility.yul\":3380:3381   */\n  dup1\n    /* \"#utility.yul\":3373:3385   */\n  revert\n    /* \"#utility.yul\":3324:3387   */\ntag_160:\n    /* \"#utility.yul\":3271:3393   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3399:3542   */\ntag_84:\n    /* \"#utility.yul\":3456:3461   */\n  0x00\n    /* \"#utility.yul\":3487:3493   */\n  dup2\n    /* \"#utility.yul\":3481:3494   */\n  mload\n    /* \"#utility.yul\":3472:3494   */\n  swap1\n  pop\n    /* \"#utility.yul\":3503:3536   */\n  tag_162\n    /* \"#utility.yul\":3530:3535   */\n  dup2\n    /* \"#utility.yul\":3503:3536   */\n  tag_83\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":3399:3542   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3548:3859   */\ntag_85:\n    /* \"#utility.yul\":3625:3629   */\n  0x00\n    /* \"#utility.yul\":3715:3733   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3707:3713   */\n  dup3\n    /* \"#utility.yul\":3704:3734   */\n  gt\n    /* \"#utility.yul\":3701:3757   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":3737:3755   */\n  tag_165\n  tag_75\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":3701:3757   */\ntag_164:\n    /* \"#utility.yul\":3787:3791   */\n  0x20\n    /* \"#utility.yul\":3779:3785   */\n  dup3\n    /* \"#utility.yul\":3775:3792   */\n  mul\n    /* \"#utility.yul\":3767:3792   */\n  swap1\n  pop\n    /* \"#utility.yul\":3847:3851   */\n  0x20\n    /* \"#utility.yul\":3841:3845   */\n  dup2\n    /* \"#utility.yul\":3837:3852   */\n  add\n    /* \"#utility.yul\":3829:3852   */\n  swap1\n  pop\n    /* \"#utility.yul\":3548:3859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3865:3982   */\ntag_86:\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3971:3972   */\n  dup1\n    /* \"#utility.yul\":3964:3976   */\n  revert\n    /* \"#utility.yul\":4005:4737   */\ntag_87:\n    /* \"#utility.yul\":4112:4117   */\n  0x00\n    /* \"#utility.yul\":4137:4218   */\n  tag_168\n    /* \"#utility.yul\":4153:4217   */\n  tag_169\n    /* \"#utility.yul\":4210:4216   */\n  dup5\n    /* \"#utility.yul\":4153:4217   */\n  tag_85\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":4137:4218   */\n  tag_77\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":4128:4218   */\n  swap1\n  pop\n    /* \"#utility.yul\":4238:4243   */\n  dup1\n    /* \"#utility.yul\":4267:4273   */\n  dup4\n    /* \"#utility.yul\":4260:4265   */\n  dup3\n    /* \"#utility.yul\":4253:4274   */\n  mstore\n    /* \"#utility.yul\":4301:4305   */\n  0x20\n    /* \"#utility.yul\":4294:4299   */\n  dup3\n    /* \"#utility.yul\":4290:4306   */\n  add\n    /* \"#utility.yul\":4283:4306   */\n  swap1\n  pop\n    /* \"#utility.yul\":4354:4358   */\n  0x20\n    /* \"#utility.yul\":4346:4352   */\n  dup5\n    /* \"#utility.yul\":4342:4359   */\n  mul\n    /* \"#utility.yul\":4334:4340   */\n  dup4\n    /* \"#utility.yul\":4330:4360   */\n  add\n    /* \"#utility.yul\":4383:4386   */\n  dup6\n    /* \"#utility.yul\":4375:4381   */\n  dup2\n    /* \"#utility.yul\":4372:4387   */\n  gt\n    /* \"#utility.yul\":4369:4491   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":4402:4481   */\n  tag_171\n  tag_86\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":4369:4491   */\ntag_170:\n    /* \"#utility.yul\":4517:4523   */\n  dup4\n    /* \"#utility.yul\":4500:4731   */\ntag_172:\n    /* \"#utility.yul\":4534:4540   */\n  dup2\n    /* \"#utility.yul\":4529:4532   */\n  dup2\n    /* \"#utility.yul\":4526:4541   */\n  lt\n    /* \"#utility.yul\":4500:4731   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":4609:4612   */\n  dup1\n    /* \"#utility.yul\":4638:4686   */\n  tag_175\n    /* \"#utility.yul\":4682:4685   */\n  dup9\n    /* \"#utility.yul\":4670:4680   */\n  dup3\n    /* \"#utility.yul\":4638:4686   */\n  tag_71\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":4633:4636   */\n  dup5\n    /* \"#utility.yul\":4626:4687   */\n  mstore\n    /* \"#utility.yul\":4716:4720   */\n  0x20\n    /* \"#utility.yul\":4711:4714   */\n  dup5\n    /* \"#utility.yul\":4707:4721   */\n  add\n    /* \"#utility.yul\":4700:4721   */\n  swap4\n  pop\n    /* \"#utility.yul\":4576:4731   */\n  pop\n    /* \"#utility.yul\":4560:4564   */\n  0x20\n    /* \"#utility.yul\":4555:4558   */\n  dup2\n    /* \"#utility.yul\":4551:4565   */\n  add\n    /* \"#utility.yul\":4544:4565   */\n  swap1\n  pop\n    /* \"#utility.yul\":4500:4731   */\n  jump(tag_172)\ntag_174:\n    /* \"#utility.yul\":4504:4525   */\n  pop\n    /* \"#utility.yul\":4118:4737   */\n  pop\n  pop\n    /* \"#utility.yul\":4005:4737   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4760:5145   */\ntag_88:\n    /* \"#utility.yul\":4842:4847   */\n  0x00\n    /* \"#utility.yul\":4891:4894   */\n  dup3\n    /* \"#utility.yul\":4884:4888   */\n  0x1f\n    /* \"#utility.yul\":4876:4882   */\n  dup4\n    /* \"#utility.yul\":4872:4889   */\n  add\n    /* \"#utility.yul\":4868:4895   */\n  slt\n    /* \"#utility.yul\":4858:4980   */\n  tag_177\n  jumpi\n    /* \"#utility.yul\":4899:4978   */\n  tag_178\n  tag_72\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":4858:4980   */\ntag_177:\n    /* \"#utility.yul\":5009:5015   */\n  dup2\n    /* \"#utility.yul\":5003:5016   */\n  mload\n    /* \"#utility.yul\":5034:5139   */\n  tag_179\n    /* \"#utility.yul\":5135:5138   */\n  dup5\n    /* \"#utility.yul\":5127:5133   */\n  dup3\n    /* \"#utility.yul\":5120:5124   */\n  0x20\n    /* \"#utility.yul\":5112:5118   */\n  dup7\n    /* \"#utility.yul\":5108:5125   */\n  add\n    /* \"#utility.yul\":5034:5139   */\n  tag_87\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":5025:5139   */\n  swap2\n  pop\n    /* \"#utility.yul\":4848:5145   */\n  pop\n    /* \"#utility.yul\":4760:5145   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5151:5462   */\ntag_89:\n    /* \"#utility.yul\":5228:5232   */\n  0x00\n    /* \"#utility.yul\":5318:5336   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5310:5316   */\n  dup3\n    /* \"#utility.yul\":5307:5337   */\n  gt\n    /* \"#utility.yul\":5304:5360   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":5340:5358   */\n  tag_182\n  tag_75\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":5304:5360   */\ntag_181:\n    /* \"#utility.yul\":5390:5394   */\n  0x20\n    /* \"#utility.yul\":5382:5388   */\n  dup3\n    /* \"#utility.yul\":5378:5395   */\n  mul\n    /* \"#utility.yul\":5370:5395   */\n  swap1\n  pop\n    /* \"#utility.yul\":5450:5454   */\n  0x20\n    /* \"#utility.yul\":5444:5448   */\n  dup2\n    /* \"#utility.yul\":5440:5455   */\n  add\n    /* \"#utility.yul\":5432:5455   */\n  swap1\n  pop\n    /* \"#utility.yul\":5151:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5485:6217   */\ntag_90:\n    /* \"#utility.yul\":5592:5597   */\n  0x00\n    /* \"#utility.yul\":5617:5698   */\n  tag_184\n    /* \"#utility.yul\":5633:5697   */\n  tag_185\n    /* \"#utility.yul\":5690:5696   */\n  dup5\n    /* \"#utility.yul\":5633:5697   */\n  tag_89\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":5617:5698   */\n  tag_77\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":5608:5698   */\n  swap1\n  pop\n    /* \"#utility.yul\":5718:5723   */\n  dup1\n    /* \"#utility.yul\":5747:5753   */\n  dup4\n    /* \"#utility.yul\":5740:5745   */\n  dup3\n    /* \"#utility.yul\":5733:5754   */\n  mstore\n    /* \"#utility.yul\":5781:5785   */\n  0x20\n    /* \"#utility.yul\":5774:5779   */\n  dup3\n    /* \"#utility.yul\":5770:5786   */\n  add\n    /* \"#utility.yul\":5763:5786   */\n  swap1\n  pop\n    /* \"#utility.yul\":5834:5838   */\n  0x20\n    /* \"#utility.yul\":5826:5832   */\n  dup5\n    /* \"#utility.yul\":5822:5839   */\n  mul\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5810:5840   */\n  add\n    /* \"#utility.yul\":5863:5866   */\n  dup6\n    /* \"#utility.yul\":5855:5861   */\n  dup2\n    /* \"#utility.yul\":5852:5867   */\n  gt\n    /* \"#utility.yul\":5849:5971   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":5882:5961   */\n  tag_187\n  tag_86\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":5849:5971   */\ntag_186:\n    /* \"#utility.yul\":5997:6003   */\n  dup4\n    /* \"#utility.yul\":5980:6211   */\ntag_188:\n    /* \"#utility.yul\":6014:6020   */\n  dup2\n    /* \"#utility.yul\":6009:6012   */\n  dup2\n    /* \"#utility.yul\":6006:6021   */\n  lt\n    /* \"#utility.yul\":5980:6211   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":6089:6092   */\n  dup1\n    /* \"#utility.yul\":6118:6166   */\n  tag_191\n    /* \"#utility.yul\":6162:6165   */\n  dup9\n    /* \"#utility.yul\":6150:6160   */\n  dup3\n    /* \"#utility.yul\":6118:6166   */\n  tag_84\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":6113:6116   */\n  dup5\n    /* \"#utility.yul\":6106:6167   */\n  mstore\n    /* \"#utility.yul\":6196:6200   */\n  0x20\n    /* \"#utility.yul\":6191:6194   */\n  dup5\n    /* \"#utility.yul\":6187:6201   */\n  add\n    /* \"#utility.yul\":6180:6201   */\n  swap4\n  pop\n    /* \"#utility.yul\":6056:6211   */\n  pop\n    /* \"#utility.yul\":6040:6044   */\n  0x20\n    /* \"#utility.yul\":6035:6038   */\n  dup2\n    /* \"#utility.yul\":6031:6045   */\n  add\n    /* \"#utility.yul\":6024:6045   */\n  swap1\n  pop\n    /* \"#utility.yul\":5980:6211   */\n  jump(tag_188)\ntag_190:\n    /* \"#utility.yul\":5984:6005   */\n  pop\n    /* \"#utility.yul\":5598:6217   */\n  pop\n  pop\n    /* \"#utility.yul\":5485:6217   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6240:6625   */\ntag_91:\n    /* \"#utility.yul\":6322:6327   */\n  0x00\n    /* \"#utility.yul\":6371:6374   */\n  dup3\n    /* \"#utility.yul\":6364:6368   */\n  0x1f\n    /* \"#utility.yul\":6356:6362   */\n  dup4\n    /* \"#utility.yul\":6352:6369   */\n  add\n    /* \"#utility.yul\":6348:6375   */\n  slt\n    /* \"#utility.yul\":6338:6460   */\n  tag_193\n  jumpi\n    /* \"#utility.yul\":6379:6458   */\n  tag_194\n  tag_72\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":6338:6460   */\ntag_193:\n    /* \"#utility.yul\":6489:6495   */\n  dup2\n    /* \"#utility.yul\":6483:6496   */\n  mload\n    /* \"#utility.yul\":6514:6619   */\n  tag_195\n    /* \"#utility.yul\":6615:6618   */\n  dup5\n    /* \"#utility.yul\":6607:6613   */\n  dup3\n    /* \"#utility.yul\":6600:6604   */\n  0x20\n    /* \"#utility.yul\":6592:6598   */\n  dup7\n    /* \"#utility.yul\":6588:6605   */\n  add\n    /* \"#utility.yul\":6514:6619   */\n  tag_90\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":6505:6619   */\n  swap2\n  pop\n    /* \"#utility.yul\":6328:6625   */\n  pop\n    /* \"#utility.yul\":6240:6625   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6631:8674   */\ntag_3:\n    /* \"#utility.yul\":6825:6831   */\n  0x00\n    /* \"#utility.yul\":6833:6839   */\n  dup1\n    /* \"#utility.yul\":6841:6847   */\n  0x00\n    /* \"#utility.yul\":6849:6855   */\n  dup1\n    /* \"#utility.yul\":6857:6863   */\n  0x00\n    /* \"#utility.yul\":6865:6871   */\n  dup1\n    /* \"#utility.yul\":6873:6879   */\n  0x00\n    /* \"#utility.yul\":6922:6925   */\n  0xe0\n    /* \"#utility.yul\":6910:6919   */\n  dup9\n    /* \"#utility.yul\":6901:6908   */\n  dup11\n    /* \"#utility.yul\":6897:6920   */\n  sub\n    /* \"#utility.yul\":6893:6926   */\n  slt\n    /* \"#utility.yul\":6890:7010   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":6929:7008   */\n  tag_198\n  tag_66\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":6890:7010   */\ntag_197:\n    /* \"#utility.yul\":7049:7050   */\n  0x00\n    /* \"#utility.yul\":7074:7138   */\n  tag_199\n    /* \"#utility.yul\":7130:7137   */\n  dup11\n    /* \"#utility.yul\":7121:7127   */\n  dup3\n    /* \"#utility.yul\":7110:7119   */\n  dup12\n    /* \"#utility.yul\":7106:7128   */\n  add\n    /* \"#utility.yul\":7074:7138   */\n  tag_71\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":7064:7138   */\n  swap8\n  pop\n    /* \"#utility.yul\":7020:7148   */\n  pop\n    /* \"#utility.yul\":7208:7210   */\n  0x20\n    /* \"#utility.yul\":7197:7206   */\n  dup9\n    /* \"#utility.yul\":7193:7211   */\n  add\n    /* \"#utility.yul\":7187:7212   */\n  mload\n    /* \"#utility.yul\":7239:7257   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7231:7237   */\n  dup2\n    /* \"#utility.yul\":7228:7258   */\n  gt\n    /* \"#utility.yul\":7225:7342   */\n  iszero\n  tag_200\n  jumpi\n    /* \"#utility.yul\":7261:7340   */\n  tag_201\n  tag_67\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":7225:7342   */\ntag_200:\n    /* \"#utility.yul\":7366:7440   */\n  tag_202\n    /* \"#utility.yul\":7432:7439   */\n  dup11\n    /* \"#utility.yul\":7423:7429   */\n  dup3\n    /* \"#utility.yul\":7412:7421   */\n  dup12\n    /* \"#utility.yul\":7408:7430   */\n  add\n    /* \"#utility.yul\":7366:7440   */\n  tag_81\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":7356:7440   */\n  swap7\n  pop\n    /* \"#utility.yul\":7158:7450   */\n  pop\n    /* \"#utility.yul\":7510:7512   */\n  0x40\n    /* \"#utility.yul\":7499:7508   */\n  dup9\n    /* \"#utility.yul\":7495:7513   */\n  add\n    /* \"#utility.yul\":7489:7514   */\n  mload\n    /* \"#utility.yul\":7541:7559   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7533:7539   */\n  dup2\n    /* \"#utility.yul\":7530:7560   */\n  gt\n    /* \"#utility.yul\":7527:7644   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":7563:7642   */\n  tag_204\n  tag_67\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":7527:7644   */\ntag_203:\n    /* \"#utility.yul\":7668:7742   */\n  tag_205\n    /* \"#utility.yul\":7734:7741   */\n  dup11\n    /* \"#utility.yul\":7725:7731   */\n  dup3\n    /* \"#utility.yul\":7714:7723   */\n  dup12\n    /* \"#utility.yul\":7710:7732   */\n  add\n    /* \"#utility.yul\":7668:7742   */\n  tag_81\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":7658:7742   */\n  swap6\n  pop\n    /* \"#utility.yul\":7460:7752   */\n  pop\n    /* \"#utility.yul\":7791:7793   */\n  0x60\n    /* \"#utility.yul\":7817:7881   */\n  tag_206\n    /* \"#utility.yul\":7873:7880   */\n  dup11\n    /* \"#utility.yul\":7864:7870   */\n  dup3\n    /* \"#utility.yul\":7853:7862   */\n  dup12\n    /* \"#utility.yul\":7849:7871   */\n  add\n    /* \"#utility.yul\":7817:7881   */\n  tag_84\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":7807:7881   */\n  swap5\n  pop\n    /* \"#utility.yul\":7762:7891   */\n  pop\n    /* \"#utility.yul\":7951:7954   */\n  0x80\n    /* \"#utility.yul\":7940:7949   */\n  dup9\n    /* \"#utility.yul\":7936:7955   */\n  add\n    /* \"#utility.yul\":7930:7956   */\n  mload\n    /* \"#utility.yul\":7983:8001   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7975:7981   */\n  dup2\n    /* \"#utility.yul\":7972:8002   */\n  gt\n    /* \"#utility.yul\":7969:8086   */\n  iszero\n  tag_207\n  jumpi\n    /* \"#utility.yul\":8005:8084   */\n  tag_208\n  tag_67\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":7969:8086   */\ntag_207:\n    /* \"#utility.yul\":8110:8199   */\n  tag_209\n    /* \"#utility.yul\":8191:8198   */\n  dup11\n    /* \"#utility.yul\":8182:8188   */\n  dup3\n    /* \"#utility.yul\":8171:8180   */\n  dup12\n    /* \"#utility.yul\":8167:8189   */\n  add\n    /* \"#utility.yul\":8110:8199   */\n  tag_88\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":8100:8199   */\n  swap4\n  pop\n    /* \"#utility.yul\":7901:8209   */\n  pop\n    /* \"#utility.yul\":8269:8272   */\n  0xa0\n    /* \"#utility.yul\":8258:8267   */\n  dup9\n    /* \"#utility.yul\":8254:8273   */\n  add\n    /* \"#utility.yul\":8248:8274   */\n  mload\n    /* \"#utility.yul\":8301:8319   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8293:8299   */\n  dup2\n    /* \"#utility.yul\":8290:8320   */\n  gt\n    /* \"#utility.yul\":8287:8404   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":8323:8402   */\n  tag_211\n  tag_67\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":8287:8404   */\ntag_210:\n    /* \"#utility.yul\":8428:8517   */\n  tag_212\n    /* \"#utility.yul\":8509:8516   */\n  dup11\n    /* \"#utility.yul\":8500:8506   */\n  dup3\n    /* \"#utility.yul\":8489:8498   */\n  dup12\n    /* \"#utility.yul\":8485:8507   */\n  add\n    /* \"#utility.yul\":8428:8517   */\n  tag_91\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":8418:8517   */\n  swap3\n  pop\n    /* \"#utility.yul\":8219:8527   */\n  pop\n    /* \"#utility.yul\":8566:8569   */\n  0xc0\n    /* \"#utility.yul\":8593:8657   */\n  tag_213\n    /* \"#utility.yul\":8649:8656   */\n  dup11\n    /* \"#utility.yul\":8640:8646   */\n  dup3\n    /* \"#utility.yul\":8629:8638   */\n  dup12\n    /* \"#utility.yul\":8625:8647   */\n  add\n    /* \"#utility.yul\":8593:8657   */\n  tag_84\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":8583:8657   */\n  swap2\n  pop\n    /* \"#utility.yul\":8537:8667   */\n  pop\n    /* \"#utility.yul\":6631:8674   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8680:8779   */\ntag_92:\n    /* \"#utility.yul\":8732:8738   */\n  0x00\n    /* \"#utility.yul\":8766:8771   */\n  dup2\n    /* \"#utility.yul\":8760:8772   */\n  mload\n    /* \"#utility.yul\":8750:8772   */\n  swap1\n  pop\n    /* \"#utility.yul\":8680:8779   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8785:8965   */\ntag_93:\n    /* \"#utility.yul\":8833:8910   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8830:8831   */\n  0x00\n    /* \"#utility.yul\":8823:8911   */\n  mstore\n    /* \"#utility.yul\":8930:8934   */\n  0x22\n    /* \"#utility.yul\":8927:8928   */\n  0x04\n    /* \"#utility.yul\":8920:8935   */\n  mstore\n    /* \"#utility.yul\":8954:8958   */\n  0x24\n    /* \"#utility.yul\":8951:8952   */\n  0x00\n    /* \"#utility.yul\":8944:8959   */\n  revert\n    /* \"#utility.yul\":8971:9291   */\ntag_94:\n    /* \"#utility.yul\":9015:9021   */\n  0x00\n    /* \"#utility.yul\":9052:9053   */\n  0x02\n    /* \"#utility.yul\":9046:9050   */\n  dup3\n    /* \"#utility.yul\":9042:9054   */\n  div\n    /* \"#utility.yul\":9032:9054   */\n  swap1\n  pop\n    /* \"#utility.yul\":9099:9100   */\n  0x01\n    /* \"#utility.yul\":9093:9097   */\n  dup3\n    /* \"#utility.yul\":9089:9101   */\n  and\n    /* \"#utility.yul\":9120:9138   */\n  dup1\n    /* \"#utility.yul\":9110:9191   */\n  tag_217\n  jumpi\n    /* \"#utility.yul\":9176:9180   */\n  0x7f\n    /* \"#utility.yul\":9168:9174   */\n  dup3\n    /* \"#utility.yul\":9164:9181   */\n  and\n    /* \"#utility.yul\":9154:9181   */\n  swap2\n  pop\n    /* \"#utility.yul\":9110:9191   */\ntag_217:\n    /* \"#utility.yul\":9238:9240   */\n  0x20\n    /* \"#utility.yul\":9230:9236   */\n  dup3\n    /* \"#utility.yul\":9227:9241   */\n  lt\n    /* \"#utility.yul\":9207:9225   */\n  dup2\n    /* \"#utility.yul\":9204:9242   */\n  sub\n    /* \"#utility.yul\":9201:9285   */\n  tag_218\n  jumpi\n    /* \"#utility.yul\":9257:9275   */\n  tag_219\n  tag_93\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":9201:9285   */\ntag_218:\n    /* \"#utility.yul\":9022:9291   */\n  pop\n    /* \"#utility.yul\":8971:9291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9297:9438   */\ntag_95:\n    /* \"#utility.yul\":9346:9350   */\n  0x00\n    /* \"#utility.yul\":9369:9372   */\n  dup2\n    /* \"#utility.yul\":9361:9372   */\n  swap1\n  pop\n    /* \"#utility.yul\":9392:9395   */\n  dup2\n    /* \"#utility.yul\":9389:9390   */\n  0x00\n    /* \"#utility.yul\":9382:9396   */\n  mstore\n    /* \"#utility.yul\":9426:9430   */\n  0x20\n    /* \"#utility.yul\":9423:9424   */\n  0x00\n    /* \"#utility.yul\":9413:9431   */\n  keccak256\n    /* \"#utility.yul\":9405:9431   */\n  swap1\n  pop\n    /* \"#utility.yul\":9297:9438   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9444:9537   */\ntag_96:\n    /* \"#utility.yul\":9481:9487   */\n  0x00\n    /* \"#utility.yul\":9528:9530   */\n  0x20\n    /* \"#utility.yul\":9523:9525   */\n  0x1f\n    /* \"#utility.yul\":9516:9521   */\n  dup4\n    /* \"#utility.yul\":9512:9526   */\n  add\n    /* \"#utility.yul\":9508:9531   */\n  div\n    /* \"#utility.yul\":9498:9531   */\n  swap1\n  pop\n    /* \"#utility.yul\":9444:9537   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9543:9650   */\ntag_97:\n    /* \"#utility.yul\":9587:9595   */\n  0x00\n    /* \"#utility.yul\":9637:9642   */\n  dup3\n    /* \"#utility.yul\":9631:9635   */\n  dup3\n    /* \"#utility.yul\":9627:9643   */\n  shl\n    /* \"#utility.yul\":9606:9643   */\n  swap1\n  pop\n    /* \"#utility.yul\":9543:9650   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9656:10049   */\ntag_98:\n    /* \"#utility.yul\":9725:9731   */\n  0x00\n    /* \"#utility.yul\":9775:9776   */\n  0x08\n    /* \"#utility.yul\":9763:9773   */\n  dup4\n    /* \"#utility.yul\":9759:9777   */\n  mul\n    /* \"#utility.yul\":9798:9895   */\n  tag_224\n    /* \"#utility.yul\":9828:9894   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9817:9826   */\n  dup3\n    /* \"#utility.yul\":9798:9895   */\n  tag_97\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":9916:9955   */\n  tag_225\n    /* \"#utility.yul\":9946:9954   */\n  dup7\n    /* \"#utility.yul\":9935:9944   */\n  dup4\n    /* \"#utility.yul\":9916:9955   */\n  tag_97\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":9904:9955   */\n  swap6\n  pop\n    /* \"#utility.yul\":9988:9992   */\n  dup1\n    /* \"#utility.yul\":9984:9993   */\n  not\n    /* \"#utility.yul\":9977:9982   */\n  dup5\n    /* \"#utility.yul\":9973:9994   */\n  and\n    /* \"#utility.yul\":9964:9994   */\n  swap4\n  pop\n    /* \"#utility.yul\":10037:10041   */\n  dup1\n    /* \"#utility.yul\":10027:10035   */\n  dup7\n    /* \"#utility.yul\":10023:10042   */\n  and\n    /* \"#utility.yul\":10016:10021   */\n  dup5\n    /* \"#utility.yul\":10013:10043   */\n  or\n    /* \"#utility.yul\":10003:10043   */\n  swap3\n  pop\n    /* \"#utility.yul\":9732:10049   */\n  pop\n  pop\n    /* \"#utility.yul\":9656:10049   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10055:10115   */\ntag_99:\n    /* \"#utility.yul\":10083:10086   */\n  0x00\n    /* \"#utility.yul\":10104:10109   */\n  dup2\n    /* \"#utility.yul\":10097:10109   */\n  swap1\n  pop\n    /* \"#utility.yul\":10055:10115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10121:10263   */\ntag_100:\n    /* \"#utility.yul\":10171:10180   */\n  0x00\n    /* \"#utility.yul\":10204:10257   */\n  tag_228\n    /* \"#utility.yul\":10222:10256   */\n  tag_229\n    /* \"#utility.yul\":10231:10255   */\n  tag_230\n    /* \"#utility.yul\":10249:10254   */\n  dup5\n    /* \"#utility.yul\":10231:10255   */\n  tag_82\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":10222:10256   */\n  tag_99\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":10204:10257   */\n  tag_82\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":10191:10257   */\n  swap1\n  pop\n    /* \"#utility.yul\":10121:10263   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10269:10344   */\ntag_101:\n    /* \"#utility.yul\":10312:10315   */\n  0x00\n    /* \"#utility.yul\":10333:10338   */\n  dup2\n    /* \"#utility.yul\":10326:10338   */\n  swap1\n  pop\n    /* \"#utility.yul\":10269:10344   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10350:10619   */\ntag_102:\n    /* \"#utility.yul\":10460:10499   */\n  tag_233\n    /* \"#utility.yul\":10491:10498   */\n  dup4\n    /* \"#utility.yul\":10460:10499   */\n  tag_100\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":10521:10612   */\n  tag_234\n    /* \"#utility.yul\":10570:10611   */\n  tag_235\n    /* \"#utility.yul\":10594:10610   */\n  dup3\n    /* \"#utility.yul\":10570:10611   */\n  tag_101\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":10562:10568   */\n  dup5\n    /* \"#utility.yul\":10555:10559   */\n  dup5\n    /* \"#utility.yul\":10549:10560   */\n  sload\n    /* \"#utility.yul\":10521:10612   */\n  tag_98\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":10515:10519   */\n  dup3\n    /* \"#utility.yul\":10508:10613   */\n  sstore\n    /* \"#utility.yul\":10426:10619   */\n  pop\n    /* \"#utility.yul\":10350:10619   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10625:10698   */\ntag_103:\n    /* \"#utility.yul\":10670:10673   */\n  0x00\n    /* \"#utility.yul\":10625:10698   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":10704:10893   */\ntag_104:\n    /* \"#utility.yul\":10781:10813   */\n  tag_238\n  tag_103\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":10822:10887   */\n  tag_239\n    /* \"#utility.yul\":10880:10886   */\n  dup2\n    /* \"#utility.yul\":10872:10878   */\n  dup5\n    /* \"#utility.yul\":10866:10870   */\n  dup5\n    /* \"#utility.yul\":10822:10887   */\n  tag_102\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":10757:10893   */\n  pop\n    /* \"#utility.yul\":10704:10893   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10899:11085   */\ntag_105:\n    /* \"#utility.yul\":10959:11079   */\ntag_241:\n    /* \"#utility.yul\":10976:10979   */\n  dup2\n    /* \"#utility.yul\":10969:10974   */\n  dup2\n    /* \"#utility.yul\":10966:10980   */\n  lt\n    /* \"#utility.yul\":10959:11079   */\n  iszero\n  tag_243\n  jumpi\n    /* \"#utility.yul\":11030:11069   */\n  tag_244\n    /* \"#utility.yul\":11067:11068   */\n  0x00\n    /* \"#utility.yul\":11060:11065   */\n  dup3\n    /* \"#utility.yul\":11030:11069   */\n  tag_104\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":11003:11004   */\n  0x01\n    /* \"#utility.yul\":10996:11001   */\n  dup2\n    /* \"#utility.yul\":10992:11005   */\n  add\n    /* \"#utility.yul\":10983:11005   */\n  swap1\n  pop\n    /* \"#utility.yul\":10959:11079   */\n  jump(tag_241)\ntag_243:\n    /* \"#utility.yul\":10899:11085   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11091:11634   */\ntag_106:\n    /* \"#utility.yul\":11192:11194   */\n  0x1f\n    /* \"#utility.yul\":11187:11190   */\n  dup3\n    /* \"#utility.yul\":11184:11195   */\n  gt\n    /* \"#utility.yul\":11181:11627   */\n  iszero\n  tag_246\n  jumpi\n    /* \"#utility.yul\":11226:11264   */\n  tag_247\n    /* \"#utility.yul\":11258:11263   */\n  dup2\n    /* \"#utility.yul\":11226:11264   */\n  tag_95\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":11310:11339   */\n  tag_248\n    /* \"#utility.yul\":11328:11338   */\n  dup5\n    /* \"#utility.yul\":11310:11339   */\n  tag_96\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":11300:11308   */\n  dup2\n    /* \"#utility.yul\":11296:11340   */\n  add\n    /* \"#utility.yul\":11493:11495   */\n  0x20\n    /* \"#utility.yul\":11481:11491   */\n  dup6\n    /* \"#utility.yul\":11478:11496   */\n  lt\n    /* \"#utility.yul\":11475:11524   */\n  iszero\n  tag_249\n  jumpi\n    /* \"#utility.yul\":11514:11522   */\n  dup2\n    /* \"#utility.yul\":11499:11522   */\n  swap1\n  pop\n    /* \"#utility.yul\":11475:11524   */\ntag_249:\n    /* \"#utility.yul\":11537:11617   */\n  tag_250\n    /* \"#utility.yul\":11593:11615   */\n  tag_251\n    /* \"#utility.yul\":11611:11614   */\n  dup6\n    /* \"#utility.yul\":11593:11615   */\n  tag_96\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":11583:11591   */\n  dup4\n    /* \"#utility.yul\":11579:11616   */\n  add\n    /* \"#utility.yul\":11566:11577   */\n  dup3\n    /* \"#utility.yul\":11537:11617   */\n  tag_105\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":11196:11627   */\n  pop\n  pop\n    /* \"#utility.yul\":11181:11627   */\ntag_246:\n    /* \"#utility.yul\":11091:11634   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11640:11757   */\ntag_107:\n    /* \"#utility.yul\":11694:11702   */\n  0x00\n    /* \"#utility.yul\":11744:11749   */\n  dup3\n    /* \"#utility.yul\":11738:11742   */\n  dup3\n    /* \"#utility.yul\":11734:11750   */\n  shr\n    /* \"#utility.yul\":11713:11750   */\n  swap1\n  pop\n    /* \"#utility.yul\":11640:11757   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11763:11932   */\ntag_108:\n    /* \"#utility.yul\":11807:11813   */\n  0x00\n    /* \"#utility.yul\":11840:11891   */\n  tag_254\n    /* \"#utility.yul\":11888:11889   */\n  0x00\n    /* \"#utility.yul\":11884:11890   */\n  not\n    /* \"#utility.yul\":11876:11881   */\n  dup5\n    /* \"#utility.yul\":11873:11874   */\n  0x08\n    /* \"#utility.yul\":11869:11882   */\n  mul\n    /* \"#utility.yul\":11840:11891   */\n  tag_107\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":11836:11892   */\n  not\n    /* \"#utility.yul\":11921:11925   */\n  dup1\n    /* \"#utility.yul\":11915:11919   */\n  dup4\n    /* \"#utility.yul\":11911:11926   */\n  and\n    /* \"#utility.yul\":11901:11926   */\n  swap2\n  pop\n    /* \"#utility.yul\":11814:11932   */\n  pop\n    /* \"#utility.yul\":11763:11932   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11937:12232   */\ntag_109:\n    /* \"#utility.yul\":12013:12017   */\n  0x00\n    /* \"#utility.yul\":12159:12188   */\n  tag_256\n    /* \"#utility.yul\":12184:12187   */\n  dup4\n    /* \"#utility.yul\":12178:12182   */\n  dup4\n    /* \"#utility.yul\":12159:12188   */\n  tag_108\n  jump\t// in\ntag_256:\n    /* \"#utility.yul\":12151:12188   */\n  swap2\n  pop\n    /* \"#utility.yul\":12221:12224   */\n  dup3\n    /* \"#utility.yul\":12218:12219   */\n  0x02\n    /* \"#utility.yul\":12214:12225   */\n  mul\n    /* \"#utility.yul\":12208:12212   */\n  dup3\n    /* \"#utility.yul\":12205:12226   */\n  or\n    /* \"#utility.yul\":12197:12226   */\n  swap1\n  pop\n    /* \"#utility.yul\":11937:12232   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12237:13632   */\ntag_9:\n    /* \"#utility.yul\":12354:12391   */\n  tag_258\n    /* \"#utility.yul\":12387:12390   */\n  dup3\n    /* \"#utility.yul\":12354:12391   */\n  tag_92\n  jump\t// in\ntag_258:\n    /* \"#utility.yul\":12456:12474   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":12448:12454   */\n  dup2\n    /* \"#utility.yul\":12445:12475   */\n  gt\n    /* \"#utility.yul\":12442:12498   */\n  iszero\n  tag_259\n  jumpi\n    /* \"#utility.yul\":12478:12496   */\n  tag_260\n  tag_75\n  jump\t// in\ntag_260:\n    /* \"#utility.yul\":12442:12498   */\ntag_259:\n    /* \"#utility.yul\":12522:12560   */\n  tag_261\n    /* \"#utility.yul\":12554:12558   */\n  dup3\n    /* \"#utility.yul\":12548:12559   */\n  sload\n    /* \"#utility.yul\":12522:12560   */\n  tag_94\n  jump\t// in\ntag_261:\n    /* \"#utility.yul\":12607:12674   */\n  tag_262\n    /* \"#utility.yul\":12667:12673   */\n  dup3\n    /* \"#utility.yul\":12659:12665   */\n  dup3\n    /* \"#utility.yul\":12653:12657   */\n  dup6\n    /* \"#utility.yul\":12607:12674   */\n  tag_106\n  jump\t// in\ntag_262:\n    /* \"#utility.yul\":12701:12702   */\n  0x00\n    /* \"#utility.yul\":12725:12729   */\n  0x20\n    /* \"#utility.yul\":12712:12729   */\n  swap1\n  pop\n    /* \"#utility.yul\":12757:12759   */\n  0x1f\n    /* \"#utility.yul\":12749:12755   */\n  dup4\n    /* \"#utility.yul\":12746:12760   */\n  gt\n    /* \"#utility.yul\":12774:12775   */\n  0x01\n    /* \"#utility.yul\":12769:13387   */\n  dup2\n  eq\n  tag_264\n  jumpi\n    /* \"#utility.yul\":13431:13432   */\n  0x00\n    /* \"#utility.yul\":13448:13454   */\n  dup5\n    /* \"#utility.yul\":13445:13522   */\n  iszero\n  tag_265\n  jumpi\n    /* \"#utility.yul\":13497:13506   */\n  dup3\n    /* \"#utility.yul\":13492:13495   */\n  dup8\n    /* \"#utility.yul\":13488:13507   */\n  add\n    /* \"#utility.yul\":13482:13508   */\n  mload\n    /* \"#utility.yul\":13473:13508   */\n  swap1\n  pop\n    /* \"#utility.yul\":13445:13522   */\ntag_265:\n    /* \"#utility.yul\":13548:13615   */\n  tag_266\n    /* \"#utility.yul\":13608:13614   */\n  dup6\n    /* \"#utility.yul\":13601:13606   */\n  dup3\n    /* \"#utility.yul\":13548:13615   */\n  tag_109\n  jump\t// in\ntag_266:\n    /* \"#utility.yul\":13542:13546   */\n  dup7\n    /* \"#utility.yul\":13535:13616   */\n  sstore\n    /* \"#utility.yul\":13404:13626   */\n  pop\n    /* \"#utility.yul\":12739:13626   */\n  jump(tag_263)\n    /* \"#utility.yul\":12769:13387   */\ntag_264:\n    /* \"#utility.yul\":12821:12825   */\n  0x1f\n    /* \"#utility.yul\":12817:12826   */\n  not\n    /* \"#utility.yul\":12809:12815   */\n  dup5\n    /* \"#utility.yul\":12805:12827   */\n  and\n    /* \"#utility.yul\":12855:12892   */\n  tag_267\n    /* \"#utility.yul\":12887:12891   */\n  dup7\n    /* \"#utility.yul\":12855:12892   */\n  tag_95\n  jump\t// in\ntag_267:\n    /* \"#utility.yul\":12914:12915   */\n  0x00\n    /* \"#utility.yul\":12928:13136   */\ntag_268:\n    /* \"#utility.yul\":12942:12949   */\n  dup3\n    /* \"#utility.yul\":12939:12940   */\n  dup2\n    /* \"#utility.yul\":12936:12950   */\n  lt\n    /* \"#utility.yul\":12928:13136   */\n  iszero\n  tag_270\n  jumpi\n    /* \"#utility.yul\":13021:13030   */\n  dup5\n    /* \"#utility.yul\":13016:13019   */\n  dup10\n    /* \"#utility.yul\":13012:13031   */\n  add\n    /* \"#utility.yul\":13006:13032   */\n  mload\n    /* \"#utility.yul\":12998:13004   */\n  dup3\n    /* \"#utility.yul\":12991:13033   */\n  sstore\n    /* \"#utility.yul\":13072:13073   */\n  0x01\n    /* \"#utility.yul\":13064:13070   */\n  dup3\n    /* \"#utility.yul\":13060:13074   */\n  add\n    /* \"#utility.yul\":13050:13074   */\n  swap2\n  pop\n    /* \"#utility.yul\":13119:13121   */\n  0x20\n    /* \"#utility.yul\":13108:13117   */\n  dup6\n    /* \"#utility.yul\":13104:13122   */\n  add\n    /* \"#utility.yul\":13091:13122   */\n  swap5\n  pop\n    /* \"#utility.yul\":12965:12969   */\n  0x20\n    /* \"#utility.yul\":12962:12963   */\n  dup2\n    /* \"#utility.yul\":12958:12970   */\n  add\n    /* \"#utility.yul\":12953:12970   */\n  swap1\n  pop\n    /* \"#utility.yul\":12928:13136   */\n  jump(tag_268)\ntag_270:\n    /* \"#utility.yul\":13164:13170   */\n  dup7\n    /* \"#utility.yul\":13155:13162   */\n  dup4\n    /* \"#utility.yul\":13152:13171   */\n  lt\n    /* \"#utility.yul\":13149:13328   */\n  iszero\n  tag_271\n  jumpi\n    /* \"#utility.yul\":13222:13231   */\n  dup5\n    /* \"#utility.yul\":13217:13220   */\n  dup10\n    /* \"#utility.yul\":13213:13232   */\n  add\n    /* \"#utility.yul\":13207:13233   */\n  mload\n    /* \"#utility.yul\":13265:13313   */\n  tag_272\n    /* \"#utility.yul\":13307:13311   */\n  0x1f\n    /* \"#utility.yul\":13299:13305   */\n  dup10\n    /* \"#utility.yul\":13295:13312   */\n  and\n    /* \"#utility.yul\":13284:13293   */\n  dup3\n    /* \"#utility.yul\":13265:13313   */\n  tag_108\n  jump\t// in\ntag_272:\n    /* \"#utility.yul\":13257:13263   */\n  dup4\n    /* \"#utility.yul\":13250:13314   */\n  sstore\n    /* \"#utility.yul\":13172:13328   */\n  pop\n    /* \"#utility.yul\":13149:13328   */\ntag_271:\n    /* \"#utility.yul\":13374:13375   */\n  0x01\n    /* \"#utility.yul\":13370:13371   */\n  0x02\n    /* \"#utility.yul\":13362:13368   */\n  dup9\n    /* \"#utility.yul\":13358:13372   */\n  mul\n    /* \"#utility.yul\":13354:13376   */\n  add\n    /* \"#utility.yul\":13348:13352   */\n  dup9\n    /* \"#utility.yul\":13341:13377   */\n  sstore\n    /* \"#utility.yul\":12776:13387   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":12739:13626   */\ntag_263:\n  pop\n    /* \"#utility.yul\":12329:13632   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":12237:13632   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13638:13756   */\ntag_110:\n    /* \"#utility.yul\":13725:13749   */\n  tag_274\n    /* \"#utility.yul\":13743:13748   */\n  dup2\n    /* \"#utility.yul\":13725:13749   */\n  tag_69\n  jump\t// in\ntag_274:\n    /* \"#utility.yul\":13720:13723   */\n  dup3\n    /* \"#utility.yul\":13713:13750   */\n  mstore\n    /* \"#utility.yul\":13638:13756   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13762:13984   */\ntag_14:\n    /* \"#utility.yul\":13855:13859   */\n  0x00\n    /* \"#utility.yul\":13893:13895   */\n  0x20\n    /* \"#utility.yul\":13882:13891   */\n  dup3\n    /* \"#utility.yul\":13878:13896   */\n  add\n    /* \"#utility.yul\":13870:13896   */\n  swap1\n  pop\n    /* \"#utility.yul\":13906:13977   */\n  tag_276\n    /* \"#utility.yul\":13974:13975   */\n  0x00\n    /* \"#utility.yul\":13963:13972   */\n  dup4\n    /* \"#utility.yul\":13959:13976   */\n  add\n    /* \"#utility.yul\":13950:13956   */\n  dup5\n    /* \"#utility.yul\":13906:13977   */\n  tag_110\n  jump\t// in\ntag_276:\n    /* \"#utility.yul\":13762:13984   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13990:14159   */\ntag_111:\n    /* \"#utility.yul\":14074:14085   */\n  0x00\n    /* \"#utility.yul\":14108:14114   */\n  dup3\n    /* \"#utility.yul\":14103:14106   */\n  dup3\n    /* \"#utility.yul\":14096:14115   */\n  mstore\n    /* \"#utility.yul\":14148:14152   */\n  0x20\n    /* \"#utility.yul\":14143:14146   */\n  dup3\n    /* \"#utility.yul\":14139:14153   */\n  add\n    /* \"#utility.yul\":14124:14153   */\n  swap1\n  pop\n    /* \"#utility.yul\":13990:14159   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14165:14394   */\ntag_112:\n    /* \"#utility.yul\":14305:14339   */\n  0x737562736372696265727320616e6420746865697220616d6f756e747320646f\n    /* \"#utility.yul\":14301:14302   */\n  0x00\n    /* \"#utility.yul\":14293:14299   */\n  dup3\n    /* \"#utility.yul\":14289:14303   */\n  add\n    /* \"#utility.yul\":14282:14340   */\n  mstore\n    /* \"#utility.yul\":14374:14386   */\n  0x206e6f74206d6174636800000000000000000000000000000000000000000000\n    /* \"#utility.yul\":14369:14371   */\n  0x20\n    /* \"#utility.yul\":14361:14367   */\n  dup3\n    /* \"#utility.yul\":14357:14372   */\n  add\n    /* \"#utility.yul\":14350:14387   */\n  mstore\n    /* \"#utility.yul\":14165:14394   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14400:14766   */\ntag_113:\n    /* \"#utility.yul\":14542:14545   */\n  0x00\n    /* \"#utility.yul\":14563:14630   */\n  tag_280\n    /* \"#utility.yul\":14627:14629   */\n  0x2a\n    /* \"#utility.yul\":14622:14625   */\n  dup4\n    /* \"#utility.yul\":14563:14630   */\n  tag_111\n  jump\t// in\ntag_280:\n    /* \"#utility.yul\":14556:14630   */\n  swap2\n  pop\n    /* \"#utility.yul\":14639:14732   */\n  tag_281\n    /* \"#utility.yul\":14728:14731   */\n  dup3\n    /* \"#utility.yul\":14639:14732   */\n  tag_112\n  jump\t// in\ntag_281:\n    /* \"#utility.yul\":14757:14759   */\n  0x40\n    /* \"#utility.yul\":14752:14755   */\n  dup3\n    /* \"#utility.yul\":14748:14760   */\n  add\n    /* \"#utility.yul\":14741:14760   */\n  swap1\n  pop\n    /* \"#utility.yul\":14400:14766   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14772:15191   */\ntag_20:\n    /* \"#utility.yul\":14938:14942   */\n  0x00\n    /* \"#utility.yul\":14976:14978   */\n  0x20\n    /* \"#utility.yul\":14965:14974   */\n  dup3\n    /* \"#utility.yul\":14961:14979   */\n  add\n    /* \"#utility.yul\":14953:14979   */\n  swap1\n  pop\n    /* \"#utility.yul\":15025:15034   */\n  dup2\n    /* \"#utility.yul\":15019:15023   */\n  dup2\n    /* \"#utility.yul\":15015:15035   */\n  sub\n    /* \"#utility.yul\":15011:15012   */\n  0x00\n    /* \"#utility.yul\":15000:15009   */\n  dup4\n    /* \"#utility.yul\":14996:15013   */\n  add\n    /* \"#utility.yul\":14989:15036   */\n  mstore\n    /* \"#utility.yul\":15053:15184   */\n  tag_283\n    /* \"#utility.yul\":15179:15183   */\n  dup2\n    /* \"#utility.yul\":15053:15184   */\n  tag_113\n  jump\t// in\ntag_283:\n    /* \"#utility.yul\":15045:15184   */\n  swap1\n  pop\n    /* \"#utility.yul\":14772:15191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15197:15377   */\ntag_114:\n    /* \"#utility.yul\":15245:15322   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":15242:15243   */\n  0x00\n    /* \"#utility.yul\":15235:15323   */\n  mstore\n    /* \"#utility.yul\":15342:15346   */\n  0x11\n    /* \"#utility.yul\":15339:15340   */\n  0x04\n    /* \"#utility.yul\":15332:15347   */\n  mstore\n    /* \"#utility.yul\":15366:15370   */\n  0x24\n    /* \"#utility.yul\":15363:15364   */\n  0x00\n    /* \"#utility.yul\":15356:15371   */\n  revert\n    /* \"#utility.yul\":15383:15574   */\ntag_22:\n    /* \"#utility.yul\":15423:15426   */\n  0x00\n    /* \"#utility.yul\":15442:15462   */\n  tag_286\n    /* \"#utility.yul\":15460:15461   */\n  dup3\n    /* \"#utility.yul\":15442:15462   */\n  tag_82\n  jump\t// in\ntag_286:\n    /* \"#utility.yul\":15437:15462   */\n  swap2\n  pop\n    /* \"#utility.yul\":15476:15496   */\n  tag_287\n    /* \"#utility.yul\":15494:15495   */\n  dup4\n    /* \"#utility.yul\":15476:15496   */\n  tag_82\n  jump\t// in\ntag_287:\n    /* \"#utility.yul\":15471:15496   */\n  swap3\n  pop\n    /* \"#utility.yul\":15519:15520   */\n  dup3\n    /* \"#utility.yul\":15516:15517   */\n  dup3\n    /* \"#utility.yul\":15512:15521   */\n  add\n    /* \"#utility.yul\":15505:15521   */\n  swap1\n  pop\n    /* \"#utility.yul\":15540:15543   */\n  dup1\n    /* \"#utility.yul\":15537:15538   */\n  dup3\n    /* \"#utility.yul\":15534:15544   */\n  gt\n    /* \"#utility.yul\":15531:15567   */\n  iszero\n  tag_288\n  jumpi\n    /* \"#utility.yul\":15547:15565   */\n  tag_289\n  tag_114\n  jump\t// in\ntag_289:\n    /* \"#utility.yul\":15531:15567   */\ntag_288:\n    /* \"#utility.yul\":15383:15574   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15580:15760   */\ntag_28:\n    /* \"#utility.yul\":15628:15705   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":15625:15626   */\n  0x00\n    /* \"#utility.yul\":15618:15706   */\n  mstore\n    /* \"#utility.yul\":15725:15729   */\n  0x32\n    /* \"#utility.yul\":15722:15723   */\n  0x04\n    /* \"#utility.yul\":15715:15730   */\n  mstore\n    /* \"#utility.yul\":15749:15753   */\n  0x24\n    /* \"#utility.yul\":15746:15747   */\n  0x00\n    /* \"#utility.yul\":15739:15754   */\n  revert\n    /* \"#utility.yul\":15766:15999   */\ntag_41:\n    /* \"#utility.yul\":15805:15808   */\n  0x00\n    /* \"#utility.yul\":15828:15852   */\n  tag_292\n    /* \"#utility.yul\":15846:15851   */\n  dup3\n    /* \"#utility.yul\":15828:15852   */\n  tag_82\n  jump\t// in\ntag_292:\n    /* \"#utility.yul\":15819:15852   */\n  swap2\n  pop\n    /* \"#utility.yul\":15874:15940   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":15867:15872   */\n  dup3\n    /* \"#utility.yul\":15864:15941   */\n  sub\n    /* \"#utility.yul\":15861:15964   */\n  tag_293\n  jumpi\n    /* \"#utility.yul\":15944:15962   */\n  tag_294\n  tag_114\n  jump\t// in\ntag_294:\n    /* \"#utility.yul\":15861:15964   */\ntag_293:\n    /* \"#utility.yul\":15991:15992   */\n  0x01\n    /* \"#utility.yul\":15984:15989   */\n  dup3\n    /* \"#utility.yul\":15980:15993   */\n  add\n    /* \"#utility.yul\":15973:15993   */\n  swap1\n  pop\n    /* \"#utility.yul\":15766:15999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":16005:16199   */\ntag_43:\n    /* \"#utility.yul\":16045:16049   */\n  0x00\n    /* \"#utility.yul\":16065:16085   */\n  tag_296\n    /* \"#utility.yul\":16083:16084   */\n  dup3\n    /* \"#utility.yul\":16065:16085   */\n  tag_82\n  jump\t// in\ntag_296:\n    /* \"#utility.yul\":16060:16085   */\n  swap2\n  pop\n    /* \"#utility.yul\":16099:16119   */\n  tag_297\n    /* \"#utility.yul\":16117:16118   */\n  dup4\n    /* \"#utility.yul\":16099:16119   */\n  tag_82\n  jump\t// in\ntag_297:\n    /* \"#utility.yul\":16094:16119   */\n  swap3\n  pop\n    /* \"#utility.yul\":16143:16144   */\n  dup3\n    /* \"#utility.yul\":16140:16141   */\n  dup3\n    /* \"#utility.yul\":16136:16145   */\n  sub\n    /* \"#utility.yul\":16128:16145   */\n  swap1\n  pop\n    /* \"#utility.yul\":16167:16168   */\n  dup2\n    /* \"#utility.yul\":16161:16165   */\n  dup2\n    /* \"#utility.yul\":16158:16169   */\n  gt\n    /* \"#utility.yul\":16155:16192   */\n  iszero\n  tag_298\n  jumpi\n    /* \"#utility.yul\":16172:16190   */\n  tag_299\n  tag_114\n  jump\t// in\ntag_299:\n    /* \"#utility.yul\":16155:16192   */\ntag_298:\n    /* \"#utility.yul\":16005:16199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":16205:16323   */\ntag_115:\n    /* \"#utility.yul\":16292:16316   */\n  tag_301\n    /* \"#utility.yul\":16310:16315   */\n  dup2\n    /* \"#utility.yul\":16292:16316   */\n  tag_82\n  jump\t// in\ntag_301:\n    /* \"#utility.yul\":16287:16290   */\n  dup3\n    /* \"#utility.yul\":16280:16317   */\n  mstore\n    /* \"#utility.yul\":16205:16323   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":16329:16771   */\ntag_60:\n    /* \"#utility.yul\":16478:16482   */\n  0x00\n    /* \"#utility.yul\":16516:16518   */\n  0x60\n    /* \"#utility.yul\":16505:16514   */\n  dup3\n    /* \"#utility.yul\":16501:16519   */\n  add\n    /* \"#utility.yul\":16493:16519   */\n  swap1\n  pop\n    /* \"#utility.yul\":16529:16600   */\n  tag_303\n    /* \"#utility.yul\":16597:16598   */\n  0x00\n    /* \"#utility.yul\":16586:16595   */\n  dup4\n    /* \"#utility.yul\":16582:16599   */\n  add\n    /* \"#utility.yul\":16573:16579   */\n  dup7\n    /* \"#utility.yul\":16529:16600   */\n  tag_110\n  jump\t// in\ntag_303:\n    /* \"#utility.yul\":16610:16682   */\n  tag_304\n    /* \"#utility.yul\":16678:16680   */\n  0x20\n    /* \"#utility.yul\":16667:16676   */\n  dup4\n    /* \"#utility.yul\":16663:16681   */\n  add\n    /* \"#utility.yul\":16654:16660   */\n  dup6\n    /* \"#utility.yul\":16610:16682   */\n  tag_115\n  jump\t// in\ntag_304:\n    /* \"#utility.yul\":16692:16764   */\n  tag_305\n    /* \"#utility.yul\":16760:16762   */\n  0x40\n    /* \"#utility.yul\":16749:16758   */\n  dup4\n    /* \"#utility.yul\":16745:16763   */\n  add\n    /* \"#utility.yul\":16736:16742   */\n  dup5\n    /* \"#utility.yul\":16692:16764   */\n  tag_115\n  jump\t// in\ntag_305:\n    /* \"#utility.yul\":16329:16771   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":16777:16999   */\ntag_64:\n    /* \"#utility.yul\":16870:16874   */\n  0x00\n    /* \"#utility.yul\":16908:16910   */\n  0x20\n    /* \"#utility.yul\":16897:16906   */\n  dup3\n    /* \"#utility.yul\":16893:16911   */\n  add\n    /* \"#utility.yul\":16885:16911   */\n  swap1\n  pop\n    /* \"#utility.yul\":16921:16992   */\n  tag_307\n    /* \"#utility.yul\":16989:16990   */\n  0x00\n    /* \"#utility.yul\":16978:16987   */\n  dup4\n    /* \"#utility.yul\":16974:16991   */\n  add\n    /* \"#utility.yul\":16965:16971   */\n  dup5\n    /* \"#utility.yul\":16921:16992   */\n  tag_115\n  jump\t// in\ntag_307:\n    /* \"#utility.yul\":16777:16999   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"userfrontend/contracts/ERC20subscription.sol\":206:3775  contract ERC20subscription is ERC20, Ownable {... */\ntag_47:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"userfrontend/contracts/ERC20subscription.sol\":206:3775  contract ERC20subscription is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xb93a5396\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb93a5396\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xbd7dac92\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc0a4d64d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9f3adb0e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xae84827a\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0de65a44\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3399:3516  function setDocumentURI (string memory __documentURI) public onlyOwner{... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2610:3283  function transferFrom(... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/contracts/ERC20subscription.sol\":1956:2040  function decimals() public pure override returns (uint8) {... */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/contracts/ERC20subscription.sol\":360:389  uint256 public _adminLockTime */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2048:2506  function transfer(... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3652:3772  function ForceBurn(address _useraddress, uint256 amount) public onlyOwner {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3524:3644  function ForceMint(address _useraddress, uint256 amount) public onlyOwner {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3291:3391  function getDocumentURI() public view returns (string memory) {... */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2514:2602  function getLockTime() public view returns (uint256) {... */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_25:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_100\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_101\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_102\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_103\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_102:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3399:3516  function setDocumentURI (string memory __documentURI) public onlyOwner{... */\n    tag_37:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_105\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_105:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3495:3508  __documentURI */\n      dup1\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3480:3492  _documentURI */\n      0x0a\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3480:3508  _documentURI = __documentURI */\n      swap1\n      dup2\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      pop\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3399:3516  function setDocumentURI (string memory __documentURI) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_39:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2610:3283  function transferFrom(... */\n    tag_45:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2730:2734  bool */\n      0x00\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2759:2766  owner() */\n      tag_112\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2759:2764  owner */\n      tag_59\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2759:2766  owner() */\n      jump\t// in\n    tag_112:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2751:2766  from == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2751:2755  from */\n      dup5\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2751:2766  from == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2747:3006  if (from == owner()) {... */\n      tag_113\n      jumpi\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2828:2842  _adminLockTime */\n      sload(0x09)\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2809:2824  block.timestamp */\n      timestamp\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2809:2842  block.timestamp >= _adminLockTime */\n      lt\n      iszero\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2783:2903  require(... */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2747:3006  if (from == owner()) {... */\n      jump(tag_117)\n    tag_113:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2963:2972  _lockTime */\n      sload(0x08)\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2944:2959  block.timestamp */\n      timestamp\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2944:2972  block.timestamp >= _lockTime */\n      lt\n      iszero\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2936:2994  require(block.timestamp >= _lockTime, \"Tokens are locked\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2747:3006  if (from == owner()) {... */\n    tag_117:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3016:3039  uint256 newTotalBalance */\n      0x00\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3058:3064  amount */\n      dup3\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3042:3055  balanceOf(to) */\n      tag_121\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3052:3054  to */\n      dup6\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3042:3051  balanceOf */\n      tag_54\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3042:3055  balanceOf(to) */\n      jump\t// in\n    tag_121:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3042:3064  balanceOf(to) + amount */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3016:3064  uint256 newTotalBalance = balanceOf(to) + amount */\n      swap1\n      pop\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3138:3141  100 */\n      0x64\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3121:3134  totalSupply() */\n      tag_124\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3121:3132  totalSupply */\n      tag_39\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3121:3134  totalSupply() */\n      jump\t// in\n    tag_124:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3116:3118  20 */\n      0x14\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3116:3134  20 * totalSupply() */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3115:3141  (20 * totalSupply()) / 100 */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3097:3112  newTotalBalance */\n      dup2\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3097:3141  newTotalBalance < (20 * totalSupply()) / 100 */\n      lt\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3075:3219  require(... */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3239:3275  super.transferFrom(from, to, amount) */\n      tag_132\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3258:3262  from */\n      dup6\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3264:3266  to */\n      dup6\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3268:3274  amount */\n      dup6\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3239:3257  super.transferFrom */\n      tag_133\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3239:3275  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_132:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3232:3275  return super.transferFrom(from, to, amount) */\n      swap2\n      pop\n      pop\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2610:3283  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/contracts/ERC20subscription.sol\":1956:2040  function decimals() public pure override returns (uint8) {... */\n    tag_48:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2006:2011  uint8 */\n      0x00\n        /* \"userfrontend/contracts/ERC20subscription.sol\":1956:2040  function decimals() public pure override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_139\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_140\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_139:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_59:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_63:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_94\n      jump\t// in\n    tag_143:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_94\n      jump\t// in\n    tag_144:\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"userfrontend/contracts/ERC20subscription.sol\":360:389  uint256 public _adminLockTime */\n    tag_66:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2048:2506  function transfer(... */\n    tag_70:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2158:2162  bool */\n      0x00\n        /* \"userfrontend/contracts/ERC20subscription.sol\":520:527  owner() */\n      tag_149\n        /* \"userfrontend/contracts/ERC20subscription.sol\":520:525  owner */\n      tag_59\n        /* \"userfrontend/contracts/ERC20subscription.sol\":520:527  owner() */\n      jump\t// in\n    tag_149:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":506:527  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/contracts/ERC20subscription.sol\":506:516  msg.sender */\n      caller\n        /* \"userfrontend/contracts/ERC20subscription.sol\":506:527  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"userfrontend/contracts/ERC20subscription.sol\":502:688  if (msg.sender == owner()) {... */\n      tag_150\n      jumpi\n        /* \"userfrontend/contracts/ERC20subscription.sol\":589:603  _adminLockTime */\n      sload(0x09)\n        /* \"userfrontend/contracts/ERC20subscription.sol\":570:585  block.timestamp */\n      timestamp\n        /* \"userfrontend/contracts/ERC20subscription.sol\":570:603  block.timestamp >= _adminLockTime */\n      lt\n      iszero\n        /* \"userfrontend/contracts/ERC20subscription.sol\":544:676  require(... */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":502:688  if (msg.sender == owner()) {... */\n    tag_150:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":725:734  _lockTime */\n      sload(0x08)\n        /* \"userfrontend/contracts/ERC20subscription.sol\":706:721  block.timestamp */\n      timestamp\n        /* \"userfrontend/contracts/ERC20subscription.sol\":706:734  block.timestamp >= _lockTime */\n      lt\n      iszero\n        /* \"userfrontend/contracts/ERC20subscription.sol\":698:755  require(block.timestamp >= _lockTime, \"not for sale yet\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2175:2198  uint256 newTotalBalance */\n      0x00\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2217:2223  amount */\n      dup3\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2201:2214  balanceOf(to) */\n      tag_158\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2211:2213  to */\n      dup6\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2201:2210  balanceOf */\n      tag_54\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2201:2214  balanceOf(to) */\n      jump\t// in\n    tag_158:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2201:2223  balanceOf(to) + amount */\n      tag_159\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_159:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2175:2223  uint256 newTotalBalance = balanceOf(to) + amount */\n      swap1\n      pop\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2297:2300  100 */\n      0x64\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2280:2293  totalSupply() */\n      tag_160\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2280:2291  totalSupply */\n      tag_39\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2280:2293  totalSupply() */\n      jump\t// in\n    tag_160:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2275:2277  20 */\n      0x14\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2275:2293  20 * totalSupply() */\n      tag_161\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_161:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2274:2300  (20 * totalSupply()) / 100 */\n      tag_162\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_162:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2256:2271  newTotalBalance */\n      dup2\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2256:2300  newTotalBalance < (20 * totalSupply()) / 100 */\n      lt\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2234:2378  require(... */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_131\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2396:2452  TransferWithSymbol(msg.sender, to, amount, _tokenSymbol) */\n      0x8519cdb8ad47f1f5f5bc583d2063d1fc1ffed7dac0cab9e8b1f6492aa60cbd7f\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2415:2425  msg.sender */\n      caller\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2427:2429  to */\n      dup6\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2431:2437  amount */\n      dup6\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2439:2451  _tokenSymbol */\n      0x0b\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2396:2452  TransferWithSymbol(msg.sender, to, amount, _tokenSymbol) */\n      mload(0x40)\n      tag_165\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2472:2498  super.transfer(to, amount) */\n      tag_167\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2487:2489  to */\n      dup5\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2491:2497  amount */\n      dup5\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2472:2486  super.transfer */\n      tag_168\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2472:2498  super.transfer(to, amount) */\n      jump\t// in\n    tag_167:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2465:2498  return super.transfer(to, amount) */\n      swap2\n      pop\n      pop\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2048:2506  function transfer(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3652:3772  function ForceBurn(address _useraddress, uint256 amount) public onlyOwner {... */\n    tag_74:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_170\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_170:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3737:3764  _burn(_useraddress, amount) */\n      tag_172\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3743:3755  _useraddress */\n      dup3\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3757:3763  amount */\n      dup3\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3737:3742  _burn */\n      tag_173\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3737:3764  _burn(_useraddress, amount) */\n      jump\t// in\n    tag_172:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3652:3772  function ForceBurn(address _useraddress, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3524:3644  function ForceMint(address _useraddress, uint256 amount) public onlyOwner {... */\n    tag_77:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_175\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3609:3636  _mint(_useraddress, amount) */\n      tag_177\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3615:3627  _useraddress */\n      dup3\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3629:3635  amount */\n      dup3\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3609:3614  _mint */\n      tag_178\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3609:3636  _mint(_useraddress, amount) */\n      jump\t// in\n    tag_177:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3524:3644  function ForceMint(address _useraddress, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3291:3391  function getDocumentURI() public view returns (string memory) {... */\n    tag_79:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3338:3351  string memory */\n      0x60\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3371:3383  _documentURI */\n      0x0a\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3364:3383  return _documentURI */\n      dup1\n      sload\n      tag_180\n      swap1\n      tag_94\n      jump\t// in\n    tag_180:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_181\n      swap1\n      tag_94\n      jump\t// in\n    tag_181:\n      dup1\n      iszero\n      tag_182\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_183\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_182)\n    tag_183:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_184:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_184\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"userfrontend/contracts/ERC20subscription.sol\":3291:3391  function getDocumentURI() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2514:2602  function getLockTime() public view returns (uint256) {... */\n    tag_82:\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2558:2565  uint256 */\n      0x00\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2585:2594  _lockTime */\n      sload(0x08)\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2578:2594  return _lockTime */\n      swap1\n      pop\n        /* \"userfrontend/contracts/ERC20subscription.sol\":2514:2602  function getLockTime() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_87:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_91:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_188\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_188:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_190:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_192\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_140\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_192:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_101:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_103:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_195\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_196\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_195:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_106:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_198\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_101\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_199\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_59\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_199:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_200\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_201\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_101\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_201:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_200:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_133:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_204\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_101\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_204:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_205\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_206\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_205:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_207\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_208\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_207:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_140:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_168:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_211\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_101\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_212\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_208\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_212:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_173:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_214:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_216\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_217\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_216:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_178:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_219:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_221\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_217\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_221:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_196:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_223:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_225\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_225:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_228\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_227:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_206:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_230\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_87\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_230:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_231\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_232:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_235\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_196\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_235:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_231:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_208:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_237:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_239:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_241\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_217\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_241:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_217:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_243\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_244\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_244:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_245)\n    tag_243:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_246:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_245:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_248\n      jumpi\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_249)\n    tag_248:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_249:\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_250\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_251:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_252:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_253:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_314:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_314)\n    tag_316:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_254:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_255:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_319\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_251\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":818:889   */\n      tag_320\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_252\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_321\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_253\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":988:1017   */\n      tag_322\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_254\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_27:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_324\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_255\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1424   */\n    tag_256:\n        /* \"#utility.yul\":1382:1388   */\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x40\n        /* \"#utility.yul\":1409:1418   */\n      mload\n        /* \"#utility.yul\":1399:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1349:1424   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_257:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1553:1670   */\n    tag_258:\n        /* \"#utility.yul\":1662:1663   */\n      0x00\n        /* \"#utility.yul\":1659:1660   */\n      dup1\n        /* \"#utility.yul\":1652:1664   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_259:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_260:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_330\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_259\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_261:\n        /* \"#utility.yul\":1983:2007   */\n      tag_332\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_260\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_333:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_262:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_335\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_261\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_263:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_264:\n        /* \"#utility.yul\":2339:2363   */\n      tag_338\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_263\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_339:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_265:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_341\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_264\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_30:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_344\n      tag_257\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2632:2751   */\n    tag_343:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_345\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_262\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_346\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_265\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_266:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_267:\n        /* \"#utility.yul\":3196:3217   */\n      tag_349\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_266\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_33:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_351\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_267\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3563   */\n    tag_268:\n        /* \"#utility.yul\":3555:3556   */\n      0x00\n        /* \"#utility.yul\":3552:3553   */\n      dup1\n        /* \"#utility.yul\":3545:3557   */\n      revert\n        /* \"#utility.yul\":3569:3686   */\n    tag_269:\n        /* \"#utility.yul\":3678:3679   */\n      0x00\n        /* \"#utility.yul\":3675:3676   */\n      dup1\n        /* \"#utility.yul\":3668:3680   */\n      revert\n        /* \"#utility.yul\":3692:3872   */\n    tag_270:\n        /* \"#utility.yul\":3740:3817   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3737:3738   */\n      0x00\n        /* \"#utility.yul\":3730:3818   */\n      mstore\n        /* \"#utility.yul\":3837:3841   */\n      0x41\n        /* \"#utility.yul\":3834:3835   */\n      0x04\n        /* \"#utility.yul\":3827:3842   */\n      mstore\n        /* \"#utility.yul\":3861:3865   */\n      0x24\n        /* \"#utility.yul\":3858:3859   */\n      0x00\n        /* \"#utility.yul\":3851:3866   */\n      revert\n        /* \"#utility.yul\":3878:4159   */\n    tag_271:\n        /* \"#utility.yul\":3961:3988   */\n      tag_356\n        /* \"#utility.yul\":3983:3987   */\n      dup3\n        /* \"#utility.yul\":3961:3988   */\n      tag_254\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3953:3959   */\n      dup2\n        /* \"#utility.yul\":3949:3989   */\n      add\n        /* \"#utility.yul\":4091:4097   */\n      dup2\n        /* \"#utility.yul\":4079:4089   */\n      dup2\n        /* \"#utility.yul\":4076:4098   */\n      lt\n        /* \"#utility.yul\":4055:4073   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4043:4053   */\n      dup3\n        /* \"#utility.yul\":4040:4074   */\n      gt\n        /* \"#utility.yul\":4037:4099   */\n      or\n        /* \"#utility.yul\":4034:4122   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":4102:4120   */\n      tag_358\n      tag_270\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4034:4122   */\n    tag_357:\n        /* \"#utility.yul\":4142:4152   */\n      dup1\n        /* \"#utility.yul\":4138:4140   */\n      0x40\n        /* \"#utility.yul\":4131:4153   */\n      mstore\n        /* \"#utility.yul\":3921:4159   */\n      pop\n        /* \"#utility.yul\":3878:4159   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4165:4294   */\n    tag_272:\n        /* \"#utility.yul\":4199:4205   */\n      0x00\n        /* \"#utility.yul\":4226:4246   */\n      tag_360\n      tag_256\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4216:4246   */\n      swap1\n      pop\n        /* \"#utility.yul\":4255:4288   */\n      tag_361\n        /* \"#utility.yul\":4283:4287   */\n      dup3\n        /* \"#utility.yul\":4275:4281   */\n      dup3\n        /* \"#utility.yul\":4255:4288   */\n      tag_271\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4165:4294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4300:4608   */\n    tag_273:\n        /* \"#utility.yul\":4362:4366   */\n      0x00\n        /* \"#utility.yul\":4452:4470   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4444:4450   */\n      dup3\n        /* \"#utility.yul\":4441:4471   */\n      gt\n        /* \"#utility.yul\":4438:4494   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":4474:4492   */\n      tag_364\n      tag_270\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4438:4494   */\n    tag_363:\n        /* \"#utility.yul\":4512:4541   */\n      tag_365\n        /* \"#utility.yul\":4534:4540   */\n      dup3\n        /* \"#utility.yul\":4512:4541   */\n      tag_254\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4504:4541   */\n      swap1\n      pop\n        /* \"#utility.yul\":4596:4600   */\n      0x20\n        /* \"#utility.yul\":4590:4594   */\n      dup2\n        /* \"#utility.yul\":4586:4601   */\n      add\n        /* \"#utility.yul\":4578:4601   */\n      swap1\n      pop\n        /* \"#utility.yul\":4300:4608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4614:4760   */\n    tag_274:\n        /* \"#utility.yul\":4711:4717   */\n      dup3\n        /* \"#utility.yul\":4706:4709   */\n      dup2\n        /* \"#utility.yul\":4701:4704   */\n      dup4\n        /* \"#utility.yul\":4688:4718   */\n      calldatacopy\n        /* \"#utility.yul\":4752:4753   */\n      0x00\n        /* \"#utility.yul\":4743:4749   */\n      dup4\n        /* \"#utility.yul\":4738:4741   */\n      dup4\n        /* \"#utility.yul\":4734:4750   */\n      add\n        /* \"#utility.yul\":4727:4754   */\n      mstore\n        /* \"#utility.yul\":4614:4760   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4766:5191   */\n    tag_275:\n        /* \"#utility.yul\":4844:4849   */\n      0x00\n        /* \"#utility.yul\":4869:4935   */\n      tag_368\n        /* \"#utility.yul\":4885:4934   */\n      tag_369\n        /* \"#utility.yul\":4927:4933   */\n      dup5\n        /* \"#utility.yul\":4885:4934   */\n      tag_273\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4869:4935   */\n      tag_272\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4860:4935   */\n      swap1\n      pop\n        /* \"#utility.yul\":4958:4964   */\n      dup3\n        /* \"#utility.yul\":4951:4956   */\n      dup2\n        /* \"#utility.yul\":4944:4965   */\n      mstore\n        /* \"#utility.yul\":4996:5000   */\n      0x20\n        /* \"#utility.yul\":4989:4994   */\n      dup2\n        /* \"#utility.yul\":4985:5001   */\n      add\n        /* \"#utility.yul\":5034:5037   */\n      dup5\n        /* \"#utility.yul\":5025:5031   */\n      dup5\n        /* \"#utility.yul\":5020:5023   */\n      dup5\n        /* \"#utility.yul\":5016:5032   */\n      add\n        /* \"#utility.yul\":5013:5038   */\n      gt\n        /* \"#utility.yul\":5010:5122   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":5041:5120   */\n      tag_371\n      tag_269\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5010:5122   */\n    tag_370:\n        /* \"#utility.yul\":5131:5185   */\n      tag_372\n        /* \"#utility.yul\":5178:5184   */\n      dup5\n        /* \"#utility.yul\":5173:5176   */\n      dup3\n        /* \"#utility.yul\":5168:5171   */\n      dup6\n        /* \"#utility.yul\":5131:5185   */\n      tag_274\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4850:5191   */\n      pop\n        /* \"#utility.yul\":4766:5191   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5211:5551   */\n    tag_276:\n        /* \"#utility.yul\":5267:5272   */\n      0x00\n        /* \"#utility.yul\":5316:5319   */\n      dup3\n        /* \"#utility.yul\":5309:5313   */\n      0x1f\n        /* \"#utility.yul\":5301:5307   */\n      dup4\n        /* \"#utility.yul\":5297:5314   */\n      add\n        /* \"#utility.yul\":5293:5320   */\n      slt\n        /* \"#utility.yul\":5283:5405   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":5324:5403   */\n      tag_375\n      tag_268\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5283:5405   */\n    tag_374:\n        /* \"#utility.yul\":5441:5447   */\n      dup2\n        /* \"#utility.yul\":5428:5448   */\n      calldataload\n        /* \"#utility.yul\":5466:5545   */\n      tag_376\n        /* \"#utility.yul\":5541:5544   */\n      dup5\n        /* \"#utility.yul\":5533:5539   */\n      dup3\n        /* \"#utility.yul\":5526:5530   */\n      0x20\n        /* \"#utility.yul\":5518:5524   */\n      dup7\n        /* \"#utility.yul\":5514:5531   */\n      add\n        /* \"#utility.yul\":5466:5545   */\n      tag_275\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5457:5545   */\n      swap2\n      pop\n        /* \"#utility.yul\":5273:5551   */\n      pop\n        /* \"#utility.yul\":5211:5551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5557:6066   */\n    tag_36:\n        /* \"#utility.yul\":5626:5632   */\n      0x00\n        /* \"#utility.yul\":5675:5677   */\n      0x20\n        /* \"#utility.yul\":5663:5672   */\n      dup3\n        /* \"#utility.yul\":5654:5661   */\n      dup5\n        /* \"#utility.yul\":5650:5673   */\n      sub\n        /* \"#utility.yul\":5646:5678   */\n      slt\n        /* \"#utility.yul\":5643:5762   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":5681:5760   */\n      tag_379\n      tag_257\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5643:5762   */\n    tag_378:\n        /* \"#utility.yul\":5829:5830   */\n      0x00\n        /* \"#utility.yul\":5818:5827   */\n      dup3\n        /* \"#utility.yul\":5814:5831   */\n      add\n        /* \"#utility.yul\":5801:5832   */\n      calldataload\n        /* \"#utility.yul\":5859:5877   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5851:5857   */\n      dup2\n        /* \"#utility.yul\":5848:5878   */\n      gt\n        /* \"#utility.yul\":5845:5962   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":5881:5960   */\n      tag_381\n      tag_258\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5845:5962   */\n    tag_380:\n        /* \"#utility.yul\":5986:6049   */\n      tag_382\n        /* \"#utility.yul\":6041:6048   */\n      dup5\n        /* \"#utility.yul\":6032:6038   */\n      dup3\n        /* \"#utility.yul\":6021:6030   */\n      dup6\n        /* \"#utility.yul\":6017:6039   */\n      add\n        /* \"#utility.yul\":5986:6049   */\n      tag_276\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5976:6049   */\n      swap2\n      pop\n        /* \"#utility.yul\":5772:6059   */\n      pop\n        /* \"#utility.yul\":5557:6066   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6072:6190   */\n    tag_277:\n        /* \"#utility.yul\":6159:6183   */\n      tag_384\n        /* \"#utility.yul\":6177:6182   */\n      dup2\n        /* \"#utility.yul\":6159:6183   */\n      tag_263\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":6154:6157   */\n      dup3\n        /* \"#utility.yul\":6147:6184   */\n      mstore\n        /* \"#utility.yul\":6072:6190   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6196:6418   */\n    tag_41:\n        /* \"#utility.yul\":6289:6293   */\n      0x00\n        /* \"#utility.yul\":6327:6329   */\n      0x20\n        /* \"#utility.yul\":6316:6325   */\n      dup3\n        /* \"#utility.yul\":6312:6330   */\n      add\n        /* \"#utility.yul\":6304:6330   */\n      swap1\n      pop\n        /* \"#utility.yul\":6340:6411   */\n      tag_386\n        /* \"#utility.yul\":6408:6409   */\n      0x00\n        /* \"#utility.yul\":6397:6406   */\n      dup4\n        /* \"#utility.yul\":6393:6410   */\n      add\n        /* \"#utility.yul\":6384:6390   */\n      dup5\n        /* \"#utility.yul\":6340:6411   */\n      tag_277\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6196:6418   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6424:7043   */\n    tag_44:\n        /* \"#utility.yul\":6501:6507   */\n      0x00\n        /* \"#utility.yul\":6509:6515   */\n      dup1\n        /* \"#utility.yul\":6517:6523   */\n      0x00\n        /* \"#utility.yul\":6566:6568   */\n      0x60\n        /* \"#utility.yul\":6554:6563   */\n      dup5\n        /* \"#utility.yul\":6545:6552   */\n      dup7\n        /* \"#utility.yul\":6541:6564   */\n      sub\n        /* \"#utility.yul\":6537:6569   */\n      slt\n        /* \"#utility.yul\":6534:6653   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":6572:6651   */\n      tag_389\n      tag_257\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6534:6653   */\n    tag_388:\n        /* \"#utility.yul\":6692:6693   */\n      0x00\n        /* \"#utility.yul\":6717:6770   */\n      tag_390\n        /* \"#utility.yul\":6762:6769   */\n      dup7\n        /* \"#utility.yul\":6753:6759   */\n      dup3\n        /* \"#utility.yul\":6742:6751   */\n      dup8\n        /* \"#utility.yul\":6738:6760   */\n      add\n        /* \"#utility.yul\":6717:6770   */\n      tag_262\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6707:6770   */\n      swap4\n      pop\n        /* \"#utility.yul\":6663:6780   */\n      pop\n        /* \"#utility.yul\":6819:6821   */\n      0x20\n        /* \"#utility.yul\":6845:6898   */\n      tag_391\n        /* \"#utility.yul\":6890:6897   */\n      dup7\n        /* \"#utility.yul\":6881:6887   */\n      dup3\n        /* \"#utility.yul\":6870:6879   */\n      dup8\n        /* \"#utility.yul\":6866:6888   */\n      add\n        /* \"#utility.yul\":6845:6898   */\n      tag_262\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6835:6898   */\n      swap3\n      pop\n        /* \"#utility.yul\":6790:6908   */\n      pop\n        /* \"#utility.yul\":6947:6949   */\n      0x40\n        /* \"#utility.yul\":6973:7026   */\n      tag_392\n        /* \"#utility.yul\":7018:7025   */\n      dup7\n        /* \"#utility.yul\":7009:7015   */\n      dup3\n        /* \"#utility.yul\":6998:7007   */\n      dup8\n        /* \"#utility.yul\":6994:7016   */\n      add\n        /* \"#utility.yul\":6973:7026   */\n      tag_265\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6963:7026   */\n      swap2\n      pop\n        /* \"#utility.yul\":6918:7036   */\n      pop\n        /* \"#utility.yul\":6424:7043   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7049:7135   */\n    tag_278:\n        /* \"#utility.yul\":7084:7091   */\n      0x00\n        /* \"#utility.yul\":7124:7128   */\n      0xff\n        /* \"#utility.yul\":7117:7122   */\n      dup3\n        /* \"#utility.yul\":7113:7129   */\n      and\n        /* \"#utility.yul\":7102:7129   */\n      swap1\n      pop\n        /* \"#utility.yul\":7049:7135   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7141:7253   */\n    tag_279:\n        /* \"#utility.yul\":7224:7246   */\n      tag_395\n        /* \"#utility.yul\":7240:7245   */\n      dup2\n        /* \"#utility.yul\":7224:7246   */\n      tag_278\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7219:7222   */\n      dup3\n        /* \"#utility.yul\":7212:7247   */\n      mstore\n        /* \"#utility.yul\":7141:7253   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7259:7473   */\n    tag_50:\n        /* \"#utility.yul\":7348:7352   */\n      0x00\n        /* \"#utility.yul\":7386:7388   */\n      0x20\n        /* \"#utility.yul\":7375:7384   */\n      dup3\n        /* \"#utility.yul\":7371:7389   */\n      add\n        /* \"#utility.yul\":7363:7389   */\n      swap1\n      pop\n        /* \"#utility.yul\":7399:7466   */\n      tag_397\n        /* \"#utility.yul\":7463:7464   */\n      0x00\n        /* \"#utility.yul\":7452:7461   */\n      dup4\n        /* \"#utility.yul\":7448:7465   */\n      add\n        /* \"#utility.yul\":7439:7445   */\n      dup5\n        /* \"#utility.yul\":7399:7466   */\n      tag_279\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7259:7473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7479:7808   */\n    tag_53:\n        /* \"#utility.yul\":7538:7544   */\n      0x00\n        /* \"#utility.yul\":7587:7589   */\n      0x20\n        /* \"#utility.yul\":7575:7584   */\n      dup3\n        /* \"#utility.yul\":7566:7573   */\n      dup5\n        /* \"#utility.yul\":7562:7585   */\n      sub\n        /* \"#utility.yul\":7558:7590   */\n      slt\n        /* \"#utility.yul\":7555:7674   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":7593:7672   */\n      tag_400\n      tag_257\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7555:7674   */\n    tag_399:\n        /* \"#utility.yul\":7713:7714   */\n      0x00\n        /* \"#utility.yul\":7738:7791   */\n      tag_401\n        /* \"#utility.yul\":7783:7790   */\n      dup5\n        /* \"#utility.yul\":7774:7780   */\n      dup3\n        /* \"#utility.yul\":7763:7772   */\n      dup6\n        /* \"#utility.yul\":7759:7781   */\n      add\n        /* \"#utility.yul\":7738:7791   */\n      tag_262\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7728:7791   */\n      swap2\n      pop\n        /* \"#utility.yul\":7684:7801   */\n      pop\n        /* \"#utility.yul\":7479:7808   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7814:7932   */\n    tag_280:\n        /* \"#utility.yul\":7901:7925   */\n      tag_403\n        /* \"#utility.yul\":7919:7924   */\n      dup2\n        /* \"#utility.yul\":7901:7925   */\n      tag_260\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7896:7899   */\n      dup3\n        /* \"#utility.yul\":7889:7926   */\n      mstore\n        /* \"#utility.yul\":7814:7932   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7938:8160   */\n    tag_61:\n        /* \"#utility.yul\":8031:8035   */\n      0x00\n        /* \"#utility.yul\":8069:8071   */\n      0x20\n        /* \"#utility.yul\":8058:8067   */\n      dup3\n        /* \"#utility.yul\":8054:8072   */\n      add\n        /* \"#utility.yul\":8046:8072   */\n      swap1\n      pop\n        /* \"#utility.yul\":8082:8153   */\n      tag_405\n        /* \"#utility.yul\":8150:8151   */\n      0x00\n        /* \"#utility.yul\":8139:8148   */\n      dup4\n        /* \"#utility.yul\":8135:8152   */\n      add\n        /* \"#utility.yul\":8126:8132   */\n      dup5\n        /* \"#utility.yul\":8082:8153   */\n      tag_280\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7938:8160   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8166:8640   */\n    tag_86:\n        /* \"#utility.yul\":8234:8240   */\n      0x00\n        /* \"#utility.yul\":8242:8248   */\n      dup1\n        /* \"#utility.yul\":8291:8293   */\n      0x40\n        /* \"#utility.yul\":8279:8288   */\n      dup4\n        /* \"#utility.yul\":8270:8277   */\n      dup6\n        /* \"#utility.yul\":8266:8289   */\n      sub\n        /* \"#utility.yul\":8262:8294   */\n      slt\n        /* \"#utility.yul\":8259:8378   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":8297:8376   */\n      tag_408\n      tag_257\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8259:8378   */\n    tag_407:\n        /* \"#utility.yul\":8417:8418   */\n      0x00\n        /* \"#utility.yul\":8442:8495   */\n      tag_409\n        /* \"#utility.yul\":8487:8494   */\n      dup6\n        /* \"#utility.yul\":8478:8484   */\n      dup3\n        /* \"#utility.yul\":8467:8476   */\n      dup7\n        /* \"#utility.yul\":8463:8485   */\n      add\n        /* \"#utility.yul\":8442:8495   */\n      tag_262\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8432:8495   */\n      swap3\n      pop\n        /* \"#utility.yul\":8388:8505   */\n      pop\n        /* \"#utility.yul\":8544:8546   */\n      0x20\n        /* \"#utility.yul\":8570:8623   */\n      tag_410\n        /* \"#utility.yul\":8615:8622   */\n      dup6\n        /* \"#utility.yul\":8606:8612   */\n      dup3\n        /* \"#utility.yul\":8595:8604   */\n      dup7\n        /* \"#utility.yul\":8591:8613   */\n      add\n        /* \"#utility.yul\":8570:8623   */\n      tag_262\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8560:8623   */\n      swap2\n      pop\n        /* \"#utility.yul\":8515:8633   */\n      pop\n        /* \"#utility.yul\":8166:8640   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8646:8826   */\n    tag_281:\n        /* \"#utility.yul\":8694:8771   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8691:8692   */\n      0x00\n        /* \"#utility.yul\":8684:8772   */\n      mstore\n        /* \"#utility.yul\":8791:8795   */\n      0x22\n        /* \"#utility.yul\":8788:8789   */\n      0x04\n        /* \"#utility.yul\":8781:8796   */\n      mstore\n        /* \"#utility.yul\":8815:8819   */\n      0x24\n        /* \"#utility.yul\":8812:8813   */\n      0x00\n        /* \"#utility.yul\":8805:8820   */\n      revert\n        /* \"#utility.yul\":8832:9152   */\n    tag_94:\n        /* \"#utility.yul\":8876:8882   */\n      0x00\n        /* \"#utility.yul\":8913:8914   */\n      0x02\n        /* \"#utility.yul\":8907:8911   */\n      dup3\n        /* \"#utility.yul\":8903:8915   */\n      div\n        /* \"#utility.yul\":8893:8915   */\n      swap1\n      pop\n        /* \"#utility.yul\":8960:8961   */\n      0x01\n        /* \"#utility.yul\":8954:8958   */\n      dup3\n        /* \"#utility.yul\":8950:8962   */\n      and\n        /* \"#utility.yul\":8981:8999   */\n      dup1\n        /* \"#utility.yul\":8971:9052   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":9037:9041   */\n      0x7f\n        /* \"#utility.yul\":9029:9035   */\n      dup3\n        /* \"#utility.yul\":9025:9042   */\n      and\n        /* \"#utility.yul\":9015:9042   */\n      swap2\n      pop\n        /* \"#utility.yul\":8971:9052   */\n    tag_413:\n        /* \"#utility.yul\":9099:9101   */\n      0x20\n        /* \"#utility.yul\":9091:9097   */\n      dup3\n        /* \"#utility.yul\":9088:9102   */\n      lt\n        /* \"#utility.yul\":9068:9086   */\n      dup2\n        /* \"#utility.yul\":9065:9103   */\n      sub\n        /* \"#utility.yul\":9062:9146   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":9118:9136   */\n      tag_415\n      tag_281\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":9062:9146   */\n    tag_414:\n        /* \"#utility.yul\":8883:9152   */\n      pop\n        /* \"#utility.yul\":8832:9152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9158:9299   */\n    tag_282:\n        /* \"#utility.yul\":9207:9211   */\n      0x00\n        /* \"#utility.yul\":9230:9233   */\n      dup2\n        /* \"#utility.yul\":9222:9233   */\n      swap1\n      pop\n        /* \"#utility.yul\":9253:9256   */\n      dup2\n        /* \"#utility.yul\":9250:9251   */\n      0x00\n        /* \"#utility.yul\":9243:9257   */\n      mstore\n        /* \"#utility.yul\":9287:9291   */\n      0x20\n        /* \"#utility.yul\":9284:9285   */\n      0x00\n        /* \"#utility.yul\":9274:9292   */\n      keccak256\n        /* \"#utility.yul\":9266:9292   */\n      swap1\n      pop\n        /* \"#utility.yul\":9158:9299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9305:9398   */\n    tag_283:\n        /* \"#utility.yul\":9342:9348   */\n      0x00\n        /* \"#utility.yul\":9389:9391   */\n      0x20\n        /* \"#utility.yul\":9384:9386   */\n      0x1f\n        /* \"#utility.yul\":9377:9382   */\n      dup4\n        /* \"#utility.yul\":9373:9387   */\n      add\n        /* \"#utility.yul\":9369:9392   */\n      div\n        /* \"#utility.yul\":9359:9392   */\n      swap1\n      pop\n        /* \"#utility.yul\":9305:9398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9404:9511   */\n    tag_284:\n        /* \"#utility.yul\":9448:9456   */\n      0x00\n        /* \"#utility.yul\":9498:9503   */\n      dup3\n        /* \"#utility.yul\":9492:9496   */\n      dup3\n        /* \"#utility.yul\":9488:9504   */\n      shl\n        /* \"#utility.yul\":9467:9504   */\n      swap1\n      pop\n        /* \"#utility.yul\":9404:9511   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9517:9910   */\n    tag_285:\n        /* \"#utility.yul\":9586:9592   */\n      0x00\n        /* \"#utility.yul\":9636:9637   */\n      0x08\n        /* \"#utility.yul\":9624:9634   */\n      dup4\n        /* \"#utility.yul\":9620:9638   */\n      mul\n        /* \"#utility.yul\":9659:9756   */\n      tag_420\n        /* \"#utility.yul\":9689:9755   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9678:9687   */\n      dup3\n        /* \"#utility.yul\":9659:9756   */\n      tag_284\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9777:9816   */\n      tag_421\n        /* \"#utility.yul\":9807:9815   */\n      dup7\n        /* \"#utility.yul\":9796:9805   */\n      dup4\n        /* \"#utility.yul\":9777:9816   */\n      tag_284\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9765:9816   */\n      swap6\n      pop\n        /* \"#utility.yul\":9849:9853   */\n      dup1\n        /* \"#utility.yul\":9845:9854   */\n      not\n        /* \"#utility.yul\":9838:9843   */\n      dup5\n        /* \"#utility.yul\":9834:9855   */\n      and\n        /* \"#utility.yul\":9825:9855   */\n      swap4\n      pop\n        /* \"#utility.yul\":9898:9902   */\n      dup1\n        /* \"#utility.yul\":9888:9896   */\n      dup7\n        /* \"#utility.yul\":9884:9903   */\n      and\n        /* \"#utility.yul\":9877:9882   */\n      dup5\n        /* \"#utility.yul\":9874:9904   */\n      or\n        /* \"#utility.yul\":9864:9904   */\n      swap3\n      pop\n        /* \"#utility.yul\":9593:9910   */\n      pop\n      pop\n        /* \"#utility.yul\":9517:9910   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9916:9976   */\n    tag_286:\n        /* \"#utility.yul\":9944:9947   */\n      0x00\n        /* \"#utility.yul\":9965:9970   */\n      dup2\n        /* \"#utility.yul\":9958:9970   */\n      swap1\n      pop\n        /* \"#utility.yul\":9916:9976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9982:10124   */\n    tag_287:\n        /* \"#utility.yul\":10032:10041   */\n      0x00\n        /* \"#utility.yul\":10065:10118   */\n      tag_424\n        /* \"#utility.yul\":10083:10117   */\n      tag_425\n        /* \"#utility.yul\":10092:10116   */\n      tag_426\n        /* \"#utility.yul\":10110:10115   */\n      dup5\n        /* \"#utility.yul\":10092:10116   */\n      tag_263\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":10083:10117   */\n      tag_286\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":10065:10118   */\n      tag_263\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":10052:10118   */\n      swap1\n      pop\n        /* \"#utility.yul\":9982:10124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10130:10205   */\n    tag_288:\n        /* \"#utility.yul\":10173:10176   */\n      0x00\n        /* \"#utility.yul\":10194:10199   */\n      dup2\n        /* \"#utility.yul\":10187:10199   */\n      swap1\n      pop\n        /* \"#utility.yul\":10130:10205   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10211:10480   */\n    tag_289:\n        /* \"#utility.yul\":10321:10360   */\n      tag_429\n        /* \"#utility.yul\":10352:10359   */\n      dup4\n        /* \"#utility.yul\":10321:10360   */\n      tag_287\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":10382:10473   */\n      tag_430\n        /* \"#utility.yul\":10431:10472   */\n      tag_431\n        /* \"#utility.yul\":10455:10471   */\n      dup3\n        /* \"#utility.yul\":10431:10472   */\n      tag_288\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10423:10429   */\n      dup5\n        /* \"#utility.yul\":10416:10420   */\n      dup5\n        /* \"#utility.yul\":10410:10421   */\n      sload\n        /* \"#utility.yul\":10382:10473   */\n      tag_285\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":10376:10380   */\n      dup3\n        /* \"#utility.yul\":10369:10474   */\n      sstore\n        /* \"#utility.yul\":10287:10480   */\n      pop\n        /* \"#utility.yul\":10211:10480   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10486:10559   */\n    tag_290:\n        /* \"#utility.yul\":10531:10534   */\n      0x00\n        /* \"#utility.yul\":10486:10559   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":10565:10754   */\n    tag_291:\n        /* \"#utility.yul\":10642:10674   */\n      tag_434\n      tag_290\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10683:10748   */\n      tag_435\n        /* \"#utility.yul\":10741:10747   */\n      dup2\n        /* \"#utility.yul\":10733:10739   */\n      dup5\n        /* \"#utility.yul\":10727:10731   */\n      dup5\n        /* \"#utility.yul\":10683:10748   */\n      tag_289\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10618:10754   */\n      pop\n        /* \"#utility.yul\":10565:10754   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10760:10946   */\n    tag_292:\n        /* \"#utility.yul\":10820:10940   */\n    tag_437:\n        /* \"#utility.yul\":10837:10840   */\n      dup2\n        /* \"#utility.yul\":10830:10835   */\n      dup2\n        /* \"#utility.yul\":10827:10841   */\n      lt\n        /* \"#utility.yul\":10820:10940   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":10891:10930   */\n      tag_440\n        /* \"#utility.yul\":10928:10929   */\n      0x00\n        /* \"#utility.yul\":10921:10926   */\n      dup3\n        /* \"#utility.yul\":10891:10930   */\n      tag_291\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10864:10865   */\n      0x01\n        /* \"#utility.yul\":10857:10862   */\n      dup2\n        /* \"#utility.yul\":10853:10866   */\n      add\n        /* \"#utility.yul\":10844:10866   */\n      swap1\n      pop\n        /* \"#utility.yul\":10820:10940   */\n      jump(tag_437)\n    tag_439:\n        /* \"#utility.yul\":10760:10946   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10952:11495   */\n    tag_293:\n        /* \"#utility.yul\":11053:11055   */\n      0x1f\n        /* \"#utility.yul\":11048:11051   */\n      dup3\n        /* \"#utility.yul\":11045:11056   */\n      gt\n        /* \"#utility.yul\":11042:11488   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":11087:11125   */\n      tag_443\n        /* \"#utility.yul\":11119:11124   */\n      dup2\n        /* \"#utility.yul\":11087:11125   */\n      tag_282\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":11171:11200   */\n      tag_444\n        /* \"#utility.yul\":11189:11199   */\n      dup5\n        /* \"#utility.yul\":11171:11200   */\n      tag_283\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11161:11169   */\n      dup2\n        /* \"#utility.yul\":11157:11201   */\n      add\n        /* \"#utility.yul\":11354:11356   */\n      0x20\n        /* \"#utility.yul\":11342:11352   */\n      dup6\n        /* \"#utility.yul\":11339:11357   */\n      lt\n        /* \"#utility.yul\":11336:11385   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":11375:11383   */\n      dup2\n        /* \"#utility.yul\":11360:11383   */\n      swap1\n      pop\n        /* \"#utility.yul\":11336:11385   */\n    tag_445:\n        /* \"#utility.yul\":11398:11478   */\n      tag_446\n        /* \"#utility.yul\":11454:11476   */\n      tag_447\n        /* \"#utility.yul\":11472:11475   */\n      dup6\n        /* \"#utility.yul\":11454:11476   */\n      tag_283\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11444:11452   */\n      dup4\n        /* \"#utility.yul\":11440:11477   */\n      add\n        /* \"#utility.yul\":11427:11438   */\n      dup3\n        /* \"#utility.yul\":11398:11478   */\n      tag_292\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11057:11488   */\n      pop\n      pop\n        /* \"#utility.yul\":11042:11488   */\n    tag_442:\n        /* \"#utility.yul\":10952:11495   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11501:11618   */\n    tag_294:\n        /* \"#utility.yul\":11555:11563   */\n      0x00\n        /* \"#utility.yul\":11605:11610   */\n      dup3\n        /* \"#utility.yul\":11599:11603   */\n      dup3\n        /* \"#utility.yul\":11595:11611   */\n      shr\n        /* \"#utility.yul\":11574:11611   */\n      swap1\n      pop\n        /* \"#utility.yul\":11501:11618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11624:11793   */\n    tag_295:\n        /* \"#utility.yul\":11668:11674   */\n      0x00\n        /* \"#utility.yul\":11701:11752   */\n      tag_450\n        /* \"#utility.yul\":11749:11750   */\n      0x00\n        /* \"#utility.yul\":11745:11751   */\n      not\n        /* \"#utility.yul\":11737:11742   */\n      dup5\n        /* \"#utility.yul\":11734:11735   */\n      0x08\n        /* \"#utility.yul\":11730:11743   */\n      mul\n        /* \"#utility.yul\":11701:11752   */\n      tag_294\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11697:11753   */\n      not\n        /* \"#utility.yul\":11782:11786   */\n      dup1\n        /* \"#utility.yul\":11776:11780   */\n      dup4\n        /* \"#utility.yul\":11772:11787   */\n      and\n        /* \"#utility.yul\":11762:11787   */\n      swap2\n      pop\n        /* \"#utility.yul\":11675:11793   */\n      pop\n        /* \"#utility.yul\":11624:11793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11798:12093   */\n    tag_296:\n        /* \"#utility.yul\":11874:11878   */\n      0x00\n        /* \"#utility.yul\":12020:12049   */\n      tag_452\n        /* \"#utility.yul\":12045:12048   */\n      dup4\n        /* \"#utility.yul\":12039:12043   */\n      dup4\n        /* \"#utility.yul\":12020:12049   */\n      tag_295\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":12012:12049   */\n      swap2\n      pop\n        /* \"#utility.yul\":12082:12085   */\n      dup3\n        /* \"#utility.yul\":12079:12080   */\n      0x02\n        /* \"#utility.yul\":12075:12086   */\n      mul\n        /* \"#utility.yul\":12069:12073   */\n      dup3\n        /* \"#utility.yul\":12066:12087   */\n      or\n        /* \"#utility.yul\":12058:12087   */\n      swap1\n      pop\n        /* \"#utility.yul\":11798:12093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12098:13493   */\n    tag_109:\n        /* \"#utility.yul\":12215:12252   */\n      tag_454\n        /* \"#utility.yul\":12248:12251   */\n      dup3\n        /* \"#utility.yul\":12215:12252   */\n      tag_251\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12317:12335   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12309:12315   */\n      dup2\n        /* \"#utility.yul\":12306:12336   */\n      gt\n        /* \"#utility.yul\":12303:12359   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":12339:12357   */\n      tag_456\n      tag_270\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12303:12359   */\n    tag_455:\n        /* \"#utility.yul\":12383:12421   */\n      tag_457\n        /* \"#utility.yul\":12415:12419   */\n      dup3\n        /* \"#utility.yul\":12409:12420   */\n      sload\n        /* \"#utility.yul\":12383:12421   */\n      tag_94\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":12468:12535   */\n      tag_458\n        /* \"#utility.yul\":12528:12534   */\n      dup3\n        /* \"#utility.yul\":12520:12526   */\n      dup3\n        /* \"#utility.yul\":12514:12518   */\n      dup6\n        /* \"#utility.yul\":12468:12535   */\n      tag_293\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12562:12563   */\n      0x00\n        /* \"#utility.yul\":12586:12590   */\n      0x20\n        /* \"#utility.yul\":12573:12590   */\n      swap1\n      pop\n        /* \"#utility.yul\":12618:12620   */\n      0x1f\n        /* \"#utility.yul\":12610:12616   */\n      dup4\n        /* \"#utility.yul\":12607:12621   */\n      gt\n        /* \"#utility.yul\":12635:12636   */\n      0x01\n        /* \"#utility.yul\":12630:13248   */\n      dup2\n      eq\n      tag_460\n      jumpi\n        /* \"#utility.yul\":13292:13293   */\n      0x00\n        /* \"#utility.yul\":13309:13315   */\n      dup5\n        /* \"#utility.yul\":13306:13383   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":13358:13367   */\n      dup3\n        /* \"#utility.yul\":13353:13356   */\n      dup8\n        /* \"#utility.yul\":13349:13368   */\n      add\n        /* \"#utility.yul\":13343:13369   */\n      mload\n        /* \"#utility.yul\":13334:13369   */\n      swap1\n      pop\n        /* \"#utility.yul\":13306:13383   */\n    tag_461:\n        /* \"#utility.yul\":13409:13476   */\n      tag_462\n        /* \"#utility.yul\":13469:13475   */\n      dup6\n        /* \"#utility.yul\":13462:13467   */\n      dup3\n        /* \"#utility.yul\":13409:13476   */\n      tag_296\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13403:13407   */\n      dup7\n        /* \"#utility.yul\":13396:13477   */\n      sstore\n        /* \"#utility.yul\":13265:13487   */\n      pop\n        /* \"#utility.yul\":12600:13487   */\n      jump(tag_459)\n        /* \"#utility.yul\":12630:13248   */\n    tag_460:\n        /* \"#utility.yul\":12682:12686   */\n      0x1f\n        /* \"#utility.yul\":12678:12687   */\n      not\n        /* \"#utility.yul\":12670:12676   */\n      dup5\n        /* \"#utility.yul\":12666:12688   */\n      and\n        /* \"#utility.yul\":12716:12753   */\n      tag_463\n        /* \"#utility.yul\":12748:12752   */\n      dup7\n        /* \"#utility.yul\":12716:12753   */\n      tag_282\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12775:12776   */\n      0x00\n        /* \"#utility.yul\":12789:12997   */\n    tag_464:\n        /* \"#utility.yul\":12803:12810   */\n      dup3\n        /* \"#utility.yul\":12800:12801   */\n      dup2\n        /* \"#utility.yul\":12797:12811   */\n      lt\n        /* \"#utility.yul\":12789:12997   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":12882:12891   */\n      dup5\n        /* \"#utility.yul\":12877:12880   */\n      dup10\n        /* \"#utility.yul\":12873:12892   */\n      add\n        /* \"#utility.yul\":12867:12893   */\n      mload\n        /* \"#utility.yul\":12859:12865   */\n      dup3\n        /* \"#utility.yul\":12852:12894   */\n      sstore\n        /* \"#utility.yul\":12933:12934   */\n      0x01\n        /* \"#utility.yul\":12925:12931   */\n      dup3\n        /* \"#utility.yul\":12921:12935   */\n      add\n        /* \"#utility.yul\":12911:12935   */\n      swap2\n      pop\n        /* \"#utility.yul\":12980:12982   */\n      0x20\n        /* \"#utility.yul\":12969:12978   */\n      dup6\n        /* \"#utility.yul\":12965:12983   */\n      add\n        /* \"#utility.yul\":12952:12983   */\n      swap5\n      pop\n        /* \"#utility.yul\":12826:12830   */\n      0x20\n        /* \"#utility.yul\":12823:12824   */\n      dup2\n        /* \"#utility.yul\":12819:12831   */\n      add\n        /* \"#utility.yul\":12814:12831   */\n      swap1\n      pop\n        /* \"#utility.yul\":12789:12997   */\n      jump(tag_464)\n    tag_466:\n        /* \"#utility.yul\":13025:13031   */\n      dup7\n        /* \"#utility.yul\":13016:13023   */\n      dup4\n        /* \"#utility.yul\":13013:13032   */\n      lt\n        /* \"#utility.yul\":13010:13189   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":13083:13092   */\n      dup5\n        /* \"#utility.yul\":13078:13081   */\n      dup10\n        /* \"#utility.yul\":13074:13093   */\n      add\n        /* \"#utility.yul\":13068:13094   */\n      mload\n        /* \"#utility.yul\":13126:13174   */\n      tag_468\n        /* \"#utility.yul\":13168:13172   */\n      0x1f\n        /* \"#utility.yul\":13160:13166   */\n      dup10\n        /* \"#utility.yul\":13156:13173   */\n      and\n        /* \"#utility.yul\":13145:13154   */\n      dup3\n        /* \"#utility.yul\":13126:13174   */\n      tag_295\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":13118:13124   */\n      dup4\n        /* \"#utility.yul\":13111:13175   */\n      sstore\n        /* \"#utility.yul\":13033:13189   */\n      pop\n        /* \"#utility.yul\":13010:13189   */\n    tag_467:\n        /* \"#utility.yul\":13235:13236   */\n      0x01\n        /* \"#utility.yul\":13231:13232   */\n      0x02\n        /* \"#utility.yul\":13223:13229   */\n      dup9\n        /* \"#utility.yul\":13219:13233   */\n      mul\n        /* \"#utility.yul\":13215:13237   */\n      add\n        /* \"#utility.yul\":13209:13213   */\n      dup9\n        /* \"#utility.yul\":13202:13238   */\n      sstore\n        /* \"#utility.yul\":12637:13248   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12600:13487   */\n    tag_459:\n      pop\n        /* \"#utility.yul\":12190:13493   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12098:13493   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13499:13674   */\n    tag_297:\n        /* \"#utility.yul\":13639:13666   */\n      0x41646d696e277320746f6b656e7320617265206c6f636b656400000000000000\n        /* \"#utility.yul\":13635:13636   */\n      0x00\n        /* \"#utility.yul\":13627:13633   */\n      dup3\n        /* \"#utility.yul\":13623:13637   */\n      add\n        /* \"#utility.yul\":13616:13667   */\n      mstore\n        /* \"#utility.yul\":13499:13674   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13680:14046   */\n    tag_298:\n        /* \"#utility.yul\":13822:13825   */\n      0x00\n        /* \"#utility.yul\":13843:13910   */\n      tag_471\n        /* \"#utility.yul\":13907:13909   */\n      0x19\n        /* \"#utility.yul\":13902:13905   */\n      dup4\n        /* \"#utility.yul\":13843:13910   */\n      tag_252\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13836:13910   */\n      swap2\n      pop\n        /* \"#utility.yul\":13919:14012   */\n      tag_472\n        /* \"#utility.yul\":14008:14011   */\n      dup3\n        /* \"#utility.yul\":13919:14012   */\n      tag_297\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":14037:14039   */\n      0x20\n        /* \"#utility.yul\":14032:14035   */\n      dup3\n        /* \"#utility.yul\":14028:14040   */\n      add\n        /* \"#utility.yul\":14021:14040   */\n      swap1\n      pop\n        /* \"#utility.yul\":13680:14046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14052:14471   */\n    tag_116:\n        /* \"#utility.yul\":14218:14222   */\n      0x00\n        /* \"#utility.yul\":14256:14258   */\n      0x20\n        /* \"#utility.yul\":14245:14254   */\n      dup3\n        /* \"#utility.yul\":14241:14259   */\n      add\n        /* \"#utility.yul\":14233:14259   */\n      swap1\n      pop\n        /* \"#utility.yul\":14305:14314   */\n      dup2\n        /* \"#utility.yul\":14299:14303   */\n      dup2\n        /* \"#utility.yul\":14295:14315   */\n      sub\n        /* \"#utility.yul\":14291:14292   */\n      0x00\n        /* \"#utility.yul\":14280:14289   */\n      dup4\n        /* \"#utility.yul\":14276:14293   */\n      add\n        /* \"#utility.yul\":14269:14316   */\n      mstore\n        /* \"#utility.yul\":14333:14464   */\n      tag_474\n        /* \"#utility.yul\":14459:14463   */\n      dup2\n        /* \"#utility.yul\":14333:14464   */\n      tag_298\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":14325:14464   */\n      swap1\n      pop\n        /* \"#utility.yul\":14052:14471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14477:14644   */\n    tag_299:\n        /* \"#utility.yul\":14617:14636   */\n      0x546f6b656e7320617265206c6f636b6564000000000000000000000000000000\n        /* \"#utility.yul\":14613:14614   */\n      0x00\n        /* \"#utility.yul\":14605:14611   */\n      dup3\n        /* \"#utility.yul\":14601:14615   */\n      add\n        /* \"#utility.yul\":14594:14637   */\n      mstore\n        /* \"#utility.yul\":14477:14644   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14650:15016   */\n    tag_300:\n        /* \"#utility.yul\":14792:14795   */\n      0x00\n        /* \"#utility.yul\":14813:14880   */\n      tag_477\n        /* \"#utility.yul\":14877:14879   */\n      0x11\n        /* \"#utility.yul\":14872:14875   */\n      dup4\n        /* \"#utility.yul\":14813:14880   */\n      tag_252\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":14806:14880   */\n      swap2\n      pop\n        /* \"#utility.yul\":14889:14982   */\n      tag_478\n        /* \"#utility.yul\":14978:14981   */\n      dup3\n        /* \"#utility.yul\":14889:14982   */\n      tag_299\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":15007:15009   */\n      0x20\n        /* \"#utility.yul\":15002:15005   */\n      dup3\n        /* \"#utility.yul\":14998:15010   */\n      add\n        /* \"#utility.yul\":14991:15010   */\n      swap1\n      pop\n        /* \"#utility.yul\":14650:15016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15022:15441   */\n    tag_120:\n        /* \"#utility.yul\":15188:15192   */\n      0x00\n        /* \"#utility.yul\":15226:15228   */\n      0x20\n        /* \"#utility.yul\":15215:15224   */\n      dup3\n        /* \"#utility.yul\":15211:15229   */\n      add\n        /* \"#utility.yul\":15203:15229   */\n      swap1\n      pop\n        /* \"#utility.yul\":15275:15284   */\n      dup2\n        /* \"#utility.yul\":15269:15273   */\n      dup2\n        /* \"#utility.yul\":15265:15285   */\n      sub\n        /* \"#utility.yul\":15261:15262   */\n      0x00\n        /* \"#utility.yul\":15250:15259   */\n      dup4\n        /* \"#utility.yul\":15246:15263   */\n      add\n        /* \"#utility.yul\":15239:15286   */\n      mstore\n        /* \"#utility.yul\":15303:15434   */\n      tag_480\n        /* \"#utility.yul\":15429:15433   */\n      dup2\n        /* \"#utility.yul\":15303:15434   */\n      tag_300\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":15295:15434   */\n      swap1\n      pop\n        /* \"#utility.yul\":15022:15441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15447:15627   */\n    tag_301:\n        /* \"#utility.yul\":15495:15572   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15492:15493   */\n      0x00\n        /* \"#utility.yul\":15485:15573   */\n      mstore\n        /* \"#utility.yul\":15592:15596   */\n      0x11\n        /* \"#utility.yul\":15589:15590   */\n      0x04\n        /* \"#utility.yul\":15582:15597   */\n      mstore\n        /* \"#utility.yul\":15616:15620   */\n      0x24\n        /* \"#utility.yul\":15613:15614   */\n      0x00\n        /* \"#utility.yul\":15606:15621   */\n      revert\n        /* \"#utility.yul\":15633:15824   */\n    tag_123:\n        /* \"#utility.yul\":15673:15676   */\n      0x00\n        /* \"#utility.yul\":15692:15712   */\n      tag_483\n        /* \"#utility.yul\":15710:15711   */\n      dup3\n        /* \"#utility.yul\":15692:15712   */\n      tag_263\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":15687:15712   */\n      swap2\n      pop\n        /* \"#utility.yul\":15726:15746   */\n      tag_484\n        /* \"#utility.yul\":15744:15745   */\n      dup4\n        /* \"#utility.yul\":15726:15746   */\n      tag_263\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":15721:15746   */\n      swap3\n      pop\n        /* \"#utility.yul\":15769:15770   */\n      dup3\n        /* \"#utility.yul\":15766:15767   */\n      dup3\n        /* \"#utility.yul\":15762:15771   */\n      add\n        /* \"#utility.yul\":15755:15771   */\n      swap1\n      pop\n        /* \"#utility.yul\":15790:15793   */\n      dup1\n        /* \"#utility.yul\":15787:15788   */\n      dup3\n        /* \"#utility.yul\":15784:15794   */\n      gt\n        /* \"#utility.yul\":15781:15817   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":15797:15815   */\n      tag_486\n      tag_301\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":15781:15817   */\n    tag_485:\n        /* \"#utility.yul\":15633:15824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15830:16240   */\n    tag_126:\n        /* \"#utility.yul\":15870:15877   */\n      0x00\n        /* \"#utility.yul\":15893:15913   */\n      tag_488\n        /* \"#utility.yul\":15911:15912   */\n      dup3\n        /* \"#utility.yul\":15893:15913   */\n      tag_263\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":15888:15913   */\n      swap2\n      pop\n        /* \"#utility.yul\":15927:15947   */\n      tag_489\n        /* \"#utility.yul\":15945:15946   */\n      dup4\n        /* \"#utility.yul\":15927:15947   */\n      tag_263\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":15922:15947   */\n      swap3\n      pop\n        /* \"#utility.yul\":15982:15983   */\n      dup3\n        /* \"#utility.yul\":15979:15980   */\n      dup3\n        /* \"#utility.yul\":15975:15984   */\n      mul\n        /* \"#utility.yul\":16004:16034   */\n      tag_490\n        /* \"#utility.yul\":16022:16033   */\n      dup2\n        /* \"#utility.yul\":16004:16034   */\n      tag_263\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":15993:16034   */\n      swap2\n      pop\n        /* \"#utility.yul\":16183:16184   */\n      dup3\n        /* \"#utility.yul\":16174:16181   */\n      dup3\n        /* \"#utility.yul\":16170:16185   */\n      div\n        /* \"#utility.yul\":16167:16168   */\n      dup5\n        /* \"#utility.yul\":16164:16186   */\n      eq\n        /* \"#utility.yul\":16144:16145   */\n      dup4\n        /* \"#utility.yul\":16137:16146   */\n      iszero\n        /* \"#utility.yul\":16117:16200   */\n      or\n        /* \"#utility.yul\":16094:16233   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":16213:16231   */\n      tag_492\n      tag_301\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":16094:16233   */\n    tag_491:\n        /* \"#utility.yul\":15878:16240   */\n      pop\n        /* \"#utility.yul\":15830:16240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16246:16426   */\n    tag_302:\n        /* \"#utility.yul\":16294:16371   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16291:16292   */\n      0x00\n        /* \"#utility.yul\":16284:16372   */\n      mstore\n        /* \"#utility.yul\":16391:16395   */\n      0x12\n        /* \"#utility.yul\":16388:16389   */\n      0x04\n        /* \"#utility.yul\":16381:16396   */\n      mstore\n        /* \"#utility.yul\":16415:16419   */\n      0x24\n        /* \"#utility.yul\":16412:16413   */\n      0x00\n        /* \"#utility.yul\":16405:16420   */\n      revert\n        /* \"#utility.yul\":16432:16617   */\n    tag_128:\n        /* \"#utility.yul\":16472:16473   */\n      0x00\n        /* \"#utility.yul\":16489:16509   */\n      tag_495\n        /* \"#utility.yul\":16507:16508   */\n      dup3\n        /* \"#utility.yul\":16489:16509   */\n      tag_263\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":16484:16509   */\n      swap2\n      pop\n        /* \"#utility.yul\":16523:16543   */\n      tag_496\n        /* \"#utility.yul\":16541:16542   */\n      dup4\n        /* \"#utility.yul\":16523:16543   */\n      tag_263\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":16518:16543   */\n      swap3\n      pop\n        /* \"#utility.yul\":16562:16563   */\n      dup3\n        /* \"#utility.yul\":16552:16587   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":16567:16585   */\n      tag_498\n      tag_302\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":16552:16587   */\n    tag_497:\n        /* \"#utility.yul\":16609:16610   */\n      dup3\n        /* \"#utility.yul\":16606:16607   */\n      dup3\n        /* \"#utility.yul\":16602:16611   */\n      div\n        /* \"#utility.yul\":16597:16611   */\n      swap1\n      pop\n        /* \"#utility.yul\":16432:16617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16623:16860   */\n    tag_303:\n        /* \"#utility.yul\":16763:16797   */\n      0x4f776e657273686970206361707065642061742032302520746f20656e737572\n        /* \"#utility.yul\":16759:16760   */\n      0x00\n        /* \"#utility.yul\":16751:16757   */\n      dup3\n        /* \"#utility.yul\":16747:16761   */\n      add\n        /* \"#utility.yul\":16740:16798   */\n      mstore\n        /* \"#utility.yul\":16832:16852   */\n      0x6520646563656e7472616c697a6174696f6e0000000000000000000000000000\n        /* \"#utility.yul\":16827:16829   */\n      0x20\n        /* \"#utility.yul\":16819:16825   */\n      dup3\n        /* \"#utility.yul\":16815:16830   */\n      add\n        /* \"#utility.yul\":16808:16853   */\n      mstore\n        /* \"#utility.yul\":16623:16860   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16866:17232   */\n    tag_304:\n        /* \"#utility.yul\":17008:17011   */\n      0x00\n        /* \"#utility.yul\":17029:17096   */\n      tag_501\n        /* \"#utility.yul\":17093:17095   */\n      0x32\n        /* \"#utility.yul\":17088:17091   */\n      dup4\n        /* \"#utility.yul\":17029:17096   */\n      tag_252\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":17022:17096   */\n      swap2\n      pop\n        /* \"#utility.yul\":17105:17198   */\n      tag_502\n        /* \"#utility.yul\":17194:17197   */\n      dup3\n        /* \"#utility.yul\":17105:17198   */\n      tag_303\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":17223:17225   */\n      0x40\n        /* \"#utility.yul\":17218:17221   */\n      dup3\n        /* \"#utility.yul\":17214:17226   */\n      add\n        /* \"#utility.yul\":17207:17226   */\n      swap1\n      pop\n        /* \"#utility.yul\":16866:17232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17238:17657   */\n    tag_131:\n        /* \"#utility.yul\":17404:17408   */\n      0x00\n        /* \"#utility.yul\":17442:17444   */\n      0x20\n        /* \"#utility.yul\":17431:17440   */\n      dup3\n        /* \"#utility.yul\":17427:17445   */\n      add\n        /* \"#utility.yul\":17419:17445   */\n      swap1\n      pop\n        /* \"#utility.yul\":17491:17500   */\n      dup2\n        /* \"#utility.yul\":17485:17489   */\n      dup2\n        /* \"#utility.yul\":17481:17501   */\n      sub\n        /* \"#utility.yul\":17477:17478   */\n      0x00\n        /* \"#utility.yul\":17466:17475   */\n      dup4\n        /* \"#utility.yul\":17462:17479   */\n      add\n        /* \"#utility.yul\":17455:17502   */\n      mstore\n        /* \"#utility.yul\":17519:17650   */\n      tag_504\n        /* \"#utility.yul\":17645:17649   */\n      dup2\n        /* \"#utility.yul\":17519:17650   */\n      tag_304\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":17511:17650   */\n      swap1\n      pop\n        /* \"#utility.yul\":17238:17657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17663:17887   */\n    tag_305:\n        /* \"#utility.yul\":17803:17837   */\n      0x61646d696e277320746f6b656e7320617265206c6f636b656420666f7220616e\n        /* \"#utility.yul\":17799:17800   */\n      0x00\n        /* \"#utility.yul\":17791:17797   */\n      dup3\n        /* \"#utility.yul\":17787:17801   */\n      add\n        /* \"#utility.yul\":17780:17838   */\n      mstore\n        /* \"#utility.yul\":17872:17879   */\n      0x2079656172000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17867:17869   */\n      0x20\n        /* \"#utility.yul\":17859:17865   */\n      dup3\n        /* \"#utility.yul\":17855:17870   */\n      add\n        /* \"#utility.yul\":17848:17880   */\n      mstore\n        /* \"#utility.yul\":17663:17887   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17893:18259   */\n    tag_306:\n        /* \"#utility.yul\":18035:18038   */\n      0x00\n        /* \"#utility.yul\":18056:18123   */\n      tag_507\n        /* \"#utility.yul\":18120:18122   */\n      0x25\n        /* \"#utility.yul\":18115:18118   */\n      dup4\n        /* \"#utility.yul\":18056:18123   */\n      tag_252\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":18049:18123   */\n      swap2\n      pop\n        /* \"#utility.yul\":18132:18225   */\n      tag_508\n        /* \"#utility.yul\":18221:18224   */\n      dup3\n        /* \"#utility.yul\":18132:18225   */\n      tag_305\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":18250:18252   */\n      0x40\n        /* \"#utility.yul\":18245:18248   */\n      dup3\n        /* \"#utility.yul\":18241:18253   */\n      add\n        /* \"#utility.yul\":18234:18253   */\n      swap1\n      pop\n        /* \"#utility.yul\":17893:18259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18265:18684   */\n    tag_153:\n        /* \"#utility.yul\":18431:18435   */\n      0x00\n        /* \"#utility.yul\":18469:18471   */\n      0x20\n        /* \"#utility.yul\":18458:18467   */\n      dup3\n        /* \"#utility.yul\":18454:18472   */\n      add\n        /* \"#utility.yul\":18446:18472   */\n      swap1\n      pop\n        /* \"#utility.yul\":18518:18527   */\n      dup2\n        /* \"#utility.yul\":18512:18516   */\n      dup2\n        /* \"#utility.yul\":18508:18528   */\n      sub\n        /* \"#utility.yul\":18504:18505   */\n      0x00\n        /* \"#utility.yul\":18493:18502   */\n      dup4\n        /* \"#utility.yul\":18489:18506   */\n      add\n        /* \"#utility.yul\":18482:18529   */\n      mstore\n        /* \"#utility.yul\":18546:18677   */\n      tag_510\n        /* \"#utility.yul\":18672:18676   */\n      dup2\n        /* \"#utility.yul\":18546:18677   */\n      tag_306\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":18538:18677   */\n      swap1\n      pop\n        /* \"#utility.yul\":18265:18684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18690:18856   */\n    tag_307:\n        /* \"#utility.yul\":18830:18848   */\n      0x6e6f7420666f722073616c652079657400000000000000000000000000000000\n        /* \"#utility.yul\":18826:18827   */\n      0x00\n        /* \"#utility.yul\":18818:18824   */\n      dup3\n        /* \"#utility.yul\":18814:18828   */\n      add\n        /* \"#utility.yul\":18807:18849   */\n      mstore\n        /* \"#utility.yul\":18690:18856   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18862:19228   */\n    tag_308:\n        /* \"#utility.yul\":19004:19007   */\n      0x00\n        /* \"#utility.yul\":19025:19092   */\n      tag_513\n        /* \"#utility.yul\":19089:19091   */\n      0x10\n        /* \"#utility.yul\":19084:19087   */\n      dup4\n        /* \"#utility.yul\":19025:19092   */\n      tag_252\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":19018:19092   */\n      swap2\n      pop\n        /* \"#utility.yul\":19101:19194   */\n      tag_514\n        /* \"#utility.yul\":19190:19193   */\n      dup3\n        /* \"#utility.yul\":19101:19194   */\n      tag_307\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":19219:19221   */\n      0x20\n        /* \"#utility.yul\":19214:19217   */\n      dup3\n        /* \"#utility.yul\":19210:19222   */\n      add\n        /* \"#utility.yul\":19203:19222   */\n      swap1\n      pop\n        /* \"#utility.yul\":18862:19228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19234:19653   */\n    tag_156:\n        /* \"#utility.yul\":19400:19404   */\n      0x00\n        /* \"#utility.yul\":19438:19440   */\n      0x20\n        /* \"#utility.yul\":19427:19436   */\n      dup3\n        /* \"#utility.yul\":19423:19441   */\n      add\n        /* \"#utility.yul\":19415:19441   */\n      swap1\n      pop\n        /* \"#utility.yul\":19487:19496   */\n      dup2\n        /* \"#utility.yul\":19481:19485   */\n      dup2\n        /* \"#utility.yul\":19477:19497   */\n      sub\n        /* \"#utility.yul\":19473:19474   */\n      0x00\n        /* \"#utility.yul\":19462:19471   */\n      dup4\n        /* \"#utility.yul\":19458:19475   */\n      add\n        /* \"#utility.yul\":19451:19498   */\n      mstore\n        /* \"#utility.yul\":19515:19646   */\n      tag_516\n        /* \"#utility.yul\":19641:19645   */\n      dup2\n        /* \"#utility.yul\":19515:19646   */\n      tag_308\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":19507:19646   */\n      swap1\n      pop\n        /* \"#utility.yul\":19234:19653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19683:20514   */\n    tag_309:\n        /* \"#utility.yul\":19768:19771   */\n      0x00\n        /* \"#utility.yul\":19805:19810   */\n      dup2\n        /* \"#utility.yul\":19799:19811   */\n      sload\n        /* \"#utility.yul\":19834:19870   */\n      tag_518\n        /* \"#utility.yul\":19860:19869   */\n      dup2\n        /* \"#utility.yul\":19834:19870   */\n      tag_94\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":19886:19957   */\n      tag_519\n        /* \"#utility.yul\":19950:19956   */\n      dup2\n        /* \"#utility.yul\":19945:19948   */\n      dup7\n        /* \"#utility.yul\":19886:19957   */\n      tag_252\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":19879:19957   */\n      swap5\n      pop\n        /* \"#utility.yul\":19988:19989   */\n      0x01\n        /* \"#utility.yul\":19977:19986   */\n      dup3\n        /* \"#utility.yul\":19973:19990   */\n      and\n        /* \"#utility.yul\":20004:20005   */\n      0x00\n        /* \"#utility.yul\":19999:20163   */\n      dup2\n      eq\n      tag_521\n      jumpi\n        /* \"#utility.yul\":20177:20178   */\n      0x01\n        /* \"#utility.yul\":20172:20508   */\n      dup2\n      eq\n      tag_522\n      jumpi\n        /* \"#utility.yul\":19966:20508   */\n      jump(tag_520)\n        /* \"#utility.yul\":19999:20163   */\n    tag_521:\n        /* \"#utility.yul\":20083:20087   */\n      0xff\n        /* \"#utility.yul\":20079:20088   */\n      not\n        /* \"#utility.yul\":20068:20077   */\n      dup4\n        /* \"#utility.yul\":20064:20089   */\n      and\n        /* \"#utility.yul\":20059:20062   */\n      dup7\n        /* \"#utility.yul\":20052:20090   */\n      mstore\n        /* \"#utility.yul\":20143:20149   */\n      dup2\n        /* \"#utility.yul\":20136:20150   */\n      iszero\n        /* \"#utility.yul\":20129:20151   */\n      iszero\n        /* \"#utility.yul\":20123:20127   */\n      0x20\n        /* \"#utility.yul\":20119:20152   */\n      mul\n        /* \"#utility.yul\":20114:20117   */\n      dup7\n        /* \"#utility.yul\":20110:20153   */\n      add\n        /* \"#utility.yul\":20103:20153   */\n      swap4\n      pop\n        /* \"#utility.yul\":19999:20163   */\n      jump(tag_520)\n        /* \"#utility.yul\":20172:20508   */\n    tag_522:\n        /* \"#utility.yul\":20239:20277   */\n      tag_523\n        /* \"#utility.yul\":20271:20276   */\n      dup6\n        /* \"#utility.yul\":20239:20277   */\n      tag_282\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":20299:20300   */\n      0x00\n        /* \"#utility.yul\":20313:20467   */\n    tag_524:\n        /* \"#utility.yul\":20327:20333   */\n      dup4\n        /* \"#utility.yul\":20324:20325   */\n      dup2\n        /* \"#utility.yul\":20321:20334   */\n      lt\n        /* \"#utility.yul\":20313:20467   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":20401:20408   */\n      dup2\n        /* \"#utility.yul\":20395:20409   */\n      sload\n        /* \"#utility.yul\":20391:20392   */\n      dup2\n        /* \"#utility.yul\":20386:20389   */\n      dup10\n        /* \"#utility.yul\":20382:20393   */\n      add\n        /* \"#utility.yul\":20375:20410   */\n      mstore\n        /* \"#utility.yul\":20451:20452   */\n      0x01\n        /* \"#utility.yul\":20442:20449   */\n      dup3\n        /* \"#utility.yul\":20438:20453   */\n      add\n        /* \"#utility.yul\":20427:20453   */\n      swap2\n      pop\n        /* \"#utility.yul\":20349:20353   */\n      0x20\n        /* \"#utility.yul\":20346:20347   */\n      dup2\n        /* \"#utility.yul\":20342:20354   */\n      add\n        /* \"#utility.yul\":20337:20354   */\n      swap1\n      pop\n        /* \"#utility.yul\":20313:20467   */\n      jump(tag_524)\n    tag_526:\n        /* \"#utility.yul\":20496:20497   */\n      dup1\n        /* \"#utility.yul\":20491:20494   */\n      dup9\n        /* \"#utility.yul\":20487:20498   */\n      add\n        /* \"#utility.yul\":20480:20498   */\n      swap6\n      pop\n        /* \"#utility.yul\":20179:20508   */\n      pop\n      pop\n        /* \"#utility.yul\":19966:20508   */\n    tag_520:\n      pop\n        /* \"#utility.yul\":19772:20514   */\n      pop\n      pop\n        /* \"#utility.yul\":19683:20514   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20520:21158   */\n    tag_166:\n        /* \"#utility.yul\":20714:20718   */\n      0x00\n        /* \"#utility.yul\":20752:20755   */\n      0x80\n        /* \"#utility.yul\":20741:20750   */\n      dup3\n        /* \"#utility.yul\":20737:20756   */\n      add\n        /* \"#utility.yul\":20729:20756   */\n      swap1\n      pop\n        /* \"#utility.yul\":20766:20837   */\n      tag_528\n        /* \"#utility.yul\":20834:20835   */\n      0x00\n        /* \"#utility.yul\":20823:20832   */\n      dup4\n        /* \"#utility.yul\":20819:20836   */\n      add\n        /* \"#utility.yul\":20810:20816   */\n      dup8\n        /* \"#utility.yul\":20766:20837   */\n      tag_280\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":20847:20919   */\n      tag_529\n        /* \"#utility.yul\":20915:20917   */\n      0x20\n        /* \"#utility.yul\":20904:20913   */\n      dup4\n        /* \"#utility.yul\":20900:20918   */\n      add\n        /* \"#utility.yul\":20891:20897   */\n      dup7\n        /* \"#utility.yul\":20847:20919   */\n      tag_280\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":20929:21001   */\n      tag_530\n        /* \"#utility.yul\":20997:20999   */\n      0x40\n        /* \"#utility.yul\":20986:20995   */\n      dup4\n        /* \"#utility.yul\":20982:21000   */\n      add\n        /* \"#utility.yul\":20973:20979   */\n      dup6\n        /* \"#utility.yul\":20929:21001   */\n      tag_277\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":21048:21057   */\n      dup2\n        /* \"#utility.yul\":21042:21046   */\n      dup2\n        /* \"#utility.yul\":21038:21058   */\n      sub\n        /* \"#utility.yul\":21033:21035   */\n      0x60\n        /* \"#utility.yul\":21022:21031   */\n      dup4\n        /* \"#utility.yul\":21018:21036   */\n      add\n        /* \"#utility.yul\":21011:21059   */\n      mstore\n        /* \"#utility.yul\":21076:21151   */\n      tag_531\n        /* \"#utility.yul\":21146:21150   */\n      dup2\n        /* \"#utility.yul\":21137:21143   */\n      dup5\n        /* \"#utility.yul\":21076:21151   */\n      tag_309\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":21068:21151   */\n      swap1\n      pop\n        /* \"#utility.yul\":20520:21158   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21164:21606   */\n    tag_234:\n        /* \"#utility.yul\":21313:21317   */\n      0x00\n        /* \"#utility.yul\":21351:21353   */\n      0x60\n        /* \"#utility.yul\":21340:21349   */\n      dup3\n        /* \"#utility.yul\":21336:21354   */\n      add\n        /* \"#utility.yul\":21328:21354   */\n      swap1\n      pop\n        /* \"#utility.yul\":21364:21435   */\n      tag_533\n        /* \"#utility.yul\":21432:21433   */\n      0x00\n        /* \"#utility.yul\":21421:21430   */\n      dup4\n        /* \"#utility.yul\":21417:21434   */\n      add\n        /* \"#utility.yul\":21408:21414   */\n      dup7\n        /* \"#utility.yul\":21364:21435   */\n      tag_280\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":21445:21517   */\n      tag_534\n        /* \"#utility.yul\":21513:21515   */\n      0x20\n        /* \"#utility.yul\":21502:21511   */\n      dup4\n        /* \"#utility.yul\":21498:21516   */\n      add\n        /* \"#utility.yul\":21489:21495   */\n      dup6\n        /* \"#utility.yul\":21445:21517   */\n      tag_277\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":21527:21599   */\n      tag_535\n        /* \"#utility.yul\":21595:21597   */\n      0x40\n        /* \"#utility.yul\":21584:21593   */\n      dup4\n        /* \"#utility.yul\":21580:21598   */\n      add\n        /* \"#utility.yul\":21571:21577   */\n      dup5\n        /* \"#utility.yul\":21527:21599   */\n      tag_277\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":21164:21606   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e70d2ea1e649f2e52c7cec53763fe632648c82d5adf0023b379ffbcdd6f752ca64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_154": {
									"entryPoint": null,
									"id": 154,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_395": {
									"entryPoint": null,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_681": {
									"entryPoint": null,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_984": {
									"entryPoint": 833,
									"id": 984,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_491": {
									"entryPoint": 638,
									"id": 491,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_951": {
									"entryPoint": 971,
									"id": 951,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2322,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 2487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 3192,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 3154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 3031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1839,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3779,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2795,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 3070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1633,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1532,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1528,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 3126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2937,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17002:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "934:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "951:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1057:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1067:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1139:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1149:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1122:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"src": "1091:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1227:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1428:238:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1607:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:62:7"
															},
															"nodeType": "YulIf",
															"src": "1541:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1414:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1422:4:7",
														"type": ""
													}
												],
												"src": "1385:281:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1723:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1733:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:7"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1697:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1706:6:7",
														"type": ""
													}
												],
												"src": "1672:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1874:241:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1979:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1981:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1981:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1948:30:7"
															},
															"nodeType": "YulIf",
															"src": "1945:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2011:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2041:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2019:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2085:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2097:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2085:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1858:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1869:4:7",
														"type": ""
													}
												],
												"src": "1807:308:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2183:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2193:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2202:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2197:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2262:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2287:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2292:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2283:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2283:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2306:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2311:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2302:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2302:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2296:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2296:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2276:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2276:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2276:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2223:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2226:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2220:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2234:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2236:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2245:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2248:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2241:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2241:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2236:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2216:3:7",
																"statements": []
															},
															"src": "2212:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2345:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2350:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2341:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2341:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2359:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2334:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2334:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2165:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2170:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2175:6:7",
														"type": ""
													}
												],
												"src": "2121:246:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2468:339:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2478:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2545:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2503:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2503:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2487:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2487:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2478:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2576:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2562:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2562:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2592:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2607:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2614:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2603:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2603:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2596:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2657:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2659:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2659:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2659:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2638:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2643:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:16:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2652:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2631:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:25:7"
															},
															"nodeType": "YulIf",
															"src": "2628:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2784:3:7"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2789:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2794:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2749:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2749:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2441:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2446:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2454:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2462:5:7",
														"type": ""
													}
												],
												"src": "2373:434:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2900:282:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2949:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2951:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2951:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2951:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2928:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2936:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2924:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2924:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2943:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2913:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2913:35:7"
															},
															"nodeType": "YulIf",
															"src": "2910:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3041:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3055:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3045:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3077:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3149:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3157:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3145:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3145:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3164:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3172:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3086:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3077:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2878:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2886:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2894:5:7",
														"type": ""
													}
												],
												"src": "2827:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3233:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3243:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3254:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3243:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3215:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3225:7:7",
														"type": ""
													}
												],
												"src": "3188:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3314:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3371:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3380:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3383:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3373:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3373:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3373:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3337:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3362:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3344:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3344:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3334:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3334:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3327:43:7"
															},
															"nodeType": "YulIf",
															"src": "3324:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3307:5:7",
														"type": ""
													}
												],
												"src": "3271:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3462:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3472:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3487:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3481:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3472:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3530:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3503:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3503:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3440:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3448:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3456:5:7",
														"type": ""
													}
												],
												"src": "3399:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:229:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3735:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3737:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3737:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3737:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3707:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3715:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3704:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3704:30:7"
															},
															"nodeType": "YulIf",
															"src": "3701:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3767:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3779:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3787:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3775:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3775:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3767:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3829:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3841:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3837:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3837:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3829:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3614:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3625:4:7",
														"type": ""
													}
												],
												"src": "3548:311:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3865:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4118:619:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4128:90:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4210:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4153:56:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4153:64:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4137:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4137:81:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4128:5:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4227:16:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "4238:5:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4231:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4260:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4267:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4253:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4283:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4294:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4301:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4290:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4290:16:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4283:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4316:44:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4334:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4346:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4354:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4342:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4342:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4330:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4330:30:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4320:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4388:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4402:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4402:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4402:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4375:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4383:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4372:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4372:15:7"
															},
															"nodeType": "YulIf",
															"src": "4369:122:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4576:155:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4591:21:7",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "4609:3:7"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "4595:10:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4633:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "4670:10:7"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4682:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "4638:31:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4638:48:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4626:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4626:61:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4626:61:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4700:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4711:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4716:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4707:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4707:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4700:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4529:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4534:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4526:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4526:15:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4542:25:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4544:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4555:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4560:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4551:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4551:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4544:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4504:21:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4506:17:7",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "4517:6:7"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "4510:3:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4500:231:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4088:6:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4096:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4104:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4112:5:7",
														"type": ""
													}
												],
												"src": "4005:732:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4848:297:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4897:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4899:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4899:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4899:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4876:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4884:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4872:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4872:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4891:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4868:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4868:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4861:35:7"
															},
															"nodeType": "YulIf",
															"src": "4858:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4989:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5009:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5003:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4993:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5025:114:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5112:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5120:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5108:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5108:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5127:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5135:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5034:73:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5034:105:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5025:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4826:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4834:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4842:5:7",
														"type": ""
													}
												],
												"src": "4760:385:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5233:229:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5338:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5340:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5340:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5340:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5310:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5318:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5307:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5307:30:7"
															},
															"nodeType": "YulIf",
															"src": "5304:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5370:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5382:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5390:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5378:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5378:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5370:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5432:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5450:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5440:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5440:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5432:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5217:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5228:4:7",
														"type": ""
													}
												],
												"src": "5151:311:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5598:619:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5608:90:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5690:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5633:56:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5633:64:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5617:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5617:81:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5608:5:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5707:16:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "5718:5:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5711:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5740:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5747:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5733:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5733:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5733:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5763:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5774:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5781:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5770:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5770:16:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5796:44:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5814:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5826:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5834:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5822:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5822:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5810:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5810:30:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5800:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5868:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "5882:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5882:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5882:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5855:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5863:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5852:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5852:15:7"
															},
															"nodeType": "YulIf",
															"src": "5849:122:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6056:155:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6071:21:7",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6089:3:7"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6075:10:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6113:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6150:10:7"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6162:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "6118:31:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6118:48:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6106:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6106:61:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6106:61:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6180:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6191:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6196:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6187:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6187:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6180:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6009:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6014:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6006:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6006:15:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6022:25:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6024:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6035:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6040:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6031:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6031:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6024:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5984:21:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5986:17:7",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "5997:6:7"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "5990:3:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5980:231:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5568:6:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5576:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5584:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5592:5:7",
														"type": ""
													}
												],
												"src": "5485:732:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6328:297:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6377:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6379:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6379:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6379:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6356:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6364:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6352:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6352:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6371:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6348:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6348:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6341:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6341:35:7"
															},
															"nodeType": "YulIf",
															"src": "6338:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6469:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6489:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6483:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6483:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6473:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6505:114:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6592:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6600:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6588:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6588:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6607:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6615:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "6514:73:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6514:105:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6505:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6306:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6314:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6322:5:7",
														"type": ""
													}
												],
												"src": "6240:385:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6880:1794:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6927:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6929:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6929:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6929:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6901:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6910:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6897:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6897:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6922:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6893:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6893:33:7"
															},
															"nodeType": "YulIf",
															"src": "6890:120:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "7020:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7035:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7049:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7039:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7064:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7110:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7121:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7106:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7106:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7130:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7074:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7074:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7064:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7158:292:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7173:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7197:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7208:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7193:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7193:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7187:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7187:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7177:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7259:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7261:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7261:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7261:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7231:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7239:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7228:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7228:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "7225:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7356:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7412:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7423:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7408:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7408:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7432:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7366:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7366:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7356:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7460:292:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7475:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7499:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7510:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7495:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7495:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7489:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7489:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7479:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7561:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7563:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7563:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7563:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7533:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7541:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7530:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7530:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "7527:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7658:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7714:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7725:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7710:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7710:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7734:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7668:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7668:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7658:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7762:129:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7777:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7791:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7781:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7807:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7853:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7864:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7849:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7849:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7873:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7817:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "7807:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7901:308:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7916:40:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7940:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7951:3:7",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7936:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7936:19:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7930:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7930:26:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7920:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8003:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8005:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8005:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8005:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7975:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7983:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7972:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7972:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "7969:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8100:99:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8171:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8182:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8167:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8167:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8191:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8110:56:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8110:89:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "8100:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8219:308:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8234:40:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8258:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8269:3:7",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8254:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8254:19:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8248:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8248:26:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8238:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8321:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8323:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8323:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8323:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8293:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8301:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8290:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8290:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "8287:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8418:99:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8489:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8500:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8485:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8485:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8509:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8428:56:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8428:89:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "8418:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8537:130:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8552:17:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8566:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8556:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8583:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8629:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8640:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8625:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8625:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8649:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8593:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8593:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6802:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6813:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6825:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6833:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6841:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6849:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6857:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6865:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "6873:6:7",
														"type": ""
													}
												],
												"src": "6631:2043:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8739:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8750:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8766:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8760:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8760:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8750:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8722:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8732:6:7",
														"type": ""
													}
												],
												"src": "8680:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8813:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8830:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8833:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8823:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8823:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8823:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8927:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8930:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8920:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8920:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8920:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8951:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8954:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8944:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8944:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8944:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "8785:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9022:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9032:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9046:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9052:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9042:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9042:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9032:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9063:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9093:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9099:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9089:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9089:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9067:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9140:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9154:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9168:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9176:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9164:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9164:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9154:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9120:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9113:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9113:26:7"
															},
															"nodeType": "YulIf",
															"src": "9110:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9243:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "9257:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9257:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9257:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9207:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9230:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9238:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9227:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9227:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9204:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9204:38:7"
															},
															"nodeType": "YulIf",
															"src": "9201:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9006:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9015:6:7",
														"type": ""
													}
												],
												"src": "8971:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9351:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9361:11:7",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "9369:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9361:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9389:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9392:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9382:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9382:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9382:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9405:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9423:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9426:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9413:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9413:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9405:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9338:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9346:4:7",
														"type": ""
													}
												],
												"src": "9297:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9488:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9498:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9516:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9523:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9512:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9512:14:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9528:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9508:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9508:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9498:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9471:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9481:6:7",
														"type": ""
													}
												],
												"src": "9444:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9596:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9606:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "9631:4:7"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9637:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "9627:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9627:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "9606:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "9571:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9577:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "9587:8:7",
														"type": ""
													}
												],
												"src": "9543:107:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9732:317:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9742:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "9763:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9775:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9759:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9759:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "9746:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9786:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "9817:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9828:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "9798:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9798:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "9790:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9904:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "9935:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "9946:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "9916:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9916:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "9904:8:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9964:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9977:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "9988:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9984:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9984:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9973:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9973:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9964:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10003:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10016:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "10027:8:7"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "10037:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10023:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10023:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10013:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10013:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10003:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9693:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "9700:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "9712:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9725:6:7",
														"type": ""
													}
												],
												"src": "9656:393:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10087:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10097:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10104:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10097:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10073:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10083:3:7",
														"type": ""
													}
												],
												"src": "10055:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10181:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10191:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10249:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10231:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10231:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "10222:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10222:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10204:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10204:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10191:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10161:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10171:9:7",
														"type": ""
													}
												],
												"src": "10121:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10316:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10326:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10333:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10326:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10302:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10312:3:7",
														"type": ""
													}
												],
												"src": "10269:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10426:193:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10436:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "10491:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10460:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10460:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "10440:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "10515:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "10555:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "10549:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10549:11:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10562:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "10594:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10570:23:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10570:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "10521:27:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10521:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "10508:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10508:105:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10508:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "10403:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10409:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "10417:7:7",
														"type": ""
													}
												],
												"src": "10350:269:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10674:24:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10684:8:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10691:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10684:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10670:3:7",
														"type": ""
													}
												],
												"src": "10625:73:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10757:136:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10767:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10781:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10781:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "10771:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "10866:4:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10872:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "10880:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10822:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10822:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "10743:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10749:6:7",
														"type": ""
													}
												],
												"src": "10704:189:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10949:136:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11016:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "11060:5:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11067:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "11030:29:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11030:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11030:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "10969:5:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10976:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10966:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10966:14:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10981:26:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10983:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "10996:5:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11003:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10992:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10992:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "10983:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10963:2:7",
																"statements": []
															},
															"src": "10959:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "10937:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10944:3:7",
														"type": ""
													}
												],
												"src": "10899:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11170:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11196:431:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11210:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "11258:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "11226:31:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11226:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "11214:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11277:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "11300:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "11328:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "11310:17:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11310:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11296:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11296:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "11281:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11497:27:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "11499:23:7",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "11514:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "11499:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "11481:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11493:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "11478:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11478:18:7"
																		},
																		"nodeType": "YulIf",
																		"src": "11475:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "11566:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "11583:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "11611:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "11593:17:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11593:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11579:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11579:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "11537:28:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11537:80:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11537:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "11187:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11192:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11184:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11184:11:7"
															},
															"nodeType": "YulIf",
															"src": "11181:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11146:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "11153:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "11158:10:7",
														"type": ""
													}
												],
												"src": "11091:543:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11703:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11713:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "11738:4:7"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11744:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "11734:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11734:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "11713:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "11678:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11684:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "11694:8:7",
														"type": ""
													}
												],
												"src": "11640:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11814:118:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11824:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11873:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "11876:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "11869:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11869:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11888:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "11884:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11884:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "11840:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11840:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "11836:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11836:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "11828:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11901:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11915:4:7"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "11921:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11911:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11911:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11901:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11791:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "11797:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11807:6:7",
														"type": ""
													}
												],
												"src": "11763:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12018:214:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12151:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12178:4:7"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "12184:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "12159:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12159:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12151:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12197:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12208:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12218:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "12221:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "12214:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12214:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12205:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12205:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "12197:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11999:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "12005:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "12013:4:7",
														"type": ""
													}
												],
												"src": "11937:295:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12329:1303:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12340:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12387:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12354:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12354:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "12344:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12476:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12478:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12478:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12478:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "12448:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12456:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12445:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12445:30:7"
															},
															"nodeType": "YulIf",
															"src": "12442:56:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12508:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "12554:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "12548:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12548:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "12522:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12522:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "12512:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "12653:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "12659:6:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "12667:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "12607:45:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12607:67:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12607:67:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12684:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12701:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "12688:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12712:17:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12725:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "12712:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12776:611:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12790:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "12809:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12821:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "12817:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12817:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "12805:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12805:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "12794:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12841:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "12887:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "12855:31:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12855:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "12845:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12905:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12914:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "12909:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12973:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "12998:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "13016:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "13021:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "13012:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "13012:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "13006:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "13006:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "12991:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12991:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12991:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "13050:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "13064:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13072:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "13060:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13060:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "13050:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "13091:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "13108:9:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13119:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "13104:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13104:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "13091:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12939:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "12942:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "12936:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12936:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "12951:21:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "12953:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "12962:1:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12965:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12958:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12958:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12953:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "12932:3:7",
																					"statements": []
																				},
																				"src": "12928:208:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "13172:156:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "13190:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "13217:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "13222:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "13213:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "13213:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "13207:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13207:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "13194:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "13257:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "13284:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "13299:6:7"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "13307:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "13295:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "13295:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "13265:18:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "13265:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "13250:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13250:64:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "13250:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "13155:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "13164:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "13152:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13152:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "13149:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "13348:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "13362:6:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "13370:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "13358:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13358:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "13374:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13354:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13354:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "13341:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13341:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13341:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12769:618:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12774:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13404:222:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "13418:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13431:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "13422:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "13455:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "13473:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "13492:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "13497:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "13488:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "13488:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "13482:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13482:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "13473:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "13448:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "13445:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "13542:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "13601:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "13608:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "13548:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13548:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "13535:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13535:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13535:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "13396:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "12749:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12757:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12746:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12746:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "12739:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "12318:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12324:3:7",
														"type": ""
													}
												],
												"src": "12237:1395:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13703:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13720:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13743:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13725:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13725:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13713:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13713:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13713:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13691:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13698:3:7",
														"type": ""
													}
												],
												"src": "13638:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13860:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13870:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13882:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13893:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13878:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13878:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13870:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13950:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13963:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13974:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13959:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13959:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13906:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13906:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13906:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13832:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13844:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13855:4:7",
														"type": ""
													}
												],
												"src": "13762:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14086:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14103:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14108:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14096:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14096:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14096:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14124:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14143:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14148:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14139:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14139:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14124:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14058:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14063:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14074:11:7",
														"type": ""
													}
												],
												"src": "13990:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14271:123:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14293:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14301:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14289:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14289:14:7"
																	},
																	{
																		"hexValue": "737562736372696265727320616e6420746865697220616d6f756e747320646f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14305:34:7",
																		"type": "",
																		"value": "subscribers and their amounts do"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14282:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14282:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14282:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14361:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14369:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14357:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14357:15:7"
																	},
																	{
																		"hexValue": "206e6f74206d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14374:12:7",
																		"type": "",
																		"value": " not match"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14350:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14350:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14350:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14263:6:7",
														"type": ""
													}
												],
												"src": "14165:229:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14546:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14556:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14622:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14627:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14563:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14563:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14556:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14728:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f",
																	"nodeType": "YulIdentifier",
																	"src": "14639:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14639:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14639:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14741:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14752:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14757:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14748:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14748:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14741:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14534:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14542:3:7",
														"type": ""
													}
												],
												"src": "14400:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14943:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14953:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14965:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14976:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14961:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14961:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14953:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15000:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15011:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14996:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14996:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15019:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15025:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15015:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15015:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14989:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14989:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14989:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15045:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15179:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15053:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15053:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15045:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14923:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14938:4:7",
														"type": ""
													}
												],
												"src": "14772:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15225:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15242:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15245:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15235:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15235:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15235:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15339:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15342:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15332:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15332:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15332:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15363:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15366:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15356:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15356:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15356:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15197:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15427:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15437:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15460:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15442:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15442:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15437:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15471:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15494:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15476:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15476:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15471:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15505:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15516:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15519:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15512:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15512:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15505:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15545:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15547:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15547:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15547:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15537:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "15540:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15534:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15534:10:7"
															},
															"nodeType": "YulIf",
															"src": "15531:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15414:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15417:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15423:3:7",
														"type": ""
													}
												],
												"src": "15383:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15608:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15625:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15628:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15618:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15618:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15618:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15722:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15725:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15715:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15715:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15715:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15746:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15749:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15739:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15739:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15739:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15580:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15809:190:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15819:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15846:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15828:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15828:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15819:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15942:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15944:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15944:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15944:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15867:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15874:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15864:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15864:77:7"
															},
															"nodeType": "YulIf",
															"src": "15861:103:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15973:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15984:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15991:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15980:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15980:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15973:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15795:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15805:3:7",
														"type": ""
													}
												],
												"src": "15766:233:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16050:149:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16060:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16083:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16065:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16065:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16060:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16094:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16117:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16099:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16099:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16094:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16128:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16140:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16143:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16136:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16136:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "16128:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16170:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16172:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16172:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16172:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "16161:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16167:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16158:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16158:11:7"
															},
															"nodeType": "YulIf",
															"src": "16155:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16036:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16039:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "16045:4:7",
														"type": ""
													}
												],
												"src": "16005:194:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16270:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16287:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16310:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16292:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16292:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16280:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16280:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16280:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16258:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16265:3:7",
														"type": ""
													}
												],
												"src": "16205:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16483:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16493:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16505:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16516:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16501:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16501:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16493:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16573:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16586:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16597:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16582:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16582:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16529:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16529:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16529:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16654:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16667:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16678:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16663:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16663:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16610:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16610:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16610:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16736:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16749:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16760:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16745:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16745:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16692:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16692:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16692:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16439:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16451:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16459:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16467:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16478:4:7",
														"type": ""
													}
												],
												"src": "16329:442:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16875:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16885:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16897:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16908:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16893:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16893:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16885:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16965:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16978:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16989:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16974:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16974:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16921:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16921:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16921:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16847:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16859:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16870:4:7",
														"type": ""
													}
												],
												"src": "16777:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"subscribers and their amounts do\")\n\n        mstore(add(memPtr, 32), \" not match\")\n\n    }\n\n    function abi_encode_t_stringliteral_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002e3b38038062002e3b8339818101604052810190620000369190620009b7565b86868681600390816200004a919062000d0f565b5080600490816200005c919062000d0f565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000c9919062000e04565b60405180910390fd5b620000e3816200027e60201b60201c565b5081518351146200012b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001229062000ea3565b60405180910390fd5b83600781905550804262000140919062000ef0565b6008819055505f5b835181101562000226576007546006548483815181106200016e576200016d62000f2a565b5b602002602001015162000182919062000ef0565b11156200018d575f80fd5b620001d9848281518110620001a757620001a662000f2a565b5b6020026020010151848381518110620001c557620001c462000f2a565b5b60200260200101516200034160201b60201c565b828181518110620001ef57620001ee62000f2a565b5b602002602001015160065f82825462000209919062000ef0565b9250508190555080806200021d9062000f57565b91505062000148565b505f6006546007546200023a919062000fa3565b90505f81111562000270576200025788826200034160201b60201c565b6301e133804262000269919062000ef0565b6009819055505b505050505050505062001044565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620003b4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620003ab919062000e04565b60405180910390fd5b620003c75f8383620003cb60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200041f578060025f82825462000412919062000ef0565b92505081905550620004f0565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015620004ab578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004a29392919062000fee565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000539578060025f828254039250508190555062000583565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620005e2919062001029565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200062b8262000600565b9050919050565b6200063d816200061f565b811462000648575f80fd5b50565b5f815190506200065b8162000632565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620006b18262000669565b810181811067ffffffffffffffff82111715620006d357620006d262000679565b5b80604052505050565b5f620006e7620005ef565b9050620006f58282620006a6565b919050565b5f67ffffffffffffffff82111562000717576200071662000679565b5b620007228262000669565b9050602081019050919050565b5f5b838110156200074e57808201518184015260208101905062000731565b5f8484015250505050565b5f6200076f6200076984620006fa565b620006dc565b9050828152602081018484840111156200078e576200078d62000665565b5b6200079b8482856200072f565b509392505050565b5f82601f830112620007ba57620007b962000661565b5b8151620007cc84826020860162000759565b91505092915050565b5f819050919050565b620007e981620007d5565b8114620007f4575f80fd5b50565b5f815190506200080781620007de565b92915050565b5f67ffffffffffffffff8211156200082a576200082962000679565b5b602082029050602081019050919050565b5f80fd5b5f620008556200084f846200080d565b620006dc565b905080838252602082019050602084028301858111156200087b576200087a6200083b565b5b835b81811015620008a857806200089388826200064b565b8452602084019350506020810190506200087d565b5050509392505050565b5f82601f830112620008c957620008c862000661565b5b8151620008db8482602086016200083f565b91505092915050565b5f67ffffffffffffffff82111562000901576200090062000679565b5b602082029050602081019050919050565b5f620009286200092284620008e4565b620006dc565b905080838252602082019050602084028301858111156200094e576200094d6200083b565b5b835b818110156200097b5780620009668882620007f7565b84526020840193505060208101905062000950565b5050509392505050565b5f82601f8301126200099c576200099b62000661565b5b8151620009ae84826020860162000912565b91505092915050565b5f805f805f805f60e0888a031215620009d557620009d4620005f8565b5b5f620009e48a828b016200064b565b975050602088015167ffffffffffffffff81111562000a085762000a07620005fc565b5b62000a168a828b01620007a3565b965050604088015167ffffffffffffffff81111562000a3a5762000a39620005fc565b5b62000a488a828b01620007a3565b955050606062000a5b8a828b01620007f7565b945050608088015167ffffffffffffffff81111562000a7f5762000a7e620005fc565b5b62000a8d8a828b01620008b2565b93505060a088015167ffffffffffffffff81111562000ab15762000ab0620005fc565b5b62000abf8a828b0162000985565b92505060c062000ad28a828b01620007f7565b91505092959891949750929550565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168062000b3057607f821691505b60208210810362000b465762000b4562000aeb565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830262000baa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000b6d565b62000bb6868362000b6d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f62000bf762000bf162000beb84620007d5565b62000bce565b620007d5565b9050919050565b5f819050919050565b62000c128362000bd7565b62000c2a62000c218262000bfe565b84845462000b79565b825550505050565b5f90565b62000c4062000c32565b62000c4d81848462000c07565b505050565b5b8181101562000c745762000c685f8262000c36565b60018101905062000c53565b5050565b601f82111562000cc35762000c8d8162000b4c565b62000c988462000b5e565b8101602085101562000ca8578190505b62000cc062000cb78562000b5e565b83018262000c52565b50505b505050565b5f82821c905092915050565b5f62000ce55f198460080262000cc8565b1980831691505092915050565b5f62000cff838362000cd4565b9150826002028217905092915050565b62000d1a8262000ae1565b67ffffffffffffffff81111562000d365762000d3562000679565b5b62000d42825462000b18565b62000d4f82828562000c78565b5f60209050601f83116001811462000d85575f841562000d70578287015190505b62000d7c858262000cf2565b86555062000deb565b601f19841662000d958662000b4c565b5f5b8281101562000dbe5784890151825560018201915060208501945060208101905062000d97565b8683101562000dde578489015162000dda601f89168262000cd4565b8355505b6001600288020188555050505b505050505050565b62000dfe816200061f565b82525050565b5f60208201905062000e195f83018462000df3565b92915050565b5f82825260208201905092915050565b7f737562736372696265727320616e6420746865697220616d6f756e747320646f5f8201527f206e6f74206d6174636800000000000000000000000000000000000000000000602082015250565b5f62000e8b602a8362000e1f565b915062000e988262000e2f565b604082019050919050565b5f6020820190508181035f83015262000ebc8162000e7d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000efc82620007d5565b915062000f0983620007d5565b925082820190508082111562000f245762000f2362000ec3565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f62000f6382620007d5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000f985762000f9762000ec3565b5b600182019050919050565b5f62000faf82620007d5565b915062000fbc83620007d5565b925082820390508181111562000fd75762000fd662000ec3565b5b92915050565b62000fe881620007d5565b82525050565b5f606082019050620010035f83018662000df3565b62001012602083018562000fdd565b62001021604083018462000fdd565b949350505050565b5f6020820190506200103e5f83018462000fdd565b92915050565b611de980620010525f395ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c806395d89b41116100a0578063b93a53961161006f578063b93a5396146102ce578063bd7dac92146102ea578063c0a4d64d14610308578063dd62ed3e14610326578063f2fde38b1461035657610114565b806395d89b41146102465780639f3adb0e14610264578063a9059cbb14610282578063ae84827a146102b257610114565b806323b872dd116100e757806323b872dd146101a0578063313ce567146101d057806370a08231146101ee578063715018a61461021e5780638da5cb5b1461022857610114565b806306fdde0314610118578063095ea7b3146101365780630de65a441461016657806318160ddd14610182575b5f80fd5b610120610372565b60405161012d91906112b9565b60405180910390f35b610150600480360381019061014b9190611377565b610402565b60405161015d91906113cf565b60405180910390f35b610180600480360381019061017b9190611514565b610424565b005b61018a61043f565b604051610197919061156a565b60405180910390f35b6101ba60048036038101906101b59190611583565b610448565b6040516101c791906113cf565b60405180910390f35b6101d86105a0565b6040516101e591906115ee565b60405180910390f35b61020860048036038101906102039190611607565b6105a4565b604051610215919061156a565b60405180910390f35b6102266105e9565b005b6102306105fc565b60405161023d9190611641565b60405180910390f35b61024e610624565b60405161025b91906112b9565b60405180910390f35b61026c6106b4565b604051610279919061156a565b60405180910390f35b61029c60048036038101906102979190611377565b6106ba565b6040516102a991906113cf565b60405180910390f35b6102cc60048036038101906102c79190611377565b610849565b005b6102e860048036038101906102e39190611377565b61085f565b005b6102f2610875565b6040516102ff91906112b9565b60405180910390f35b610310610905565b60405161031d919061156a565b60405180910390f35b610340600480360381019061033b919061165a565b61090e565b60405161034d919061156a565b60405180910390f35b610370600480360381019061036b9190611607565b610990565b005b606060038054610381906116c5565b80601f01602080910402602001604051908101604052809291908181526020018280546103ad906116c5565b80156103f85780601f106103cf576101008083540402835291602001916103f8565b820191905f5260205f20905b8154815290600101906020018083116103db57829003601f168201915b5050505050905090565b5f8061040c610a14565b9050610419818585610a1b565b600191505092915050565b61042c610a2d565b80600a908161043b9190611892565b5050565b5f600254905090565b5f6104516105fc565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036104cd576009544210156104c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bf906119ab565b60405180910390fd5b610513565b600854421015610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990611a13565b60405180910390fd5b5b5f8261051e856105a4565b6105289190611a5e565b9050606461053461043f565b60146105409190611a91565b61054a9190611aff565b811061058b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058290611b9f565b60405180910390fd5b610596858585610ab4565b9150509392505050565b5f90565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6105f1610a2d565b6105fa5f610ae2565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610633906116c5565b80601f016020809104026020016040519081016040528092919081815260200182805461065f906116c5565b80156106aa5780601f10610681576101008083540402835291602001916106aa565b820191905f5260205f20905b81548152906001019060200180831161068d57829003601f168201915b5050505050905090565b60095481565b5f6106c36105fc565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361073b5760095442101561073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073190611c2d565b60405180910390fd5b5b600854421015610780576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077790611c95565b60405180910390fd5b5f8261078b856105a4565b6107959190611a5e565b905060646107a161043f565b60146107ad9190611a91565b6107b79190611aff565b81106107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef90611b9f565b60405180910390fd5b7f8519cdb8ad47f1f5f5bc583d2063d1fc1ffed7dac0cab9e8b1f6492aa60cbd7f338585600b60405161082e9493929190611d34565b60405180910390a16108408484610ba5565b91505092915050565b610851610a2d565b61085b8282610bc7565b5050565b610867610a2d565b6108718282610c46565b5050565b6060600a8054610884906116c5565b80601f01602080910402602001604051908101604052809291908181526020018280546108b0906116c5565b80156108fb5780601f106108d2576101008083540402835291602001916108fb565b820191905f5260205f20905b8154815290600101906020018083116108de57829003601f168201915b5050505050905090565b5f600854905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610998610a2d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a08575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109ff9190611641565b60405180910390fd5b610a1181610ae2565b50565b5f33905090565b610a288383836001610cc5565b505050565b610a35610a14565b73ffffffffffffffffffffffffffffffffffffffff16610a536105fc565b73ffffffffffffffffffffffffffffffffffffffff1614610ab257610a76610a14565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610aa99190611641565b60405180910390fd5b565b5f80610abe610a14565b9050610acb858285610e94565b610ad6858585610f26565b60019150509392505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80610baf610a14565b9050610bbc818585610f26565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c37575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c2e9190611641565b60405180910390fd5b610c42825f83611016565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cb6575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610cad9190611641565b60405180910390fd5b610cc15f8383611016565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d35575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d2c9190611641565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610da5575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d9c9190611641565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e8e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e85919061156a565b60405180910390a35b50505050565b5f610e9f848461090e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f205781811015610f11578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f0893929190611d7e565b60405180910390fd5b610f1f84848484035f610cc5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f96575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f8d9190611641565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611006575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ffd9190611641565b60405180910390fd5b611011838383611016565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611066578060025f82825461105a9190611a5e565b92505081905550611134565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110ef578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110e693929190611d7e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361117b578060025f82825403925050819055506111c5565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611222919061156a565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561126657808201518184015260208101905061124b565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61128b8261122f565b6112958185611239565b93506112a5818560208601611249565b6112ae81611271565b840191505092915050565b5f6020820190508181035f8301526112d18184611281565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611313826112ea565b9050919050565b61132381611309565b811461132d575f80fd5b50565b5f8135905061133e8161131a565b92915050565b5f819050919050565b61135681611344565b8114611360575f80fd5b50565b5f813590506113718161134d565b92915050565b5f806040838503121561138d5761138c6112e2565b5b5f61139a85828601611330565b92505060206113ab85828601611363565b9150509250929050565b5f8115159050919050565b6113c9816113b5565b82525050565b5f6020820190506113e25f8301846113c0565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61142682611271565b810181811067ffffffffffffffff82111715611445576114446113f0565b5b80604052505050565b5f6114576112d9565b9050611463828261141d565b919050565b5f67ffffffffffffffff821115611482576114816113f0565b5b61148b82611271565b9050602081019050919050565b828183375f83830152505050565b5f6114b86114b384611468565b61144e565b9050828152602081018484840111156114d4576114d36113ec565b5b6114df848285611498565b509392505050565b5f82601f8301126114fb576114fa6113e8565b5b813561150b8482602086016114a6565b91505092915050565b5f60208284031215611529576115286112e2565b5b5f82013567ffffffffffffffff811115611546576115456112e6565b5b611552848285016114e7565b91505092915050565b61156481611344565b82525050565b5f60208201905061157d5f83018461155b565b92915050565b5f805f6060848603121561159a576115996112e2565b5b5f6115a786828701611330565b93505060206115b886828701611330565b92505060406115c986828701611363565b9150509250925092565b5f60ff82169050919050565b6115e8816115d3565b82525050565b5f6020820190506116015f8301846115df565b92915050565b5f6020828403121561161c5761161b6112e2565b5b5f61162984828501611330565b91505092915050565b61163b81611309565b82525050565b5f6020820190506116545f830184611632565b92915050565b5f80604083850312156116705761166f6112e2565b5b5f61167d85828601611330565b925050602061168e85828601611330565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806116dc57607f821691505b6020821081036116ef576116ee611698565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026117517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611716565b61175b8683611716565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61179661179161178c84611344565b611773565b611344565b9050919050565b5f819050919050565b6117af8361177c565b6117c36117bb8261179d565b848454611722565b825550505050565b5f90565b6117d76117cb565b6117e28184846117a6565b505050565b5b81811015611805576117fa5f826117cf565b6001810190506117e8565b5050565b601f82111561184a5761181b816116f5565b61182484611707565b81016020851015611833578190505b61184761183f85611707565b8301826117e7565b50505b505050565b5f82821c905092915050565b5f61186a5f198460080261184f565b1980831691505092915050565b5f611882838361185b565b9150826002028217905092915050565b61189b8261122f565b67ffffffffffffffff8111156118b4576118b36113f0565b5b6118be82546116c5565b6118c9828285611809565b5f60209050601f8311600181146118fa575f84156118e8578287015190505b6118f28582611877565b865550611959565b601f198416611908866116f5565b5f5b8281101561192f5784890151825560018201915060208501945060208101905061190a565b8683101561194c5784890151611948601f89168261185b565b8355505b6001600288020188555050505b505050505050565b7f41646d696e277320746f6b656e7320617265206c6f636b6564000000000000005f82015250565b5f611995601983611239565b91506119a082611961565b602082019050919050565b5f6020820190508181035f8301526119c281611989565b9050919050565b7f546f6b656e7320617265206c6f636b65640000000000000000000000000000005f82015250565b5f6119fd601183611239565b9150611a08826119c9565b602082019050919050565b5f6020820190508181035f830152611a2a816119f1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a6882611344565b9150611a7383611344565b9250828201905080821115611a8b57611a8a611a31565b5b92915050565b5f611a9b82611344565b9150611aa683611344565b9250828202611ab481611344565b91508282048414831517611acb57611aca611a31565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611b0982611344565b9150611b1483611344565b925082611b2457611b23611ad2565b5b828204905092915050565b7f4f776e657273686970206361707065642061742032302520746f20656e7375725f8201527f6520646563656e7472616c697a6174696f6e0000000000000000000000000000602082015250565b5f611b89603283611239565b9150611b9482611b2f565b604082019050919050565b5f6020820190508181035f830152611bb681611b7d565b9050919050565b7f61646d696e277320746f6b656e7320617265206c6f636b656420666f7220616e5f8201527f2079656172000000000000000000000000000000000000000000000000000000602082015250565b5f611c17602583611239565b9150611c2282611bbd565b604082019050919050565b5f6020820190508181035f830152611c4481611c0b565b9050919050565b7f6e6f7420666f722073616c6520796574000000000000000000000000000000005f82015250565b5f611c7f601083611239565b9150611c8a82611c4b565b602082019050919050565b5f6020820190508181035f830152611cac81611c73565b9050919050565b5f8154611cbf816116c5565b611cc98186611239565b9450600182165f8114611ce35760018114611cf957611d2b565b60ff198316865281151560200286019350611d2b565b611d02856116f5565b5f5b83811015611d2357815481890152600182019150602081019050611d04565b808801955050505b50505092915050565b5f608082019050611d475f830187611632565b611d546020830186611632565b611d61604083018561155b565b8181036060830152611d738184611cb3565b905095945050505050565b5f606082019050611d915f830186611632565b611d9e602083018561155b565b611dab604083018461155b565b94935050505056fea2646970667358221220e70d2ea1e649f2e52c7cec53763fe632648c82d5adf0023b379ffbcdd6f752ca64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2E3B CODESIZE SUB DUP1 PUSH3 0x2E3B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x9B7 JUMP JUMPDEST DUP7 DUP7 DUP7 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0xD0F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0xD0F JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC9 SWAP2 SWAP1 PUSH3 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE3 DUP2 PUSH3 0x27E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 MLOAD DUP4 MLOAD EQ PUSH3 0x12B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x122 SWAP1 PUSH3 0xEA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP1 TIMESTAMP PUSH3 0x140 SWAP2 SWAP1 PUSH3 0xEF0 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x226 JUMPI PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x16E JUMPI PUSH3 0x16D PUSH3 0xF2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0x182 SWAP2 SWAP1 PUSH3 0xEF0 JUMP JUMPDEST GT ISZERO PUSH3 0x18D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x1D9 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x1A7 JUMPI PUSH3 0x1A6 PUSH3 0xF2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x1C5 JUMPI PUSH3 0x1C4 PUSH3 0xF2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0x341 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH3 0x1EF JUMPI PUSH3 0x1EE PUSH3 0xF2A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x209 SWAP2 SWAP1 PUSH3 0xEF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH3 0x21D SWAP1 PUSH3 0xF57 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x148 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH3 0x23A SWAP2 SWAP1 PUSH3 0xFA3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH3 0x270 JUMPI PUSH3 0x257 DUP9 DUP3 PUSH3 0x341 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH4 0x1E13380 TIMESTAMP PUSH3 0x269 SWAP2 SWAP1 PUSH3 0xEF0 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP POP PUSH3 0x1044 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3B4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3AB SWAP2 SWAP1 PUSH3 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x3C7 PUSH0 DUP4 DUP4 PUSH3 0x3CB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x41F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x412 SWAP2 SWAP1 PUSH3 0xEF0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4F0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x4AB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x539 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x583 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x5E2 SWAP2 SWAP1 PUSH3 0x1029 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x62B DUP3 PUSH3 0x600 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x63D DUP2 PUSH3 0x61F JUMP JUMPDEST DUP2 EQ PUSH3 0x648 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x65B DUP2 PUSH3 0x632 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x6B1 DUP3 PUSH3 0x669 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x6D3 JUMPI PUSH3 0x6D2 PUSH3 0x679 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x6E7 PUSH3 0x5EF JUMP JUMPDEST SWAP1 POP PUSH3 0x6F5 DUP3 DUP3 PUSH3 0x6A6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x717 JUMPI PUSH3 0x716 PUSH3 0x679 JUMP JUMPDEST JUMPDEST PUSH3 0x722 DUP3 PUSH3 0x669 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x74E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x731 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x76F PUSH3 0x769 DUP5 PUSH3 0x6FA JUMP JUMPDEST PUSH3 0x6DC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x78E JUMPI PUSH3 0x78D PUSH3 0x665 JUMP JUMPDEST JUMPDEST PUSH3 0x79B DUP5 DUP3 DUP6 PUSH3 0x72F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7BA JUMPI PUSH3 0x7B9 PUSH3 0x661 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x7CC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x759 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7E9 DUP2 PUSH3 0x7D5 JUMP JUMPDEST DUP2 EQ PUSH3 0x7F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x807 DUP2 PUSH3 0x7DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x82A JUMPI PUSH3 0x829 PUSH3 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH3 0x855 PUSH3 0x84F DUP5 PUSH3 0x80D JUMP JUMPDEST PUSH3 0x6DC JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x87B JUMPI PUSH3 0x87A PUSH3 0x83B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x8A8 JUMPI DUP1 PUSH3 0x893 DUP9 DUP3 PUSH3 0x64B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x87D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x8C9 JUMPI PUSH3 0x8C8 PUSH3 0x661 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x8DB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x83F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x901 JUMPI PUSH3 0x900 PUSH3 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x928 PUSH3 0x922 DUP5 PUSH3 0x8E4 JUMP JUMPDEST PUSH3 0x6DC JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x94E JUMPI PUSH3 0x94D PUSH3 0x83B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x97B JUMPI DUP1 PUSH3 0x966 DUP9 DUP3 PUSH3 0x7F7 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x950 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x99C JUMPI PUSH3 0x99B PUSH3 0x661 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x9AE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x912 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x9D5 JUMPI PUSH3 0x9D4 PUSH3 0x5F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x9E4 DUP11 DUP3 DUP12 ADD PUSH3 0x64B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA08 JUMPI PUSH3 0xA07 PUSH3 0x5FC JUMP JUMPDEST JUMPDEST PUSH3 0xA16 DUP11 DUP3 DUP12 ADD PUSH3 0x7A3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA3A JUMPI PUSH3 0xA39 PUSH3 0x5FC JUMP JUMPDEST JUMPDEST PUSH3 0xA48 DUP11 DUP3 DUP12 ADD PUSH3 0x7A3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0xA5B DUP11 DUP3 DUP12 ADD PUSH3 0x7F7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA7F JUMPI PUSH3 0xA7E PUSH3 0x5FC JUMP JUMPDEST JUMPDEST PUSH3 0xA8D DUP11 DUP3 DUP12 ADD PUSH3 0x8B2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xAB1 JUMPI PUSH3 0xAB0 PUSH3 0x5FC JUMP JUMPDEST JUMPDEST PUSH3 0xABF DUP11 DUP3 DUP12 ADD PUSH3 0x985 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0xAD2 DUP11 DUP3 DUP12 ADD PUSH3 0x7F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xB30 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xB46 JUMPI PUSH3 0xB45 PUSH3 0xAEB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0xBAA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xB6D JUMP JUMPDEST PUSH3 0xBB6 DUP7 DUP4 PUSH3 0xB6D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xBF7 PUSH3 0xBF1 PUSH3 0xBEB DUP5 PUSH3 0x7D5 JUMP JUMPDEST PUSH3 0xBCE JUMP JUMPDEST PUSH3 0x7D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC12 DUP4 PUSH3 0xBD7 JUMP JUMPDEST PUSH3 0xC2A PUSH3 0xC21 DUP3 PUSH3 0xBFE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xB79 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0xC40 PUSH3 0xC32 JUMP JUMPDEST PUSH3 0xC4D DUP2 DUP5 DUP5 PUSH3 0xC07 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xC74 JUMPI PUSH3 0xC68 PUSH0 DUP3 PUSH3 0xC36 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xC53 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xCC3 JUMPI PUSH3 0xC8D DUP2 PUSH3 0xB4C JUMP JUMPDEST PUSH3 0xC98 DUP5 PUSH3 0xB5E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xCA8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xCC0 PUSH3 0xCB7 DUP6 PUSH3 0xB5E JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xC52 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xCE5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xCC8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xCFF DUP4 DUP4 PUSH3 0xCD4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xD1A DUP3 PUSH3 0xAE1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xD36 JUMPI PUSH3 0xD35 PUSH3 0x679 JUMP JUMPDEST JUMPDEST PUSH3 0xD42 DUP3 SLOAD PUSH3 0xB18 JUMP JUMPDEST PUSH3 0xD4F DUP3 DUP3 DUP6 PUSH3 0xC78 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xD85 JUMPI PUSH0 DUP5 ISZERO PUSH3 0xD70 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xD7C DUP6 DUP3 PUSH3 0xCF2 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xDEB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xD95 DUP7 PUSH3 0xB4C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xDBE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD97 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xDDE JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xDDA PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xCD4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xDFE DUP2 PUSH3 0x61F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE19 PUSH0 DUP4 ADD DUP5 PUSH3 0xDF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x737562736372696265727320616E6420746865697220616D6F756E747320646F PUSH0 DUP3 ADD MSTORE PUSH32 0x206E6F74206D6174636800000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0xE8B PUSH1 0x2A DUP4 PUSH3 0xE1F JUMP JUMPDEST SWAP2 POP PUSH3 0xE98 DUP3 PUSH3 0xE2F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xEBC DUP2 PUSH3 0xE7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xEFC DUP3 PUSH3 0x7D5 JUMP JUMPDEST SWAP2 POP PUSH3 0xF09 DUP4 PUSH3 0x7D5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xF24 JUMPI PUSH3 0xF23 PUSH3 0xEC3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xF63 DUP3 PUSH3 0x7D5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0xF98 JUMPI PUSH3 0xF97 PUSH3 0xEC3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xFAF DUP3 PUSH3 0x7D5 JUMP JUMPDEST SWAP2 POP PUSH3 0xFBC DUP4 PUSH3 0x7D5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0xFD7 JUMPI PUSH3 0xFD6 PUSH3 0xEC3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xFE8 DUP2 PUSH3 0x7D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x1003 PUSH0 DUP4 ADD DUP7 PUSH3 0xDF3 JUMP JUMPDEST PUSH3 0x1012 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xFDD JUMP JUMPDEST PUSH3 0x1021 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xFDD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x103E PUSH0 DUP4 ADD DUP5 PUSH3 0xFDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE9 DUP1 PUSH3 0x1052 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB93A5396 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB93A5396 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xBD7DAC92 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xC0A4D64D EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x356 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x9F3ADB0E EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xAE84827A EQ PUSH2 0x2B2 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x228 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xDE65A44 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1583 JUMP JUMPDEST PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x15EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x5E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F2 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x381 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x16C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x40C PUSH2 0xA14 JUMP JUMPDEST SWAP1 POP PUSH2 0x419 DUP2 DUP6 DUP6 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42C PUSH2 0xA2D JUMP JUMPDEST DUP1 PUSH1 0xA SWAP1 DUP2 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1892 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x451 PUSH2 0x5FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4CD JUMPI PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BF SWAP1 PUSH2 0x19AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 DUP3 PUSH2 0x51E DUP6 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0x534 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x14 PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST DUP2 LT PUSH2 0x58B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x596 DUP6 DUP6 DUP6 PUSH2 0xAB4 JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F1 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x5FA PUSH0 PUSH2 0xAE2 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x633 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x65F SWAP1 PUSH2 0x16C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x681 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x68D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x6C3 PUSH2 0x5FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x73B JUMPI PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x731 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x78B DUP6 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x795 SWAP2 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0x7A1 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x14 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST DUP2 LT PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EF SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x8519CDB8AD47F1F5F5BC583D2063D1FC1FFED7DAC0CAB9E8B1F6492AA60CBD7F CALLER DUP6 DUP6 PUSH1 0xB PUSH1 0x40 MLOAD PUSH2 0x82E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x840 DUP5 DUP5 PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x851 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x85B DUP3 DUP3 PUSH2 0xBC7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x867 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x871 DUP3 DUP3 PUSH2 0xC46 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0x884 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x998 PUSH2 0xA2D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA08 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FF SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA11 DUP2 PUSH2 0xAE2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA28 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA35 PUSH2 0xA14 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA53 PUSH2 0x5FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB2 JUMPI PUSH2 0xA76 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA9 SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xABE PUSH2 0xA14 JUMP JUMPDEST SWAP1 POP PUSH2 0xACB DUP6 DUP3 DUP6 PUSH2 0xE94 JUMP JUMPDEST PUSH2 0xAD6 DUP6 DUP6 DUP6 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBAF PUSH2 0xA14 JUMP JUMPDEST SWAP1 POP PUSH2 0xBBC DUP2 DUP6 DUP6 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC37 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2E SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC42 DUP3 PUSH0 DUP4 PUSH2 0x1016 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAD SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC1 PUSH0 DUP4 DUP4 PUSH2 0x1016 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD35 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9C SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE8E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE85 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE9F DUP5 DUP5 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xF20 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF11 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF08 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF1F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF96 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8D SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1006 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFD SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1011 DUP4 DUP4 DUP4 PUSH2 0x1016 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1066 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1134 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10EF JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11C5 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1222 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1266 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x124B JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x128B DUP3 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x1295 DUP2 DUP6 PUSH2 0x1239 JUMP JUMPDEST SWAP4 POP PUSH2 0x12A5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x12AE DUP2 PUSH2 0x1271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12D1 DUP2 DUP5 PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1313 DUP3 PUSH2 0x12EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1323 DUP2 PUSH2 0x1309 JUMP JUMPDEST DUP2 EQ PUSH2 0x132D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x133E DUP2 PUSH2 0x131A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1356 DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP2 EQ PUSH2 0x1360 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1371 DUP2 PUSH2 0x134D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138D JUMPI PUSH2 0x138C PUSH2 0x12E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x139A DUP6 DUP3 DUP7 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13AB DUP6 DUP3 DUP7 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C9 DUP2 PUSH2 0x13B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x13C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1426 DUP3 PUSH2 0x1271 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1445 JUMPI PUSH2 0x1444 PUSH2 0x13F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1457 PUSH2 0x12D9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1463 DUP3 DUP3 PUSH2 0x141D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1481 PUSH2 0x13F0 JUMP JUMPDEST JUMPDEST PUSH2 0x148B DUP3 PUSH2 0x1271 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14B8 PUSH2 0x14B3 DUP5 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x144E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14D4 JUMPI PUSH2 0x14D3 PUSH2 0x13EC JUMP JUMPDEST JUMPDEST PUSH2 0x14DF DUP5 DUP3 DUP6 PUSH2 0x1498 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14FB JUMPI PUSH2 0x14FA PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x150B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x12E2 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1546 JUMPI PUSH2 0x1545 PUSH2 0x12E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1552 DUP5 DUP3 DUP6 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1564 DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x157D PUSH0 DUP4 ADD DUP5 PUSH2 0x155B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x159A JUMPI PUSH2 0x1599 PUSH2 0x12E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15A7 DUP7 DUP3 DUP8 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15B8 DUP7 DUP3 DUP8 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15C9 DUP7 DUP3 DUP8 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E8 DUP2 PUSH2 0x15D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1601 PUSH0 DUP4 ADD DUP5 PUSH2 0x15DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161C JUMPI PUSH2 0x161B PUSH2 0x12E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1629 DUP5 DUP3 DUP6 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x163B DUP2 PUSH2 0x1309 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1654 PUSH0 DUP4 ADD DUP5 PUSH2 0x1632 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1670 JUMPI PUSH2 0x166F PUSH2 0x12E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x167D DUP6 DUP3 DUP7 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x168E DUP6 DUP3 DUP7 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16DC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16EF JUMPI PUSH2 0x16EE PUSH2 0x1698 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1751 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x175B DUP7 DUP4 PUSH2 0x1716 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1796 PUSH2 0x1791 PUSH2 0x178C DUP5 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x1344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AF DUP4 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x17C3 PUSH2 0x17BB DUP3 PUSH2 0x179D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1722 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x17D7 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0x17E2 DUP2 DUP5 DUP5 PUSH2 0x17A6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1805 JUMPI PUSH2 0x17FA PUSH0 DUP3 PUSH2 0x17CF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x17E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x184A JUMPI PUSH2 0x181B DUP2 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0x1824 DUP5 PUSH2 0x1707 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1833 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1847 PUSH2 0x183F DUP6 PUSH2 0x1707 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x17E7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x186A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x184F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1882 DUP4 DUP4 PUSH2 0x185B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x189B DUP3 PUSH2 0x122F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B4 JUMPI PUSH2 0x18B3 PUSH2 0x13F0 JUMP JUMPDEST JUMPDEST PUSH2 0x18BE DUP3 SLOAD PUSH2 0x16C5 JUMP JUMPDEST PUSH2 0x18C9 DUP3 DUP3 DUP6 PUSH2 0x1809 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x18FA JUMPI PUSH0 DUP5 ISZERO PUSH2 0x18E8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x18F2 DUP6 DUP3 PUSH2 0x1877 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1908 DUP7 PUSH2 0x16F5 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x192F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x190A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x194C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1948 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x185B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x41646D696E277320746F6B656E7320617265206C6F636B656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1995 PUSH1 0x19 DUP4 PUSH2 0x1239 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A0 DUP3 PUSH2 0x1961 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19C2 DUP2 PUSH2 0x1989 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E7320617265206C6F636B6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19FD PUSH1 0x11 DUP4 PUSH2 0x1239 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A08 DUP3 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A2A DUP2 PUSH2 0x19F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A68 DUP3 PUSH2 0x1344 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A73 DUP4 PUSH2 0x1344 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A8B JUMPI PUSH2 0x1A8A PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A9B DUP3 PUSH2 0x1344 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA6 DUP4 PUSH2 0x1344 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1AB4 DUP2 PUSH2 0x1344 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1ACB JUMPI PUSH2 0x1ACA PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B09 DUP3 PUSH2 0x1344 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B14 DUP4 PUSH2 0x1344 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B24 JUMPI PUSH2 0x1B23 PUSH2 0x1AD2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E657273686970206361707065642061742032302520746F20656E737572 PUSH0 DUP3 ADD MSTORE PUSH32 0x6520646563656E7472616C697A6174696F6E0000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B89 PUSH1 0x32 DUP4 PUSH2 0x1239 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B94 DUP3 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BB6 DUP2 PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x61646D696E277320746F6B656E7320617265206C6F636B656420666F7220616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2079656172000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C17 PUSH1 0x25 DUP4 PUSH2 0x1239 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C22 DUP3 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C44 DUP2 PUSH2 0x1C0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F7420666F722073616C652079657400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C7F PUSH1 0x10 DUP4 PUSH2 0x1239 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8A DUP3 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CAC DUP2 PUSH2 0x1C73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x1CBF DUP2 PUSH2 0x16C5 JUMP JUMPDEST PUSH2 0x1CC9 DUP2 DUP7 PUSH2 0x1239 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x1CE3 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1CF9 JUMPI PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x1D02 DUP6 PUSH2 0x16F5 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D23 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D04 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D47 PUSH0 DUP4 ADD DUP8 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x1D54 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x1D61 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x155B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D73 DUP2 DUP5 PUSH2 0x1CB3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D91 PUSH0 DUP4 ADD DUP7 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x1D9E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x1DAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x155B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xD 0x2E LOG1 0xE6 0x49 CALLCODE 0xE5 0x2C PUSH29 0xEC53763FE632648C82D5ADF0023B379FFBCDD6F752CA64736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "206:3569:0:-:0;;;890:926;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1161:6;1138:5;1144:7;1970:5:3;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1209:7:0::2;:14;1187:11;:18;:36;1179:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;1296:13;1281:12;:28;;;;1350:10;1332:15;:28;;;;:::i;:::-;1320:9;:40;;;;1378:9;1373:215;1397:11;:18;1393:1;:22;1373:215;;;1474:12;;1458;;1445:7;1453:1;1445:10;;;;;;;;:::i;:::-;;;;;;;;:25;;;;:::i;:::-;:41;;1437:50;;;::::0;::::2;;1502:33;1508:11;1520:1;1508:14;;;;;;;;:::i;:::-;;;;;;;;1524:7;1532:1;1524:10;;;;;;;;:::i;:::-;;;;;;;;1502:5;;;:33;;:::i;:::-;1566:7;1574:1;1566:10;;;;;;;;:::i;:::-;;;;;;;;1550:12;;:26;;;;;;;:::i;:::-;;;;;;;;1417:3;;;;;:::i;:::-;;;;1373:215;;;;1600:22;1640:12;;1625;;:27;;;;:::i;:::-;1600:52;;1684:1;1667:14;:18;1663:146;;;1702:29;1708:6;1716:14;1702:5;;;:29;;:::i;:::-;1781:8;1763:15;:26;;;;:::i;:::-;1746:14;:43;;;;1663:146;1168:648;890:926:::0;;;;;;;206:3569;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:3:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:246::-;2202:1;2212:113;2226:6;2223:1;2220:13;2212:113;;;2311:1;2306:3;2302:11;2296:18;2292:1;2287:3;2283:11;2276:39;2248:2;2245:1;2241:10;2236:15;;2212:113;;;2359:1;2350:6;2345:3;2341:16;2334:27;2183:184;2121:246;;;:::o;2373:434::-;2462:5;2487:66;2503:49;2545:6;2503:49;:::i;:::-;2487:66;:::i;:::-;2478:75;;2576:6;2569:5;2562:21;2614:4;2607:5;2603:16;2652:3;2643:6;2638:3;2634:16;2631:25;2628:112;;;2659:79;;:::i;:::-;2628:112;2749:52;2794:6;2789:3;2784;2749:52;:::i;:::-;2468:339;2373:434;;;;;:::o;2827:355::-;2894:5;2943:3;2936:4;2928:6;2924:17;2920:27;2910:122;;2951:79;;:::i;:::-;2910:122;3061:6;3055:13;3086:90;3172:3;3164:6;3157:4;3149:6;3145:17;3086:90;:::i;:::-;3077:99;;2900:282;2827:355;;;;:::o;3188:77::-;3225:7;3254:5;3243:16;;3188:77;;;:::o;3271:122::-;3344:24;3362:5;3344:24;:::i;:::-;3337:5;3334:35;3324:63;;3383:1;3380;3373:12;3324:63;3271:122;:::o;3399:143::-;3456:5;3487:6;3481:13;3472:22;;3503:33;3530:5;3503:33;:::i;:::-;3399:143;;;;:::o;3548:311::-;3625:4;3715:18;3707:6;3704:30;3701:56;;;3737:18;;:::i;:::-;3701:56;3787:4;3779:6;3775:17;3767:25;;3847:4;3841;3837:15;3829:23;;3548:311;;;:::o;3865:117::-;3974:1;3971;3964:12;4005:732;4112:5;4137:81;4153:64;4210:6;4153:64;:::i;:::-;4137:81;:::i;:::-;4128:90;;4238:5;4267:6;4260:5;4253:21;4301:4;4294:5;4290:16;4283:23;;4354:4;4346:6;4342:17;4334:6;4330:30;4383:3;4375:6;4372:15;4369:122;;;4402:79;;:::i;:::-;4369:122;4517:6;4500:231;4534:6;4529:3;4526:15;4500:231;;;4609:3;4638:48;4682:3;4670:10;4638:48;:::i;:::-;4633:3;4626:61;4716:4;4711:3;4707:14;4700:21;;4576:155;4560:4;4555:3;4551:14;4544:21;;4500:231;;;4504:21;4118:619;;4005:732;;;;;:::o;4760:385::-;4842:5;4891:3;4884:4;4876:6;4872:17;4868:27;4858:122;;4899:79;;:::i;:::-;4858:122;5009:6;5003:13;5034:105;5135:3;5127:6;5120:4;5112:6;5108:17;5034:105;:::i;:::-;5025:114;;4848:297;4760:385;;;;:::o;5151:311::-;5228:4;5318:18;5310:6;5307:30;5304:56;;;5340:18;;:::i;:::-;5304:56;5390:4;5382:6;5378:17;5370:25;;5450:4;5444;5440:15;5432:23;;5151:311;;;:::o;5485:732::-;5592:5;5617:81;5633:64;5690:6;5633:64;:::i;:::-;5617:81;:::i;:::-;5608:90;;5718:5;5747:6;5740:5;5733:21;5781:4;5774:5;5770:16;5763:23;;5834:4;5826:6;5822:17;5814:6;5810:30;5863:3;5855:6;5852:15;5849:122;;;5882:79;;:::i;:::-;5849:122;5997:6;5980:231;6014:6;6009:3;6006:15;5980:231;;;6089:3;6118:48;6162:3;6150:10;6118:48;:::i;:::-;6113:3;6106:61;6196:4;6191:3;6187:14;6180:21;;6056:155;6040:4;6035:3;6031:14;6024:21;;5980:231;;;5984:21;5598:619;;5485:732;;;;;:::o;6240:385::-;6322:5;6371:3;6364:4;6356:6;6352:17;6348:27;6338:122;;6379:79;;:::i;:::-;6338:122;6489:6;6483:13;6514:105;6615:3;6607:6;6600:4;6592:6;6588:17;6514:105;:::i;:::-;6505:114;;6328:297;6240:385;;;;:::o;6631:2043::-;6825:6;6833;6841;6849;6857;6865;6873;6922:3;6910:9;6901:7;6897:23;6893:33;6890:120;;;6929:79;;:::i;:::-;6890:120;7049:1;7074:64;7130:7;7121:6;7110:9;7106:22;7074:64;:::i;:::-;7064:74;;7020:128;7208:2;7197:9;7193:18;7187:25;7239:18;7231:6;7228:30;7225:117;;;7261:79;;:::i;:::-;7225:117;7366:74;7432:7;7423:6;7412:9;7408:22;7366:74;:::i;:::-;7356:84;;7158:292;7510:2;7499:9;7495:18;7489:25;7541:18;7533:6;7530:30;7527:117;;;7563:79;;:::i;:::-;7527:117;7668:74;7734:7;7725:6;7714:9;7710:22;7668:74;:::i;:::-;7658:84;;7460:292;7791:2;7817:64;7873:7;7864:6;7853:9;7849:22;7817:64;:::i;:::-;7807:74;;7762:129;7951:3;7940:9;7936:19;7930:26;7983:18;7975:6;7972:30;7969:117;;;8005:79;;:::i;:::-;7969:117;8110:89;8191:7;8182:6;8171:9;8167:22;8110:89;:::i;:::-;8100:99;;7901:308;8269:3;8258:9;8254:19;8248:26;8301:18;8293:6;8290:30;8287:117;;;8323:79;;:::i;:::-;8287:117;8428:89;8509:7;8500:6;8489:9;8485:22;8428:89;:::i;:::-;8418:99;;8219:308;8566:3;8593:64;8649:7;8640:6;8629:9;8625:22;8593:64;:::i;:::-;8583:74;;8537:130;6631:2043;;;;;;;;;;:::o;8680:99::-;8732:6;8766:5;8760:12;8750:22;;8680:99;;;:::o;8785:180::-;8833:77;8830:1;8823:88;8930:4;8927:1;8920:15;8954:4;8951:1;8944:15;8971:320;9015:6;9052:1;9046:4;9042:12;9032:22;;9099:1;9093:4;9089:12;9120:18;9110:81;;9176:4;9168:6;9164:17;9154:27;;9110:81;9238:2;9230:6;9227:14;9207:18;9204:38;9201:84;;9257:18;;:::i;:::-;9201:84;9022:269;8971:320;;;:::o;9297:141::-;9346:4;9369:3;9361:11;;9392:3;9389:1;9382:14;9426:4;9423:1;9413:18;9405:26;;9297:141;;;:::o;9444:93::-;9481:6;9528:2;9523;9516:5;9512:14;9508:23;9498:33;;9444:93;;;:::o;9543:107::-;9587:8;9637:5;9631:4;9627:16;9606:37;;9543:107;;;;:::o;9656:393::-;9725:6;9775:1;9763:10;9759:18;9798:97;9828:66;9817:9;9798:97;:::i;:::-;9916:39;9946:8;9935:9;9916:39;:::i;:::-;9904:51;;9988:4;9984:9;9977:5;9973:21;9964:30;;10037:4;10027:8;10023:19;10016:5;10013:30;10003:40;;9732:317;;9656:393;;;;;:::o;10055:60::-;10083:3;10104:5;10097:12;;10055:60;;;:::o;10121:142::-;10171:9;10204:53;10222:34;10231:24;10249:5;10231:24;:::i;:::-;10222:34;:::i;:::-;10204:53;:::i;:::-;10191:66;;10121:142;;;:::o;10269:75::-;10312:3;10333:5;10326:12;;10269:75;;;:::o;10350:269::-;10460:39;10491:7;10460:39;:::i;:::-;10521:91;10570:41;10594:16;10570:41;:::i;:::-;10562:6;10555:4;10549:11;10521:91;:::i;:::-;10515:4;10508:105;10426:193;10350:269;;;:::o;10625:73::-;10670:3;10625:73;:::o;10704:189::-;10781:32;;:::i;:::-;10822:65;10880:6;10872;10866:4;10822:65;:::i;:::-;10757:136;10704:189;;:::o;10899:186::-;10959:120;10976:3;10969:5;10966:14;10959:120;;;11030:39;11067:1;11060:5;11030:39;:::i;:::-;11003:1;10996:5;10992:13;10983:22;;10959:120;;;10899:186;;:::o;11091:543::-;11192:2;11187:3;11184:11;11181:446;;;11226:38;11258:5;11226:38;:::i;:::-;11310:29;11328:10;11310:29;:::i;:::-;11300:8;11296:44;11493:2;11481:10;11478:18;11475:49;;;11514:8;11499:23;;11475:49;11537:80;11593:22;11611:3;11593:22;:::i;:::-;11583:8;11579:37;11566:11;11537:80;:::i;:::-;11196:431;;11181:446;11091:543;;;:::o;11640:117::-;11694:8;11744:5;11738:4;11734:16;11713:37;;11640:117;;;;:::o;11763:169::-;11807:6;11840:51;11888:1;11884:6;11876:5;11873:1;11869:13;11840:51;:::i;:::-;11836:56;11921:4;11915;11911:15;11901:25;;11814:118;11763:169;;;;:::o;11937:295::-;12013:4;12159:29;12184:3;12178:4;12159:29;:::i;:::-;12151:37;;12221:3;12218:1;12214:11;12208:4;12205:21;12197:29;;11937:295;;;;:::o;12237:1395::-;12354:37;12387:3;12354:37;:::i;:::-;12456:18;12448:6;12445:30;12442:56;;;12478:18;;:::i;:::-;12442:56;12522:38;12554:4;12548:11;12522:38;:::i;:::-;12607:67;12667:6;12659;12653:4;12607:67;:::i;:::-;12701:1;12725:4;12712:17;;12757:2;12749:6;12746:14;12774:1;12769:618;;;;13431:1;13448:6;13445:77;;;13497:9;13492:3;13488:19;13482:26;13473:35;;13445:77;13548:67;13608:6;13601:5;13548:67;:::i;:::-;13542:4;13535:81;13404:222;12739:887;;12769:618;12821:4;12817:9;12809:6;12805:22;12855:37;12887:4;12855:37;:::i;:::-;12914:1;12928:208;12942:7;12939:1;12936:14;12928:208;;;13021:9;13016:3;13012:19;13006:26;12998:6;12991:42;13072:1;13064:6;13060:14;13050:24;;13119:2;13108:9;13104:18;13091:31;;12965:4;12962:1;12958:12;12953:17;;12928:208;;;13164:6;13155:7;13152:19;13149:179;;;13222:9;13217:3;13213:19;13207:26;13265:48;13307:4;13299:6;13295:17;13284:9;13265:48;:::i;:::-;13257:6;13250:64;13172:156;13149:179;13374:1;13370;13362:6;13358:14;13354:22;13348:4;13341:36;12776:611;;;12739:887;;12329:1303;;;12237:1395;;:::o;13638:118::-;13725:24;13743:5;13725:24;:::i;:::-;13720:3;13713:37;13638:118;;:::o;13762:222::-;13855:4;13893:2;13882:9;13878:18;13870:26;;13906:71;13974:1;13963:9;13959:17;13950:6;13906:71;:::i;:::-;13762:222;;;;:::o;13990:169::-;14074:11;14108:6;14103:3;14096:19;14148:4;14143:3;14139:14;14124:29;;13990:169;;;;:::o;14165:229::-;14305:34;14301:1;14293:6;14289:14;14282:58;14374:12;14369:2;14361:6;14357:15;14350:37;14165:229;:::o;14400:366::-;14542:3;14563:67;14627:2;14622:3;14563:67;:::i;:::-;14556:74;;14639:93;14728:3;14639:93;:::i;:::-;14757:2;14752:3;14748:12;14741:19;;14400:366;;;:::o;14772:419::-;14938:4;14976:2;14965:9;14961:18;14953:26;;15025:9;15019:4;15015:20;15011:1;15000:9;14996:17;14989:47;15053:131;15179:4;15053:131;:::i;:::-;15045:139;;14772:419;;;:::o;15197:180::-;15245:77;15242:1;15235:88;15342:4;15339:1;15332:15;15366:4;15363:1;15356:15;15383:191;15423:3;15442:20;15460:1;15442:20;:::i;:::-;15437:25;;15476:20;15494:1;15476:20;:::i;:::-;15471:25;;15519:1;15516;15512:9;15505:16;;15540:3;15537:1;15534:10;15531:36;;;15547:18;;:::i;:::-;15531:36;15383:191;;;;:::o;15580:180::-;15628:77;15625:1;15618:88;15725:4;15722:1;15715:15;15749:4;15746:1;15739:15;15766:233;15805:3;15828:24;15846:5;15828:24;:::i;:::-;15819:33;;15874:66;15867:5;15864:77;15861:103;;15944:18;;:::i;:::-;15861:103;15991:1;15984:5;15980:13;15973:20;;15766:233;;;:::o;16005:194::-;16045:4;16065:20;16083:1;16065:20;:::i;:::-;16060:25;;16099:20;16117:1;16099:20;:::i;:::-;16094:25;;16143:1;16140;16136:9;16128:17;;16167:1;16161:4;16158:11;16155:37;;;16172:18;;:::i;:::-;16155:37;16005:194;;;;:::o;16205:118::-;16292:24;16310:5;16292:24;:::i;:::-;16287:3;16280:37;16205:118;;:::o;16329:442::-;16478:4;16516:2;16505:9;16501:18;16493:26;;16529:71;16597:1;16586:9;16582:17;16573:6;16529:71;:::i;:::-;16610:72;16678:2;16667:9;16663:18;16654:6;16610:72;:::i;:::-;16692;16760:2;16749:9;16745:18;16736:6;16692:72;:::i;:::-;16329:442;;;;;;:::o;16777:222::-;16870:4;16908:2;16897:9;16893:18;16885:26;;16921:71;16989:1;16978:9;16974:17;16965:6;16921:71;:::i;:::-;16777:222;;;;:::o;206:3569:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ForceBurn_343": {
									"entryPoint": 2121,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@ForceMint_328": {
									"entryPoint": 2143,
									"id": 328,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_adminLockTime_15": {
									"entryPoint": 1716,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1035": {
									"entryPoint": 2587,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1095": {
									"entryPoint": 3269,
									"id": 1095,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1017": {
									"entryPoint": 3015,
									"id": 1017,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_429": {
									"entryPoint": 2605,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_984": {
									"entryPoint": 3142,
									"id": 984,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1260": {
									"entryPoint": 2580,
									"id": 1260,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1143": {
									"entryPoint": 3732,
									"id": 1143,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_491": {
									"entryPoint": 2786,
									"id": 491,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_874": {
									"entryPoint": 3878,
									"id": 874,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_951": {
									"entryPoint": 4118,
									"id": 951,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_771": {
									"entryPoint": 2318,
									"id": 771,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_795": {
									"entryPoint": 1026,
									"id": 795,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_730": {
									"entryPoint": 1444,
									"id": 730,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_173": {
									"entryPoint": 1440,
									"id": 173,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDocumentURI_301": {
									"entryPoint": 2165,
									"id": 301,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLockTime_229": {
									"entryPoint": 2309,
									"id": 229,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_690": {
									"entryPoint": 882,
									"id": 690,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_412": {
									"entryPoint": 1532,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_443": {
									"entryPoint": 1513,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDocumentURI_313": {
									"entryPoint": 1060,
									"id": 313,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_699": {
									"entryPoint": 1572,
									"id": 699,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_717": {
									"entryPoint": 1087,
									"id": 717,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_293": {
									"entryPoint": 1096,
									"id": 293,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_827": {
									"entryPoint": 2740,
									"id": 827,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_471": {
									"entryPoint": 2448,
									"id": 471,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_221": {
									"entryPoint": 1722,
									"id": 221,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_754": {
									"entryPoint": 2981,
									"id": 754,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 5286,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_string_storage__to_t_address_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7476,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7550,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 5224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 6153,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 4873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 6119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 6012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4681,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 6263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6705,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6866,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 6045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5096,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5100,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4838,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4834,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 5910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 6223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 6095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e": {
									"entryPoint": 7101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625": {
									"entryPoint": 6497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a": {
									"entryPoint": 7243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 5922,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 6091,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21609:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:7",
																"statements": []
															},
															"src": "378:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:246:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:7",
														"type": ""
													}
												],
												"src": "539:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:7",
														"type": ""
													}
												],
												"src": "647:377:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:7",
														"type": ""
													}
												],
												"src": "1030:313:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:7",
														"type": ""
													}
												],
												"src": "1349:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:7",
														"type": ""
													}
												],
												"src": "1676:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:7",
														"type": ""
													}
												],
												"src": "1808:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:7"
															},
															"nodeType": "YulIf",
															"src": "1963:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:7",
														"type": ""
													}
												],
												"src": "1910:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:7",
														"type": ""
													}
												],
												"src": "2038:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:7",
														"type": ""
													}
												],
												"src": "2183:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:7"
															},
															"nodeType": "YulIf",
															"src": "2319:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:7",
														"type": ""
													}
												],
												"src": "2266:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:7",
														"type": ""
													}
												],
												"src": "2394:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:7"
															},
															"nodeType": "YulIf",
															"src": "2632:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:7",
														"type": ""
													}
												],
												"src": "2539:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:7",
														"type": ""
													}
												],
												"src": "3019:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:7",
														"type": ""
													}
												],
												"src": "3115:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:7",
														"type": ""
													}
												],
												"src": "3230:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3446:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3658:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3675:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3678:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3668:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3668:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3668:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3569:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3720:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3737:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3740:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3730:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3730:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3730:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3834:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3837:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3827:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3827:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3827:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3858:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3861:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3851:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3851:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3851:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3692:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3921:238:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3931:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3953:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3983:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3961:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3961:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3949:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3949:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3935:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4100:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4102:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4102:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4102:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4043:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4055:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4040:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4040:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4079:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4091:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4076:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4037:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4037:62:7"
															},
															"nodeType": "YulIf",
															"src": "4034:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4138:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4142:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4131:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3907:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3915:4:7",
														"type": ""
													}
												],
												"src": "3878:281:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4206:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4216:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "4226:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4216:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4275:6:7"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4283:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4255:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4255:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4255:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4190:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4199:6:7",
														"type": ""
													}
												],
												"src": "4165:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4367:241:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4472:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4474:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4474:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4474:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4444:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4452:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4441:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4441:30:7"
															},
															"nodeType": "YulIf",
															"src": "4438:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4504:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4534:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "4512:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4512:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4504:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4578:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4590:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4596:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4586:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4578:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4351:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4362:4:7",
														"type": ""
													}
												],
												"src": "4300:308:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4678:82:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4701:3:7"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4706:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4711:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4688:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4688:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4738:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4743:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4734:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4752:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4727:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4727:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4660:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4665:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4670:6:7",
														"type": ""
													}
												],
												"src": "4614:146:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4850:341:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4860:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4927:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4885:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4885:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4869:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4860:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4951:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4958:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4944:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4944:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4944:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4974:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4989:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4996:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4985:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4985:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4978:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5039:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "5041:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5041:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5041:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5020:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5025:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5016:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5016:16:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5034:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5013:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:25:7"
															},
															"nodeType": "YulIf",
															"src": "5010:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5168:3:7"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5173:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5178:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5131:36:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5131:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4823:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4828:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4836:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4844:5:7",
														"type": ""
													}
												],
												"src": "4766:425:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5273:278:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5322:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5324:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5324:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5324:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5301:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5309:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5297:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5297:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5316:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5293:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5293:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5286:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5286:35:7"
															},
															"nodeType": "YulIf",
															"src": "5283:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5414:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5441:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5428:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5418:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5457:88:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5518:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5526:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5514:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5514:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5533:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5541:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5466:47:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5466:79:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5457:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5251:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5259:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5267:5:7",
														"type": ""
													}
												],
												"src": "5211:340:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5633:433:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5679:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5681:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5681:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5681:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5654:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5663:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5650:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5650:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5675:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5646:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5646:32:7"
															},
															"nodeType": "YulIf",
															"src": "5643:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5772:287:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5787:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5818:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5829:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5814:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5814:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5801:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5801:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5791:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5879:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5881:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5881:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5881:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5851:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5859:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5848:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5848:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "5845:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5976:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6021:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6032:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6017:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6017:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6041:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5986:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5986:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5976:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5603:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5614:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5626:6:7",
														"type": ""
													}
												],
												"src": "5557:509:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6137:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6154:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6177:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6159:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6159:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6147:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6147:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6147:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6125:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6132:3:7",
														"type": ""
													}
												],
												"src": "6072:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6294:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6304:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6316:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6327:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6312:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6312:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6304:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6384:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6397:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6408:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6393:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6393:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6340:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6340:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6340:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6266:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6278:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6289:4:7",
														"type": ""
													}
												],
												"src": "6196:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6524:519:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6570:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6572:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6572:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6572:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6545:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6554:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6541:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6541:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6566:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6537:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6537:32:7"
															},
															"nodeType": "YulIf",
															"src": "6534:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "6663:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6678:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6692:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6682:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6707:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6742:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6753:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6738:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6738:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6762:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6717:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6717:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6707:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6790:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6805:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6819:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6809:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6835:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6870:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6881:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6866:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6866:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6890:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6845:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6845:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6835:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6918:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6933:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6937:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6963:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6998:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7009:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6994:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6994:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7018:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6973:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6973:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6963:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6478:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6489:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6501:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6509:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6517:6:7",
														"type": ""
													}
												],
												"src": "6424:619:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7092:43:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7102:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7117:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7124:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7113:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7113:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7102:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7074:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7084:7:7",
														"type": ""
													}
												],
												"src": "7049:86:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7202:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7240:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7224:15:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7224:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7212:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7212:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7212:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7190:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7197:3:7",
														"type": ""
													}
												],
												"src": "7141:112:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7353:120:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7363:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7375:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7386:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7371:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7371:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7363:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7439:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7463:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7448:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7448:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7399:39:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7399:67:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7399:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7325:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7337:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7348:4:7",
														"type": ""
													}
												],
												"src": "7259:214:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7545:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7593:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7566:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7575:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7562:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7562:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7587:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7558:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7558:32:7"
															},
															"nodeType": "YulIf",
															"src": "7555:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "7684:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7699:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7703:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7728:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7763:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7774:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7759:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7759:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7783:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7738:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7738:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7728:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7515:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7526:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7538:6:7",
														"type": ""
													}
												],
												"src": "7479:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7879:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7896:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7919:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7901:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7901:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7889:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7889:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7867:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7874:3:7",
														"type": ""
													}
												],
												"src": "7814:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8036:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8046:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8058:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8069:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8054:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8054:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8046:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8126:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8139:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8150:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8135:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8135:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8082:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8082:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8082:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8008:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8020:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8031:4:7",
														"type": ""
													}
												],
												"src": "7938:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8249:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8295:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8297:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8297:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8297:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8270:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8279:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8266:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8266:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8291:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8262:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8262:32:7"
															},
															"nodeType": "YulIf",
															"src": "8259:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "8388:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8403:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8417:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8407:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8432:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8467:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8478:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8463:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8463:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8487:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8442:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8442:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8432:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8515:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8530:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8544:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8534:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8560:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8595:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8606:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8591:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8591:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8615:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8570:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8570:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8560:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8211:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8222:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8234:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8242:6:7",
														"type": ""
													}
												],
												"src": "8166:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8674:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8691:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8694:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8684:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8684:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8788:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8791:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8781:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8781:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8781:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8812:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8815:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8805:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8805:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8805:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "8646:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8883:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8893:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8907:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8913:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8903:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8903:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8893:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8924:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8954:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8960:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8950:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8950:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8928:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9001:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9015:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9029:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9037:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9025:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9025:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9015:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8981:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8974:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8974:26:7"
															},
															"nodeType": "YulIf",
															"src": "8971:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9104:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "9118:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9118:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9118:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9068:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9091:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9099:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9088:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9088:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9065:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9065:38:7"
															},
															"nodeType": "YulIf",
															"src": "9062:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8867:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8876:6:7",
														"type": ""
													}
												],
												"src": "8832:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9212:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9222:11:7",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "9230:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9222:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9250:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9253:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9243:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9243:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9243:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9266:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9284:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9287:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9274:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9274:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9266:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9199:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9207:4:7",
														"type": ""
													}
												],
												"src": "9158:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9349:49:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9359:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9377:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9384:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9373:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9373:14:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9389:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9369:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9369:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9359:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9332:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9342:6:7",
														"type": ""
													}
												],
												"src": "9305:93:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9457:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9467:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "9492:4:7"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9498:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "9488:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9488:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "9467:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "9432:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9438:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "9448:8:7",
														"type": ""
													}
												],
												"src": "9404:107:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9593:317:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9603:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "9624:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9636:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9620:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9620:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "9607:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9647:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "9678:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9689:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "9659:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9659:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "9651:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9765:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "9796:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "9807:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "9777:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9777:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "9765:8:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9825:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9838:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "9849:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9845:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9845:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9834:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9834:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9825:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9864:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9877:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "9888:8:7"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "9898:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9884:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9884:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9874:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9874:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9864:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9554:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "9561:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "9573:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9586:6:7",
														"type": ""
													}
												],
												"src": "9517:393:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9948:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9958:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9965:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9958:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9934:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9944:3:7",
														"type": ""
													}
												],
												"src": "9916:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10042:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10052:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10110:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10092:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10092:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "10083:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10083:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10065:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10065:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10052:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10022:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10032:9:7",
														"type": ""
													}
												],
												"src": "9982:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10177:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10187:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10194:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10187:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10163:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10173:3:7",
														"type": ""
													}
												],
												"src": "10130:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10287:193:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10297:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "10352:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10321:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10321:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "10301:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "10376:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "10416:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "10410:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10410:11:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10423:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "10455:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10431:23:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10431:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "10382:27:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10382:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "10369:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10369:105:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10369:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "10264:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10270:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "10278:7:7",
														"type": ""
													}
												],
												"src": "10211:269:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10535:24:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10545:8:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10552:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10545:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10531:3:7",
														"type": ""
													}
												],
												"src": "10486:73:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10618:136:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10628:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10642:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10642:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "10632:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "10727:4:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10733:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "10741:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10683:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10683:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10683:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "10604:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10610:6:7",
														"type": ""
													}
												],
												"src": "10565:189:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10810:136:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10877:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "10921:5:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10928:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "10891:29:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10891:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10891:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "10830:5:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10837:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10827:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10827:14:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10842:26:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10844:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "10857:5:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10864:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10853:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10853:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "10844:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10824:2:7",
																"statements": []
															},
															"src": "10820:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "10798:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10805:3:7",
														"type": ""
													}
												],
												"src": "10760:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11031:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11057:431:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11071:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "11119:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "11087:31:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11087:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "11075:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11138:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "11161:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "11189:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "11171:17:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11171:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11157:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11157:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "11142:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11358:27:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "11360:23:7",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "11375:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "11360:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "11342:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11354:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "11339:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11339:18:7"
																		},
																		"nodeType": "YulIf",
																		"src": "11336:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "11427:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "11444:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "11472:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "11454:17:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11454:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11440:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11440:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "11398:28:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11398:80:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11398:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "11048:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11053:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11045:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11045:11:7"
															},
															"nodeType": "YulIf",
															"src": "11042:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11007:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "11014:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "11019:10:7",
														"type": ""
													}
												],
												"src": "10952:543:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11564:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11574:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "11599:4:7"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11605:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "11595:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11595:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "11574:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "11539:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11545:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "11555:8:7",
														"type": ""
													}
												],
												"src": "11501:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11675:118:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11685:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11734:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "11737:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "11730:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11730:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11749:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "11745:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11745:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "11701:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11701:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "11697:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11697:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "11689:4:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11762:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11776:4:7"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "11782:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11772:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11772:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11762:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11652:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "11658:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11668:6:7",
														"type": ""
													}
												],
												"src": "11624:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11879:214:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12012:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12039:4:7"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "12045:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "12020:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12020:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12012:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12058:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12069:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12079:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "12082:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "12075:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12075:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12066:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12066:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "12058:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11860:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "11866:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "11874:4:7",
														"type": ""
													}
												],
												"src": "11798:295:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12190:1303:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12201:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12248:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12215:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12215:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "12205:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12337:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12339:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12339:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12339:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "12309:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12317:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12306:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12306:30:7"
															},
															"nodeType": "YulIf",
															"src": "12303:56:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12369:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "12415:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "12409:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12409:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "12383:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12383:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "12373:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "12514:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "12520:6:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "12528:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "12468:45:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12468:67:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12468:67:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12545:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12562:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "12549:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12573:17:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12586:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "12573:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12637:611:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12651:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "12670:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12682:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "12678:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12678:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "12666:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12666:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "12655:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12702:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "12748:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "12716:31:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12716:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "12706:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12766:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12775:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "12770:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12834:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "12859:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "12877:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "12882:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "12873:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "12873:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "12867:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12867:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "12852:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12852:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12852:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "12911:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "12925:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12933:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12921:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12921:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "12911:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "12952:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "12969:9:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12980:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12965:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12965:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "12952:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12800:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "12803:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "12797:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12797:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "12812:21:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "12814:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "12823:1:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12826:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12819:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12819:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12814:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "12793:3:7",
																					"statements": []
																				},
																				"src": "12789:208:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "13033:156:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "13051:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "13078:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "13083:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "13074:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "13074:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "13068:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13068:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "13055:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "13118:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "13145:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "13160:6:7"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "13168:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "13156:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "13156:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "13126:18:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "13126:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "13111:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13111:64:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "13111:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "13016:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "13025:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "13013:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13013:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "13010:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "13209:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "13223:6:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "13231:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "13219:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13219:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "13235:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13215:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13215:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "13202:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13202:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13202:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12630:618:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12635:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13265:222:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "13279:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13292:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "13283:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "13316:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "13334:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "13353:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "13358:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "13349:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "13349:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "13343:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13343:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "13334:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "13309:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "13306:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "13403:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "13462:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "13469:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "13409:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13409:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "13396:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13396:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13396:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "13257:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "12610:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12618:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12607:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12607:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "12600:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "12179:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12185:3:7",
														"type": ""
													}
												],
												"src": "12098:1395:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13605:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13627:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13635:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13623:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13623:14:7"
																	},
																	{
																		"hexValue": "41646d696e277320746f6b656e7320617265206c6f636b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13639:27:7",
																		"type": "",
																		"value": "Admin's tokens are locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13616:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13616:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13616:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13597:6:7",
														"type": ""
													}
												],
												"src": "13499:175:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13826:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13836:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13902:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13907:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13843:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13843:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13836:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14008:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625",
																	"nodeType": "YulIdentifier",
																	"src": "13919:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13919:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13919:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14021:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14032:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14037:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14028:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14028:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14021:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13814:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13822:3:7",
														"type": ""
													}
												],
												"src": "13680:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14223:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14233:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14245:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14256:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14241:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14241:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14233:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14280:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14291:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14276:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14276:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14299:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14305:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14295:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14295:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14269:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14269:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14269:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14325:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14459:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14333:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14333:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14325:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14203:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14218:4:7",
														"type": ""
													}
												],
												"src": "14052:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14583:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14605:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14613:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14601:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14601:14:7"
																	},
																	{
																		"hexValue": "546f6b656e7320617265206c6f636b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14617:19:7",
																		"type": "",
																		"value": "Tokens are locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14594:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14594:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14594:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14575:6:7",
														"type": ""
													}
												],
												"src": "14477:167:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14796:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14806:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14872:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14877:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14813:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14813:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14806:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14978:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc",
																	"nodeType": "YulIdentifier",
																	"src": "14889:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14889:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14889:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14991:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15002:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15007:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14998:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14998:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14991:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14784:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14792:3:7",
														"type": ""
													}
												],
												"src": "14650:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15193:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15203:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15215:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15226:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15211:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15211:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15203:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15250:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15261:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15246:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15246:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15269:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15275:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15265:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15265:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15239:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15239:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15239:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15295:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15429:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15303:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15303:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15295:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15173:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15188:4:7",
														"type": ""
													}
												],
												"src": "15022:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15475:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15492:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15495:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15485:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15485:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15485:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15589:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15592:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15582:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15582:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15582:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15616:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15606:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15606:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15606:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15447:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15677:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15687:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15710:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15692:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15692:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15687:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15721:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15744:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15726:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15726:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15721:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15755:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15766:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15769:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15762:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15762:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15755:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15795:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15797:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15797:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15797:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15787:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "15790:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15784:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15784:10:7"
															},
															"nodeType": "YulIf",
															"src": "15781:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15664:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15667:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15673:3:7",
														"type": ""
													}
												],
												"src": "15633:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15878:362:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15888:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15911:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15893:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15893:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15888:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15922:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15945:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15927:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15927:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15922:1:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15956:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15979:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15982:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15975:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15975:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "15960:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15993:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "16022:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16004:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16004:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "15993:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16211:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16213:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16213:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16213:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "16144:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "16137:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16137:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "16167:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "16174:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "16183:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "16170:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16170:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "16164:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16164:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "16117:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16117:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16097:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16097:113:7"
															},
															"nodeType": "YulIf",
															"src": "16094:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15861:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15864:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "15870:7:7",
														"type": ""
													}
												],
												"src": "15830:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16274:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16291:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16294:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16284:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16284:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16284:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16388:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16391:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16381:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16381:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16381:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16412:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16415:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16405:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16405:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16405:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "16246:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16474:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16484:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16507:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16489:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16489:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16484:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16518:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16541:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16523:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16523:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16518:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16565:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "16567:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16567:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16567:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16562:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16555:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16555:9:7"
															},
															"nodeType": "YulIf",
															"src": "16552:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16597:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16606:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16609:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16602:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16602:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16597:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16463:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16466:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16472:1:7",
														"type": ""
													}
												],
												"src": "16432:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16729:131:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16751:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16759:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16747:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16747:14:7"
																	},
																	{
																		"hexValue": "4f776e657273686970206361707065642061742032302520746f20656e737572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16763:34:7",
																		"type": "",
																		"value": "Ownership capped at 20% to ensur"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16740:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16740:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16740:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16819:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16827:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16815:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16815:15:7"
																	},
																	{
																		"hexValue": "6520646563656e7472616c697a6174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16832:20:7",
																		"type": "",
																		"value": "e decentralization"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16808:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16808:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16808:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16721:6:7",
														"type": ""
													}
												],
												"src": "16623:237:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17012:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17022:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17088:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17093:2:7",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17029:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17029:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17022:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17194:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036",
																	"nodeType": "YulIdentifier",
																	"src": "17105:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17105:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17105:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17207:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17218:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17223:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17214:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17214:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17207:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17000:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17008:3:7",
														"type": ""
													}
												],
												"src": "16866:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17409:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17419:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17431:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17442:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17427:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17427:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17419:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17466:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17477:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17462:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17462:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17485:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17491:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17481:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17481:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17455:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17455:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17455:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17511:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17645:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17519:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17519:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17511:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17389:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17404:4:7",
														"type": ""
													}
												],
												"src": "17238:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17769:118:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17791:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17799:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17787:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17787:14:7"
																	},
																	{
																		"hexValue": "61646d696e277320746f6b656e7320617265206c6f636b656420666f7220616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17803:34:7",
																		"type": "",
																		"value": "admin's tokens are locked for an"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17780:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17780:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17780:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17859:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17867:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17855:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17855:15:7"
																	},
																	{
																		"hexValue": "2079656172",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17872:7:7",
																		"type": "",
																		"value": " year"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17848:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "17848:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17848:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17761:6:7",
														"type": ""
													}
												],
												"src": "17663:224:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18039:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18049:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18115:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18120:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18056:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18056:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18049:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18221:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e",
																	"nodeType": "YulIdentifier",
																	"src": "18132:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18132:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18132:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18234:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18245:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18250:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18241:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18241:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18234:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18027:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18035:3:7",
														"type": ""
													}
												],
												"src": "17893:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18436:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18446:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18458:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18469:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18454:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18454:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18446:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18493:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18504:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18489:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18489:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18512:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18518:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18508:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18508:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18482:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18482:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18482:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18538:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18672:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18546:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18546:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18538:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18416:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18431:4:7",
														"type": ""
													}
												],
												"src": "18265:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18796:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18818:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18826:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18814:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18814:14:7"
																	},
																	{
																		"hexValue": "6e6f7420666f722073616c6520796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18830:18:7",
																		"type": "",
																		"value": "not for sale yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18807:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "18807:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18807:42:7"
														}
													]
												},
												"name": "store_literal_in_memory_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18788:6:7",
														"type": ""
													}
												],
												"src": "18690:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19008:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19018:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19084:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19089:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19025:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19025:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19018:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19190:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a",
																	"nodeType": "YulIdentifier",
																	"src": "19101:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19101:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19101:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19203:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19214:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19219:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19210:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19210:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19203:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18996:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19004:3:7",
														"type": ""
													}
												],
												"src": "18862:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19405:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19415:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19427:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19438:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19423:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19423:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19415:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19462:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19473:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19458:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19458:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19481:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19487:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19477:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19477:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19451:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19451:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19451:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19507:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19641:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19515:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19515:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19507:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19385:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19400:4:7",
														"type": ""
													}
												],
												"src": "19234:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19772:742:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19782:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19805:5:7"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19799:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19799:12:7"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "19786:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19820:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "19860:9:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "19834:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19834:36:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19824:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19879:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19945:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19950:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19886:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19886:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19879:3:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20006:157:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "20059:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "20068:9:7"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "20083:4:7",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "20079:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "20079:9:7"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "20064:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20064:25:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "20052:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20052:38:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20052:38:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "20103:50:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "20114:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "20123:4:7",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nodeType": "YulIdentifier",
																													"src": "20143:6:7"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "20136:6:7"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "20136:14:7"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "20129:6:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "20129:22:7"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "20119:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20119:33:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20110:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20110:43:7"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "20103:3:7"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "19999:164:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20004:1:7",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20179:329:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "20224:53:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "20271:5:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "20239:31:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20239:38:7"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "20228:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "20290:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20299:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "20294:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "20357:110:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "20386:3:7"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "20391:1:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "20382:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20382:11:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "20401:7:7"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "20395:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20395:14:7"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "20375:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20375:35:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "20375:35:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "20427:26:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "20442:7:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "20451:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "20438:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20438:15:7"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "20427:7:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "20324:1:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "20327:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "20321:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20321:13:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "20335:21:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "20337:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "20346:1:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "20349:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "20342:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20342:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "20337:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "20317:3:7",
																					"statements": []
																				},
																				"src": "20313:154:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "20480:18:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "20491:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "20496:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20487:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20487:11:7"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "20480:3:7"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "20172:336:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20177:1:7",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "19977:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19988:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19973:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "19973:17:7"
															},
															"nodeType": "YulSwitch",
															"src": "19966:542:7"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19753:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19760:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19768:3:7",
														"type": ""
													}
												],
												"src": "19683:831:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20719:439:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20729:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20741:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20752:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20737:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20737:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20729:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20810:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20823:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20834:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20819:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20819:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20766:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20766:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20766:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20891:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20904:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20915:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20900:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20900:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20847:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20847:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20847:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20973:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20986:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20997:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20982:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20982:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20929:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "20929:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20929:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21022:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21033:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21018:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21018:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21042:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21048:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21038:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21038:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21011:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21011:48:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21011:48:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21068:83:7",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "21137:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21146:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21076:60:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21076:75:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21068:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_string_storage__to_t_address_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20667:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20679:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20687:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20695:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20703:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20714:4:7",
														"type": ""
													}
												],
												"src": "20520:638:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21318:288:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21328:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21340:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21351:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21336:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21336:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21328:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21408:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21421:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21432:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21417:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21417:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21364:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21364:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21364:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21489:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21502:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21513:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21498:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21498:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21445:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21445:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21445:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21584:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21595:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21580:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21527:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "21527:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21527:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21274:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21286:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21294:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21302:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21313:4:7",
														"type": ""
													}
												],
												"src": "21164:442:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625(memPtr) {\n\n        mstore(add(memPtr, 0), \"Admin's tokens are locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens are locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownership capped at 20% to ensur\")\n\n        mstore(add(memPtr, 32), \"e decentralization\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e(memPtr) {\n\n        mstore(add(memPtr, 0), \"admin's tokens are locked for an\")\n\n        mstore(add(memPtr, 32), \" year\")\n\n    }\n\n    function abi_encode_t_stringliteral_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a(memPtr) {\n\n        mstore(add(memPtr, 0), \"not for sale yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_string_storage__to_t_address_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610114575f3560e01c806395d89b41116100a0578063b93a53961161006f578063b93a5396146102ce578063bd7dac92146102ea578063c0a4d64d14610308578063dd62ed3e14610326578063f2fde38b1461035657610114565b806395d89b41146102465780639f3adb0e14610264578063a9059cbb14610282578063ae84827a146102b257610114565b806323b872dd116100e757806323b872dd146101a0578063313ce567146101d057806370a08231146101ee578063715018a61461021e5780638da5cb5b1461022857610114565b806306fdde0314610118578063095ea7b3146101365780630de65a441461016657806318160ddd14610182575b5f80fd5b610120610372565b60405161012d91906112b9565b60405180910390f35b610150600480360381019061014b9190611377565b610402565b60405161015d91906113cf565b60405180910390f35b610180600480360381019061017b9190611514565b610424565b005b61018a61043f565b604051610197919061156a565b60405180910390f35b6101ba60048036038101906101b59190611583565b610448565b6040516101c791906113cf565b60405180910390f35b6101d86105a0565b6040516101e591906115ee565b60405180910390f35b61020860048036038101906102039190611607565b6105a4565b604051610215919061156a565b60405180910390f35b6102266105e9565b005b6102306105fc565b60405161023d9190611641565b60405180910390f35b61024e610624565b60405161025b91906112b9565b60405180910390f35b61026c6106b4565b604051610279919061156a565b60405180910390f35b61029c60048036038101906102979190611377565b6106ba565b6040516102a991906113cf565b60405180910390f35b6102cc60048036038101906102c79190611377565b610849565b005b6102e860048036038101906102e39190611377565b61085f565b005b6102f2610875565b6040516102ff91906112b9565b60405180910390f35b610310610905565b60405161031d919061156a565b60405180910390f35b610340600480360381019061033b919061165a565b61090e565b60405161034d919061156a565b60405180910390f35b610370600480360381019061036b9190611607565b610990565b005b606060038054610381906116c5565b80601f01602080910402602001604051908101604052809291908181526020018280546103ad906116c5565b80156103f85780601f106103cf576101008083540402835291602001916103f8565b820191905f5260205f20905b8154815290600101906020018083116103db57829003601f168201915b5050505050905090565b5f8061040c610a14565b9050610419818585610a1b565b600191505092915050565b61042c610a2d565b80600a908161043b9190611892565b5050565b5f600254905090565b5f6104516105fc565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036104cd576009544210156104c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bf906119ab565b60405180910390fd5b610513565b600854421015610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990611a13565b60405180910390fd5b5b5f8261051e856105a4565b6105289190611a5e565b9050606461053461043f565b60146105409190611a91565b61054a9190611aff565b811061058b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058290611b9f565b60405180910390fd5b610596858585610ab4565b9150509392505050565b5f90565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6105f1610a2d565b6105fa5f610ae2565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610633906116c5565b80601f016020809104026020016040519081016040528092919081815260200182805461065f906116c5565b80156106aa5780601f10610681576101008083540402835291602001916106aa565b820191905f5260205f20905b81548152906001019060200180831161068d57829003601f168201915b5050505050905090565b60095481565b5f6106c36105fc565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361073b5760095442101561073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073190611c2d565b60405180910390fd5b5b600854421015610780576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077790611c95565b60405180910390fd5b5f8261078b856105a4565b6107959190611a5e565b905060646107a161043f565b60146107ad9190611a91565b6107b79190611aff565b81106107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef90611b9f565b60405180910390fd5b7f8519cdb8ad47f1f5f5bc583d2063d1fc1ffed7dac0cab9e8b1f6492aa60cbd7f338585600b60405161082e9493929190611d34565b60405180910390a16108408484610ba5565b91505092915050565b610851610a2d565b61085b8282610bc7565b5050565b610867610a2d565b6108718282610c46565b5050565b6060600a8054610884906116c5565b80601f01602080910402602001604051908101604052809291908181526020018280546108b0906116c5565b80156108fb5780601f106108d2576101008083540402835291602001916108fb565b820191905f5260205f20905b8154815290600101906020018083116108de57829003601f168201915b5050505050905090565b5f600854905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610998610a2d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a08575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109ff9190611641565b60405180910390fd5b610a1181610ae2565b50565b5f33905090565b610a288383836001610cc5565b505050565b610a35610a14565b73ffffffffffffffffffffffffffffffffffffffff16610a536105fc565b73ffffffffffffffffffffffffffffffffffffffff1614610ab257610a76610a14565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610aa99190611641565b60405180910390fd5b565b5f80610abe610a14565b9050610acb858285610e94565b610ad6858585610f26565b60019150509392505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80610baf610a14565b9050610bbc818585610f26565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c37575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c2e9190611641565b60405180910390fd5b610c42825f83611016565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cb6575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610cad9190611641565b60405180910390fd5b610cc15f8383611016565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d35575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d2c9190611641565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610da5575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d9c9190611641565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e8e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e85919061156a565b60405180910390a35b50505050565b5f610e9f848461090e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f205781811015610f11578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f0893929190611d7e565b60405180910390fd5b610f1f84848484035f610cc5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f96575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f8d9190611641565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611006575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ffd9190611641565b60405180910390fd5b611011838383611016565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611066578060025f82825461105a9190611a5e565b92505081905550611134565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110ef578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110e693929190611d7e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361117b578060025f82825403925050819055506111c5565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611222919061156a565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561126657808201518184015260208101905061124b565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61128b8261122f565b6112958185611239565b93506112a5818560208601611249565b6112ae81611271565b840191505092915050565b5f6020820190508181035f8301526112d18184611281565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611313826112ea565b9050919050565b61132381611309565b811461132d575f80fd5b50565b5f8135905061133e8161131a565b92915050565b5f819050919050565b61135681611344565b8114611360575f80fd5b50565b5f813590506113718161134d565b92915050565b5f806040838503121561138d5761138c6112e2565b5b5f61139a85828601611330565b92505060206113ab85828601611363565b9150509250929050565b5f8115159050919050565b6113c9816113b5565b82525050565b5f6020820190506113e25f8301846113c0565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61142682611271565b810181811067ffffffffffffffff82111715611445576114446113f0565b5b80604052505050565b5f6114576112d9565b9050611463828261141d565b919050565b5f67ffffffffffffffff821115611482576114816113f0565b5b61148b82611271565b9050602081019050919050565b828183375f83830152505050565b5f6114b86114b384611468565b61144e565b9050828152602081018484840111156114d4576114d36113ec565b5b6114df848285611498565b509392505050565b5f82601f8301126114fb576114fa6113e8565b5b813561150b8482602086016114a6565b91505092915050565b5f60208284031215611529576115286112e2565b5b5f82013567ffffffffffffffff811115611546576115456112e6565b5b611552848285016114e7565b91505092915050565b61156481611344565b82525050565b5f60208201905061157d5f83018461155b565b92915050565b5f805f6060848603121561159a576115996112e2565b5b5f6115a786828701611330565b93505060206115b886828701611330565b92505060406115c986828701611363565b9150509250925092565b5f60ff82169050919050565b6115e8816115d3565b82525050565b5f6020820190506116015f8301846115df565b92915050565b5f6020828403121561161c5761161b6112e2565b5b5f61162984828501611330565b91505092915050565b61163b81611309565b82525050565b5f6020820190506116545f830184611632565b92915050565b5f80604083850312156116705761166f6112e2565b5b5f61167d85828601611330565b925050602061168e85828601611330565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806116dc57607f821691505b6020821081036116ef576116ee611698565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026117517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611716565b61175b8683611716565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61179661179161178c84611344565b611773565b611344565b9050919050565b5f819050919050565b6117af8361177c565b6117c36117bb8261179d565b848454611722565b825550505050565b5f90565b6117d76117cb565b6117e28184846117a6565b505050565b5b81811015611805576117fa5f826117cf565b6001810190506117e8565b5050565b601f82111561184a5761181b816116f5565b61182484611707565b81016020851015611833578190505b61184761183f85611707565b8301826117e7565b50505b505050565b5f82821c905092915050565b5f61186a5f198460080261184f565b1980831691505092915050565b5f611882838361185b565b9150826002028217905092915050565b61189b8261122f565b67ffffffffffffffff8111156118b4576118b36113f0565b5b6118be82546116c5565b6118c9828285611809565b5f60209050601f8311600181146118fa575f84156118e8578287015190505b6118f28582611877565b865550611959565b601f198416611908866116f5565b5f5b8281101561192f5784890151825560018201915060208501945060208101905061190a565b8683101561194c5784890151611948601f89168261185b565b8355505b6001600288020188555050505b505050505050565b7f41646d696e277320746f6b656e7320617265206c6f636b6564000000000000005f82015250565b5f611995601983611239565b91506119a082611961565b602082019050919050565b5f6020820190508181035f8301526119c281611989565b9050919050565b7f546f6b656e7320617265206c6f636b65640000000000000000000000000000005f82015250565b5f6119fd601183611239565b9150611a08826119c9565b602082019050919050565b5f6020820190508181035f830152611a2a816119f1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a6882611344565b9150611a7383611344565b9250828201905080821115611a8b57611a8a611a31565b5b92915050565b5f611a9b82611344565b9150611aa683611344565b9250828202611ab481611344565b91508282048414831517611acb57611aca611a31565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611b0982611344565b9150611b1483611344565b925082611b2457611b23611ad2565b5b828204905092915050565b7f4f776e657273686970206361707065642061742032302520746f20656e7375725f8201527f6520646563656e7472616c697a6174696f6e0000000000000000000000000000602082015250565b5f611b89603283611239565b9150611b9482611b2f565b604082019050919050565b5f6020820190508181035f830152611bb681611b7d565b9050919050565b7f61646d696e277320746f6b656e7320617265206c6f636b656420666f7220616e5f8201527f2079656172000000000000000000000000000000000000000000000000000000602082015250565b5f611c17602583611239565b9150611c2282611bbd565b604082019050919050565b5f6020820190508181035f830152611c4481611c0b565b9050919050565b7f6e6f7420666f722073616c6520796574000000000000000000000000000000005f82015250565b5f611c7f601083611239565b9150611c8a82611c4b565b602082019050919050565b5f6020820190508181035f830152611cac81611c73565b9050919050565b5f8154611cbf816116c5565b611cc98186611239565b9450600182165f8114611ce35760018114611cf957611d2b565b60ff198316865281151560200286019350611d2b565b611d02856116f5565b5f5b83811015611d2357815481890152600182019150602081019050611d04565b808801955050505b50505092915050565b5f608082019050611d475f830187611632565b611d546020830186611632565b611d61604083018561155b565b8181036060830152611d738184611cb3565b905095945050505050565b5f606082019050611d915f830186611632565b611d9e602083018561155b565b611dab604083018461155b565b94935050505056fea2646970667358221220e70d2ea1e649f2e52c7cec53763fe632648c82d5adf0023b379ffbcdd6f752ca64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB93A5396 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB93A5396 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xBD7DAC92 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xC0A4D64D EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x356 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x9F3ADB0E EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xAE84827A EQ PUSH2 0x2B2 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x228 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xDE65A44 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1583 JUMP JUMPDEST PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x15EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x5E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1377 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F2 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x381 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x16C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x40C PUSH2 0xA14 JUMP JUMPDEST SWAP1 POP PUSH2 0x419 DUP2 DUP6 DUP6 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42C PUSH2 0xA2D JUMP JUMPDEST DUP1 PUSH1 0xA SWAP1 DUP2 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1892 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x451 PUSH2 0x5FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4CD JUMPI PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BF SWAP1 PUSH2 0x19AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 DUP3 PUSH2 0x51E DUP6 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0x534 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x14 PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST DUP2 LT PUSH2 0x58B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x582 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x596 DUP6 DUP6 DUP6 PUSH2 0xAB4 JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F1 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x5FA PUSH0 PUSH2 0xAE2 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x633 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x65F SWAP1 PUSH2 0x16C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x681 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x68D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x6C3 PUSH2 0x5FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x73B JUMPI PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x731 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x8 SLOAD TIMESTAMP LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x78B DUP6 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x795 SWAP2 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0x7A1 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x14 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST DUP2 LT PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EF SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x8519CDB8AD47F1F5F5BC583D2063D1FC1FFED7DAC0CAB9E8B1F6492AA60CBD7F CALLER DUP6 DUP6 PUSH1 0xB PUSH1 0x40 MLOAD PUSH2 0x82E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x840 DUP5 DUP5 PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x851 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x85B DUP3 DUP3 PUSH2 0xBC7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x867 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x871 DUP3 DUP3 PUSH2 0xC46 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0x884 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x998 PUSH2 0xA2D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA08 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FF SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA11 DUP2 PUSH2 0xAE2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA28 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA35 PUSH2 0xA14 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA53 PUSH2 0x5FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB2 JUMPI PUSH2 0xA76 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA9 SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xABE PUSH2 0xA14 JUMP JUMPDEST SWAP1 POP PUSH2 0xACB DUP6 DUP3 DUP6 PUSH2 0xE94 JUMP JUMPDEST PUSH2 0xAD6 DUP6 DUP6 DUP6 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBAF PUSH2 0xA14 JUMP JUMPDEST SWAP1 POP PUSH2 0xBBC DUP2 DUP6 DUP6 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC37 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2E SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC42 DUP3 PUSH0 DUP4 PUSH2 0x1016 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAD SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC1 PUSH0 DUP4 DUP4 PUSH2 0x1016 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD35 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9C SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE8E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE85 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE9F DUP5 DUP5 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xF20 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF11 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF08 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF1F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCC5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF96 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8D SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1006 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFD SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1011 DUP4 DUP4 DUP4 PUSH2 0x1016 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1066 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1134 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10EF JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11C5 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1222 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1266 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x124B JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x128B DUP3 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x1295 DUP2 DUP6 PUSH2 0x1239 JUMP JUMPDEST SWAP4 POP PUSH2 0x12A5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x12AE DUP2 PUSH2 0x1271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12D1 DUP2 DUP5 PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1313 DUP3 PUSH2 0x12EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1323 DUP2 PUSH2 0x1309 JUMP JUMPDEST DUP2 EQ PUSH2 0x132D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x133E DUP2 PUSH2 0x131A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1356 DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP2 EQ PUSH2 0x1360 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1371 DUP2 PUSH2 0x134D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138D JUMPI PUSH2 0x138C PUSH2 0x12E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x139A DUP6 DUP3 DUP7 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13AB DUP6 DUP3 DUP7 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C9 DUP2 PUSH2 0x13B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x13C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1426 DUP3 PUSH2 0x1271 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1445 JUMPI PUSH2 0x1444 PUSH2 0x13F0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1457 PUSH2 0x12D9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1463 DUP3 DUP3 PUSH2 0x141D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1481 PUSH2 0x13F0 JUMP JUMPDEST JUMPDEST PUSH2 0x148B DUP3 PUSH2 0x1271 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14B8 PUSH2 0x14B3 DUP5 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x144E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14D4 JUMPI PUSH2 0x14D3 PUSH2 0x13EC JUMP JUMPDEST JUMPDEST PUSH2 0x14DF DUP5 DUP3 DUP6 PUSH2 0x1498 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14FB JUMPI PUSH2 0x14FA PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x150B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x12E2 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1546 JUMPI PUSH2 0x1545 PUSH2 0x12E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1552 DUP5 DUP3 DUP6 ADD PUSH2 0x14E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1564 DUP2 PUSH2 0x1344 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x157D PUSH0 DUP4 ADD DUP5 PUSH2 0x155B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x159A JUMPI PUSH2 0x1599 PUSH2 0x12E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15A7 DUP7 DUP3 DUP8 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15B8 DUP7 DUP3 DUP8 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15C9 DUP7 DUP3 DUP8 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E8 DUP2 PUSH2 0x15D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1601 PUSH0 DUP4 ADD DUP5 PUSH2 0x15DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161C JUMPI PUSH2 0x161B PUSH2 0x12E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1629 DUP5 DUP3 DUP6 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x163B DUP2 PUSH2 0x1309 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1654 PUSH0 DUP4 ADD DUP5 PUSH2 0x1632 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1670 JUMPI PUSH2 0x166F PUSH2 0x12E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x167D DUP6 DUP3 DUP7 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x168E DUP6 DUP3 DUP7 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16DC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16EF JUMPI PUSH2 0x16EE PUSH2 0x1698 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1751 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x175B DUP7 DUP4 PUSH2 0x1716 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1796 PUSH2 0x1791 PUSH2 0x178C DUP5 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x1344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AF DUP4 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x17C3 PUSH2 0x17BB DUP3 PUSH2 0x179D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1722 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x17D7 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0x17E2 DUP2 DUP5 DUP5 PUSH2 0x17A6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1805 JUMPI PUSH2 0x17FA PUSH0 DUP3 PUSH2 0x17CF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x17E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x184A JUMPI PUSH2 0x181B DUP2 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0x1824 DUP5 PUSH2 0x1707 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1833 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1847 PUSH2 0x183F DUP6 PUSH2 0x1707 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x17E7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x186A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x184F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1882 DUP4 DUP4 PUSH2 0x185B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x189B DUP3 PUSH2 0x122F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B4 JUMPI PUSH2 0x18B3 PUSH2 0x13F0 JUMP JUMPDEST JUMPDEST PUSH2 0x18BE DUP3 SLOAD PUSH2 0x16C5 JUMP JUMPDEST PUSH2 0x18C9 DUP3 DUP3 DUP6 PUSH2 0x1809 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x18FA JUMPI PUSH0 DUP5 ISZERO PUSH2 0x18E8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x18F2 DUP6 DUP3 PUSH2 0x1877 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1908 DUP7 PUSH2 0x16F5 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x192F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x190A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x194C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1948 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x185B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x41646D696E277320746F6B656E7320617265206C6F636B656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1995 PUSH1 0x19 DUP4 PUSH2 0x1239 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A0 DUP3 PUSH2 0x1961 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19C2 DUP2 PUSH2 0x1989 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E7320617265206C6F636B6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19FD PUSH1 0x11 DUP4 PUSH2 0x1239 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A08 DUP3 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A2A DUP2 PUSH2 0x19F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A68 DUP3 PUSH2 0x1344 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A73 DUP4 PUSH2 0x1344 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A8B JUMPI PUSH2 0x1A8A PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A9B DUP3 PUSH2 0x1344 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA6 DUP4 PUSH2 0x1344 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1AB4 DUP2 PUSH2 0x1344 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1ACB JUMPI PUSH2 0x1ACA PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B09 DUP3 PUSH2 0x1344 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B14 DUP4 PUSH2 0x1344 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B24 JUMPI PUSH2 0x1B23 PUSH2 0x1AD2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E657273686970206361707065642061742032302520746F20656E737572 PUSH0 DUP3 ADD MSTORE PUSH32 0x6520646563656E7472616C697A6174696F6E0000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B89 PUSH1 0x32 DUP4 PUSH2 0x1239 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B94 DUP3 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BB6 DUP2 PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x61646D696E277320746F6B656E7320617265206C6F636B656420666F7220616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2079656172000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C17 PUSH1 0x25 DUP4 PUSH2 0x1239 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C22 DUP3 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C44 DUP2 PUSH2 0x1C0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F7420666F722073616C652079657400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C7F PUSH1 0x10 DUP4 PUSH2 0x1239 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8A DUP3 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CAC DUP2 PUSH2 0x1C73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x1CBF DUP2 PUSH2 0x16C5 JUMP JUMPDEST PUSH2 0x1CC9 DUP2 DUP7 PUSH2 0x1239 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x1CE3 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1CF9 JUMPI PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x1D02 DUP6 PUSH2 0x16F5 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D23 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D04 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D47 PUSH0 DUP4 ADD DUP8 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x1D54 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x1D61 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x155B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D73 DUP2 DUP5 PUSH2 0x1CB3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D91 PUSH0 DUP4 ADD DUP7 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x1D9E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x1DAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x155B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xD 0x2E LOG1 0xE6 0x49 CALLCODE 0xE5 0x2C PUSH29 0xEC53763FE632648C82D5ADF0023B379FFBCDD6F752CA64736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "206:3569:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3399:117:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3144:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2610:673:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1956:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;360:29:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2048:458;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3652:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3524;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3291:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2514:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:3;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3399:117:0:-;1531:13:1;:11;:13::i;:::-;3495::0::1;3480:12;:28;;;;;;:::i;:::-;;3399:117:::0;:::o;3144:97:3:-;3196:7;3222:12;;3215:19;;3144:97;:::o;2610:673:0:-;2730:4;2759:7;:5;:7::i;:::-;2751:15;;:4;:15;;;2747:259;;2828:14;;2809:15;:33;;2783:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;2747:259;;;2963:9;;2944:15;:28;;2936:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2747:259;3016:23;3058:6;3042:13;3052:2;3042:9;:13::i;:::-;:22;;;;:::i;:::-;3016:48;;3138:3;3121:13;:11;:13::i;:::-;3116:2;:18;;;;:::i;:::-;3115:26;;;;:::i;:::-;3097:15;:44;3075:144;;;;;;;;;;;;:::i;:::-;;;;;;;;;3239:36;3258:4;3264:2;3268:6;3239:18;:36::i;:::-;3232:43;;;2610:673;;;;;:::o;1956:84::-;2006:5;1956:84;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;360:29:0:-;;;;:::o;2048:458::-;2158:4;520:7;:5;:7::i;:::-;506:21;;:10;:21;;;502:186;;589:14;;570:15;:33;;544:132;;;;;;;;;;;;:::i;:::-;;;;;;;;;502:186;725:9;;706:15;:28;;698:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2175:23:::1;2217:6;2201:13;2211:2;2201:9;:13::i;:::-;:22;;;;:::i;:::-;2175:48;;2297:3;2280:13;:11;:13::i;:::-;2275:2;:18;;;;:::i;:::-;2274:26;;;;:::i;:::-;2256:15;:44;2234:144;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:56;2415:10;2427:2;2431:6;2439:12;2396:56;;;;;;;;;:::i;:::-;;;;;;;;2472:26;2487:2;2491:6;2472:14;:26::i;:::-;2465:33;;;2048:458:::0;;;;:::o;3652:120::-;1531:13:1;:11;:13::i;:::-;3737:27:0::1;3743:12;3757:6;3737:5;:27::i;:::-;3652:120:::0;;:::o;3524:::-;1531:13:1;:11;:13::i;:::-;3609:27:0::1;3615:12;3629:6;3609:5;:27::i;:::-;3524:120:::0;;:::o;3291:100::-;3338:13;3371:12;3364:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3291:100;:::o;2514:88::-;2558:7;2585:9;;2578:16;;2514:88;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;5039:244:3:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;2912:187:1:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3610:178:3:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:117::-;3555:1;3552;3545:12;3569:117;3678:1;3675;3668:12;3692:180;3740:77;3737:1;3730:88;3837:4;3834:1;3827:15;3861:4;3858:1;3851:15;3878:281;3961:27;3983:4;3961:27;:::i;:::-;3953:6;3949:40;4091:6;4079:10;4076:22;4055:18;4043:10;4040:34;4037:62;4034:88;;;4102:18;;:::i;:::-;4034:88;4142:10;4138:2;4131:22;3921:238;3878:281;;:::o;4165:129::-;4199:6;4226:20;;:::i;:::-;4216:30;;4255:33;4283:4;4275:6;4255:33;:::i;:::-;4165:129;;;:::o;4300:308::-;4362:4;4452:18;4444:6;4441:30;4438:56;;;4474:18;;:::i;:::-;4438:56;4512:29;4534:6;4512:29;:::i;:::-;4504:37;;4596:4;4590;4586:15;4578:23;;4300:308;;;:::o;4614:146::-;4711:6;4706:3;4701;4688:30;4752:1;4743:6;4738:3;4734:16;4727:27;4614:146;;;:::o;4766:425::-;4844:5;4869:66;4885:49;4927:6;4885:49;:::i;:::-;4869:66;:::i;:::-;4860:75;;4958:6;4951:5;4944:21;4996:4;4989:5;4985:16;5034:3;5025:6;5020:3;5016:16;5013:25;5010:112;;;5041:79;;:::i;:::-;5010:112;5131:54;5178:6;5173:3;5168;5131:54;:::i;:::-;4850:341;4766:425;;;;;:::o;5211:340::-;5267:5;5316:3;5309:4;5301:6;5297:17;5293:27;5283:122;;5324:79;;:::i;:::-;5283:122;5441:6;5428:20;5466:79;5541:3;5533:6;5526:4;5518:6;5514:17;5466:79;:::i;:::-;5457:88;;5273:278;5211:340;;;;:::o;5557:509::-;5626:6;5675:2;5663:9;5654:7;5650:23;5646:32;5643:119;;;5681:79;;:::i;:::-;5643:119;5829:1;5818:9;5814:17;5801:31;5859:18;5851:6;5848:30;5845:117;;;5881:79;;:::i;:::-;5845:117;5986:63;6041:7;6032:6;6021:9;6017:22;5986:63;:::i;:::-;5976:73;;5772:287;5557:509;;;;:::o;6072:118::-;6159:24;6177:5;6159:24;:::i;:::-;6154:3;6147:37;6072:118;;:::o;6196:222::-;6289:4;6327:2;6316:9;6312:18;6304:26;;6340:71;6408:1;6397:9;6393:17;6384:6;6340:71;:::i;:::-;6196:222;;;;:::o;6424:619::-;6501:6;6509;6517;6566:2;6554:9;6545:7;6541:23;6537:32;6534:119;;;6572:79;;:::i;:::-;6534:119;6692:1;6717:53;6762:7;6753:6;6742:9;6738:22;6717:53;:::i;:::-;6707:63;;6663:117;6819:2;6845:53;6890:7;6881:6;6870:9;6866:22;6845:53;:::i;:::-;6835:63;;6790:118;6947:2;6973:53;7018:7;7009:6;6998:9;6994:22;6973:53;:::i;:::-;6963:63;;6918:118;6424:619;;;;;:::o;7049:86::-;7084:7;7124:4;7117:5;7113:16;7102:27;;7049:86;;;:::o;7141:112::-;7224:22;7240:5;7224:22;:::i;:::-;7219:3;7212:35;7141:112;;:::o;7259:214::-;7348:4;7386:2;7375:9;7371:18;7363:26;;7399:67;7463:1;7452:9;7448:17;7439:6;7399:67;:::i;:::-;7259:214;;;;:::o;7479:329::-;7538:6;7587:2;7575:9;7566:7;7562:23;7558:32;7555:119;;;7593:79;;:::i;:::-;7555:119;7713:1;7738:53;7783:7;7774:6;7763:9;7759:22;7738:53;:::i;:::-;7728:63;;7684:117;7479:329;;;;:::o;7814:118::-;7901:24;7919:5;7901:24;:::i;:::-;7896:3;7889:37;7814:118;;:::o;7938:222::-;8031:4;8069:2;8058:9;8054:18;8046:26;;8082:71;8150:1;8139:9;8135:17;8126:6;8082:71;:::i;:::-;7938:222;;;;:::o;8166:474::-;8234:6;8242;8291:2;8279:9;8270:7;8266:23;8262:32;8259:119;;;8297:79;;:::i;:::-;8259:119;8417:1;8442:53;8487:7;8478:6;8467:9;8463:22;8442:53;:::i;:::-;8432:63;;8388:117;8544:2;8570:53;8615:7;8606:6;8595:9;8591:22;8570:53;:::i;:::-;8560:63;;8515:118;8166:474;;;;;:::o;8646:180::-;8694:77;8691:1;8684:88;8791:4;8788:1;8781:15;8815:4;8812:1;8805:15;8832:320;8876:6;8913:1;8907:4;8903:12;8893:22;;8960:1;8954:4;8950:12;8981:18;8971:81;;9037:4;9029:6;9025:17;9015:27;;8971:81;9099:2;9091:6;9088:14;9068:18;9065:38;9062:84;;9118:18;;:::i;:::-;9062:84;8883:269;8832:320;;;:::o;9158:141::-;9207:4;9230:3;9222:11;;9253:3;9250:1;9243:14;9287:4;9284:1;9274:18;9266:26;;9158:141;;;:::o;9305:93::-;9342:6;9389:2;9384;9377:5;9373:14;9369:23;9359:33;;9305:93;;;:::o;9404:107::-;9448:8;9498:5;9492:4;9488:16;9467:37;;9404:107;;;;:::o;9517:393::-;9586:6;9636:1;9624:10;9620:18;9659:97;9689:66;9678:9;9659:97;:::i;:::-;9777:39;9807:8;9796:9;9777:39;:::i;:::-;9765:51;;9849:4;9845:9;9838:5;9834:21;9825:30;;9898:4;9888:8;9884:19;9877:5;9874:30;9864:40;;9593:317;;9517:393;;;;;:::o;9916:60::-;9944:3;9965:5;9958:12;;9916:60;;;:::o;9982:142::-;10032:9;10065:53;10083:34;10092:24;10110:5;10092:24;:::i;:::-;10083:34;:::i;:::-;10065:53;:::i;:::-;10052:66;;9982:142;;;:::o;10130:75::-;10173:3;10194:5;10187:12;;10130:75;;;:::o;10211:269::-;10321:39;10352:7;10321:39;:::i;:::-;10382:91;10431:41;10455:16;10431:41;:::i;:::-;10423:6;10416:4;10410:11;10382:91;:::i;:::-;10376:4;10369:105;10287:193;10211:269;;;:::o;10486:73::-;10531:3;10486:73;:::o;10565:189::-;10642:32;;:::i;:::-;10683:65;10741:6;10733;10727:4;10683:65;:::i;:::-;10618:136;10565:189;;:::o;10760:186::-;10820:120;10837:3;10830:5;10827:14;10820:120;;;10891:39;10928:1;10921:5;10891:39;:::i;:::-;10864:1;10857:5;10853:13;10844:22;;10820:120;;;10760:186;;:::o;10952:543::-;11053:2;11048:3;11045:11;11042:446;;;11087:38;11119:5;11087:38;:::i;:::-;11171:29;11189:10;11171:29;:::i;:::-;11161:8;11157:44;11354:2;11342:10;11339:18;11336:49;;;11375:8;11360:23;;11336:49;11398:80;11454:22;11472:3;11454:22;:::i;:::-;11444:8;11440:37;11427:11;11398:80;:::i;:::-;11057:431;;11042:446;10952:543;;;:::o;11501:117::-;11555:8;11605:5;11599:4;11595:16;11574:37;;11501:117;;;;:::o;11624:169::-;11668:6;11701:51;11749:1;11745:6;11737:5;11734:1;11730:13;11701:51;:::i;:::-;11697:56;11782:4;11776;11772:15;11762:25;;11675:118;11624:169;;;;:::o;11798:295::-;11874:4;12020:29;12045:3;12039:4;12020:29;:::i;:::-;12012:37;;12082:3;12079:1;12075:11;12069:4;12066:21;12058:29;;11798:295;;;;:::o;12098:1395::-;12215:37;12248:3;12215:37;:::i;:::-;12317:18;12309:6;12306:30;12303:56;;;12339:18;;:::i;:::-;12303:56;12383:38;12415:4;12409:11;12383:38;:::i;:::-;12468:67;12528:6;12520;12514:4;12468:67;:::i;:::-;12562:1;12586:4;12573:17;;12618:2;12610:6;12607:14;12635:1;12630:618;;;;13292:1;13309:6;13306:77;;;13358:9;13353:3;13349:19;13343:26;13334:35;;13306:77;13409:67;13469:6;13462:5;13409:67;:::i;:::-;13403:4;13396:81;13265:222;12600:887;;12630:618;12682:4;12678:9;12670:6;12666:22;12716:37;12748:4;12716:37;:::i;:::-;12775:1;12789:208;12803:7;12800:1;12797:14;12789:208;;;12882:9;12877:3;12873:19;12867:26;12859:6;12852:42;12933:1;12925:6;12921:14;12911:24;;12980:2;12969:9;12965:18;12952:31;;12826:4;12823:1;12819:12;12814:17;;12789:208;;;13025:6;13016:7;13013:19;13010:179;;;13083:9;13078:3;13074:19;13068:26;13126:48;13168:4;13160:6;13156:17;13145:9;13126:48;:::i;:::-;13118:6;13111:64;13033:156;13010:179;13235:1;13231;13223:6;13219:14;13215:22;13209:4;13202:36;12637:611;;;12600:887;;12190:1303;;;12098:1395;;:::o;13499:175::-;13639:27;13635:1;13627:6;13623:14;13616:51;13499:175;:::o;13680:366::-;13822:3;13843:67;13907:2;13902:3;13843:67;:::i;:::-;13836:74;;13919:93;14008:3;13919:93;:::i;:::-;14037:2;14032:3;14028:12;14021:19;;13680:366;;;:::o;14052:419::-;14218:4;14256:2;14245:9;14241:18;14233:26;;14305:9;14299:4;14295:20;14291:1;14280:9;14276:17;14269:47;14333:131;14459:4;14333:131;:::i;:::-;14325:139;;14052:419;;;:::o;14477:167::-;14617:19;14613:1;14605:6;14601:14;14594:43;14477:167;:::o;14650:366::-;14792:3;14813:67;14877:2;14872:3;14813:67;:::i;:::-;14806:74;;14889:93;14978:3;14889:93;:::i;:::-;15007:2;15002:3;14998:12;14991:19;;14650:366;;;:::o;15022:419::-;15188:4;15226:2;15215:9;15211:18;15203:26;;15275:9;15269:4;15265:20;15261:1;15250:9;15246:17;15239:47;15303:131;15429:4;15303:131;:::i;:::-;15295:139;;15022:419;;;:::o;15447:180::-;15495:77;15492:1;15485:88;15592:4;15589:1;15582:15;15616:4;15613:1;15606:15;15633:191;15673:3;15692:20;15710:1;15692:20;:::i;:::-;15687:25;;15726:20;15744:1;15726:20;:::i;:::-;15721:25;;15769:1;15766;15762:9;15755:16;;15790:3;15787:1;15784:10;15781:36;;;15797:18;;:::i;:::-;15781:36;15633:191;;;;:::o;15830:410::-;15870:7;15893:20;15911:1;15893:20;:::i;:::-;15888:25;;15927:20;15945:1;15927:20;:::i;:::-;15922:25;;15982:1;15979;15975:9;16004:30;16022:11;16004:30;:::i;:::-;15993:41;;16183:1;16174:7;16170:15;16167:1;16164:22;16144:1;16137:9;16117:83;16094:139;;16213:18;;:::i;:::-;16094:139;15878:362;15830:410;;;;:::o;16246:180::-;16294:77;16291:1;16284:88;16391:4;16388:1;16381:15;16415:4;16412:1;16405:15;16432:185;16472:1;16489:20;16507:1;16489:20;:::i;:::-;16484:25;;16523:20;16541:1;16523:20;:::i;:::-;16518:25;;16562:1;16552:35;;16567:18;;:::i;:::-;16552:35;16609:1;16606;16602:9;16597:14;;16432:185;;;;:::o;16623:237::-;16763:34;16759:1;16751:6;16747:14;16740:58;16832:20;16827:2;16819:6;16815:15;16808:45;16623:237;:::o;16866:366::-;17008:3;17029:67;17093:2;17088:3;17029:67;:::i;:::-;17022:74;;17105:93;17194:3;17105:93;:::i;:::-;17223:2;17218:3;17214:12;17207:19;;16866:366;;;:::o;17238:419::-;17404:4;17442:2;17431:9;17427:18;17419:26;;17491:9;17485:4;17481:20;17477:1;17466:9;17462:17;17455:47;17519:131;17645:4;17519:131;:::i;:::-;17511:139;;17238:419;;;:::o;17663:224::-;17803:34;17799:1;17791:6;17787:14;17780:58;17872:7;17867:2;17859:6;17855:15;17848:32;17663:224;:::o;17893:366::-;18035:3;18056:67;18120:2;18115:3;18056:67;:::i;:::-;18049:74;;18132:93;18221:3;18132:93;:::i;:::-;18250:2;18245:3;18241:12;18234:19;;17893:366;;;:::o;18265:419::-;18431:4;18469:2;18458:9;18454:18;18446:26;;18518:9;18512:4;18508:20;18504:1;18493:9;18489:17;18482:47;18546:131;18672:4;18546:131;:::i;:::-;18538:139;;18265:419;;;:::o;18690:166::-;18830:18;18826:1;18818:6;18814:14;18807:42;18690:166;:::o;18862:366::-;19004:3;19025:67;19089:2;19084:3;19025:67;:::i;:::-;19018:74;;19101:93;19190:3;19101:93;:::i;:::-;19219:2;19214:3;19210:12;19203:19;;18862:366;;;:::o;19234:419::-;19400:4;19438:2;19427:9;19423:18;19415:26;;19487:9;19481:4;19477:20;19473:1;19462:9;19458:17;19451:47;19515:131;19641:4;19515:131;:::i;:::-;19507:139;;19234:419;;;:::o;19683:831::-;19768:3;19805:5;19799:12;19834:36;19860:9;19834:36;:::i;:::-;19886:71;19950:6;19945:3;19886:71;:::i;:::-;19879:78;;19988:1;19977:9;19973:17;20004:1;19999:164;;;;20177:1;20172:336;;;;19966:542;;19999:164;20083:4;20079:9;20068;20064:25;20059:3;20052:38;20143:6;20136:14;20129:22;20123:4;20119:33;20114:3;20110:43;20103:50;;19999:164;;20172:336;20239:38;20271:5;20239:38;:::i;:::-;20299:1;20313:154;20327:6;20324:1;20321:13;20313:154;;;20401:7;20395:14;20391:1;20386:3;20382:11;20375:35;20451:1;20442:7;20438:15;20427:26;;20349:4;20346:1;20342:12;20337:17;;20313:154;;;20496:1;20491:3;20487:11;20480:18;;20179:329;;19966:542;;19772:742;;19683:831;;;;:::o;20520:638::-;20714:4;20752:3;20741:9;20737:19;20729:27;;20766:71;20834:1;20823:9;20819:17;20810:6;20766:71;:::i;:::-;20847:72;20915:2;20904:9;20900:18;20891:6;20847:72;:::i;:::-;20929;20997:2;20986:9;20982:18;20973:6;20929:72;:::i;:::-;21048:9;21042:4;21038:20;21033:2;21022:9;21018:18;21011:48;21076:75;21146:4;21137:6;21076:75;:::i;:::-;21068:83;;20520:638;;;;;;;:::o;21164:442::-;21313:4;21351:2;21340:9;21336:18;21328:26;;21364:71;21432:1;21421:9;21417:17;21408:6;21364:71;:::i;:::-;21445:72;21513:2;21502:9;21498:18;21489:6;21445:72;:::i;:::-;21527;21595:2;21584:9;21580:18;21571:6;21527:72;:::i;:::-;21164:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1531400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ForceBurn(address,uint256)": "infinite",
								"ForceMint(address,uint256)": "infinite",
								"_adminLockTime()": "2470",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"decimals()": "375",
								"getDocumentURI()": "infinite",
								"getLockTime()": "2498",
								"name()": "infinite",
								"owner()": "2626",
								"renounceOwnership()": "infinite",
								"setDocumentURI(string)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 206,
									"end": 3775,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 890,
									"end": 1816,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1161,
									"end": 1167,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1143,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1144,
									"end": 1151,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1209,
									"end": 1216,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1209,
									"end": 1223,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1187,
									"end": 1198,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1187,
									"end": 1205,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1187,
									"end": 1223,
									"modifierDepth": 2,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1179,
									"end": 1270,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1179,
									"end": 1270,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 1309,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1281,
									"end": 1293,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1281,
									"end": 1309,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1281,
									"end": 1309,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1281,
									"end": 1309,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1281,
									"end": 1309,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1360,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1332,
									"end": 1347,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 1332,
									"end": 1360,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1332,
									"end": 1360,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1332,
									"end": 1360,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1332,
									"end": 1360,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1332,
									"end": 1360,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1332,
									"end": 1360,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1332,
									"end": 1360,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1320,
									"end": 1329,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1320,
									"end": 1360,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1320,
									"end": 1360,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1320,
									"end": 1360,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1320,
									"end": 1360,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1378,
									"end": 1387,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1373,
									"end": 1588,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1373,
									"end": 1588,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1397,
									"end": 1408,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1397,
									"end": 1415,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1393,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1393,
									"end": 1415,
									"modifierDepth": 2,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1588,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1588,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1373,
									"end": 1588,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1474,
									"end": 1486,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1474,
									"end": 1486,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1458,
									"end": 1470,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1458,
									"end": 1470,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1452,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1453,
									"end": 1454,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1445,
									"end": 1455,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1455,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1470,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1445,
									"end": 1470,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1470,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1470,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1445,
									"end": 1470,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1470,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1445,
									"end": 1470,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1486,
									"modifierDepth": 2,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1445,
									"end": 1486,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1437,
									"end": 1487,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 1437,
									"end": 1487,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1437,
									"end": 1487,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1437,
									"end": 1487,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1437,
									"end": 1487,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1437,
									"end": 1487,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 1437,
									"end": 1487,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1502,
									"end": 1535,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1508,
									"end": 1519,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1520,
									"end": 1521,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1508,
									"end": 1522,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1522,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1531,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1532,
									"end": 1533,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1524,
									"end": 1534,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1524,
									"end": 1534,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1502,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1502,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1502,
									"end": 1507,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1502,
									"end": 1535,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1502,
									"end": 1535,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1502,
									"end": 1535,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1502,
									"end": 1535,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1502,
									"end": 1535,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1573,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1574,
									"end": 1575,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1566,
									"end": 1576,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1576,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1562,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1550,
									"end": 1562,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1550,
									"end": 1576,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1550,
									"end": 1576,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1420,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1420,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1420,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1417,
									"end": 1420,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1420,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 1417,
									"end": 1420,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1420,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1417,
									"end": 1420,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1420,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1420,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1420,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1588,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1373,
									"end": 1588,
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1588,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1373,
									"end": 1588,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1588,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1600,
									"end": 1622,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1640,
									"end": 1652,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1640,
									"end": 1652,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1625,
									"end": 1637,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1625,
									"end": 1637,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1625,
									"end": 1652,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 1625,
									"end": 1652,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1625,
									"end": 1652,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1625,
									"end": 1652,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 1625,
									"end": 1652,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1625,
									"end": 1652,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 1625,
									"end": 1652,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1600,
									"end": 1652,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1600,
									"end": 1652,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1685,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1667,
									"end": 1681,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1667,
									"end": 1685,
									"modifierDepth": 2,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1663,
									"end": 1809,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1663,
									"end": 1809,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 1663,
									"end": 1809,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1702,
									"end": 1731,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 1708,
									"end": 1714,
									"modifierDepth": 2,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1730,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1702,
									"end": 1707,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1702,
									"end": 1707,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1702,
									"end": 1707,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1702,
									"end": 1731,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1702,
									"end": 1731,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1702,
									"end": 1731,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1702,
									"end": 1731,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 1702,
									"end": 1731,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1781,
									"end": 1789,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1E13380"
								},
								{
									"begin": 1763,
									"end": 1778,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 1763,
									"end": 1789,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 1763,
									"end": 1789,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1763,
									"end": 1789,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1763,
									"end": 1789,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1763,
									"end": 1789,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1763,
									"end": 1789,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 1763,
									"end": 1789,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1746,
									"end": 1760,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1746,
									"end": 1789,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1746,
									"end": 1789,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1746,
									"end": 1789,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1746,
									"end": 1789,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1663,
									"end": 1809,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 1663,
									"end": 1809,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1168,
									"end": 1816,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 890,
									"end": 1816,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1959,
									"end": 1977,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1948,
									"end": 1978,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1981,
									"end": 1999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2019,
									"end": 2048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2101,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2093,
									"end": 2108,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2202,
									"end": 2203,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2226,
									"end": 2232,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2223,
									"end": 2224,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2220,
									"end": 2233,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2311,
									"end": 2312,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2306,
									"end": 2309,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2302,
									"end": 2313,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2296,
									"end": 2314,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 2290,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2283,
									"end": 2294,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2315,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2248,
									"end": 2250,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2245,
									"end": 2246,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2236,
									"end": 2251,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2236,
									"end": 2251,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 2212,
									"end": 2325,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2360,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2350,
									"end": 2356,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2345,
									"end": 2348,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2341,
									"end": 2357,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2334,
									"end": 2361,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2183,
									"end": 2367,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2367,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2467,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2487,
									"end": 2553,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 2503,
									"end": 2552,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 2545,
									"end": 2551,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2503,
									"end": 2552,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2503,
									"end": 2552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2503,
									"end": 2552,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 2503,
									"end": 2552,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2487,
									"end": 2553,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2487,
									"end": 2553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2487,
									"end": 2553,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 2487,
									"end": 2553,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2478,
									"end": 2553,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2478,
									"end": 2553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2576,
									"end": 2582,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2569,
									"end": 2574,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2583,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2614,
									"end": 2618,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2607,
									"end": 2612,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2603,
									"end": 2619,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2652,
									"end": 2655,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2643,
									"end": 2649,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2638,
									"end": 2641,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2634,
									"end": 2650,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2631,
									"end": 2656,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2659,
									"end": 2738,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 2659,
									"end": 2738,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2659,
									"end": 2738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2659,
									"end": 2738,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 2659,
									"end": 2738,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 2628,
									"end": 2740,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2749,
									"end": 2801,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 2794,
									"end": 2800,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2789,
									"end": 2792,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2784,
									"end": 2787,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2749,
									"end": 2801,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2749,
									"end": 2801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2749,
									"end": 2801,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 2749,
									"end": 2801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2807,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2373,
									"end": 2807,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2373,
									"end": 2807,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2894,
									"end": 2899,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2943,
									"end": 2946,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2936,
									"end": 2940,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2928,
									"end": 2934,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2924,
									"end": 2941,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 3032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 2910,
									"end": 3032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2951,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 2951,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2951,
									"end": 3030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2951,
									"end": 3030,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 2951,
									"end": 3030,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 3032,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 2910,
									"end": 3032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3061,
									"end": 3067,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3055,
									"end": 3068,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3086,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 3172,
									"end": 3175,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3164,
									"end": 3170,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3157,
									"end": 3161,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3149,
									"end": 3155,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3145,
									"end": 3162,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3086,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3086,
									"end": 3176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3086,
									"end": 3176,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 3086,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3077,
									"end": 3176,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3077,
									"end": 3176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2900,
									"end": 3182,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2827,
									"end": 3182,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2827,
									"end": 3182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3265,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3188,
									"end": 3265,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3225,
									"end": 3232,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3254,
									"end": 3259,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3243,
									"end": 3259,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3243,
									"end": 3259,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3265,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3265,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3265,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3344,
									"end": 3368,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 3362,
									"end": 3367,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3344,
									"end": 3368,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3344,
									"end": 3368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3344,
									"end": 3368,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 3344,
									"end": 3368,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3337,
									"end": 3342,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3369,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3324,
									"end": 3387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 3324,
									"end": 3387,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3383,
									"end": 3384,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3381,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3373,
									"end": 3385,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3324,
									"end": 3387,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 3324,
									"end": 3387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3271,
									"end": 3393,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3271,
									"end": 3393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3456,
									"end": 3461,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3487,
									"end": 3493,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3481,
									"end": 3494,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3494,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3494,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3503,
									"end": 3536,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 3530,
									"end": 3535,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3503,
									"end": 3536,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3503,
									"end": 3536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3503,
									"end": 3536,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 3503,
									"end": 3536,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3399,
									"end": 3542,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3399,
									"end": 3542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3859,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3548,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3629,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3715,
									"end": 3733,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3707,
									"end": 3713,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3704,
									"end": 3734,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3757,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3757,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 3701,
									"end": 3757,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3737,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 3737,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3737,
									"end": 3755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3737,
									"end": 3755,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 3737,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3757,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 3701,
									"end": 3757,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3787,
									"end": 3791,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3779,
									"end": 3785,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3775,
									"end": 3792,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3767,
									"end": 3792,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3767,
									"end": 3792,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3847,
									"end": 3851,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3841,
									"end": 3845,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3837,
									"end": 3852,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3829,
									"end": 3852,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3829,
									"end": 3852,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3971,
									"end": 3972,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3964,
									"end": 3976,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4737,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 4005,
									"end": 4737,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4112,
									"end": 4117,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4137,
									"end": 4218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 4153,
									"end": 4217,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 4210,
									"end": 4216,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4153,
									"end": 4217,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4153,
									"end": 4217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4153,
									"end": 4217,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 4153,
									"end": 4217,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4137,
									"end": 4218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4137,
									"end": 4218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4137,
									"end": 4218,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 4137,
									"end": 4218,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4218,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4218,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 4243,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4267,
									"end": 4273,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4260,
									"end": 4265,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4253,
									"end": 4274,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4301,
									"end": 4305,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4294,
									"end": 4299,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4290,
									"end": 4306,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4283,
									"end": 4306,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4283,
									"end": 4306,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4354,
									"end": 4358,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4346,
									"end": 4352,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4359,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4334,
									"end": 4340,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4330,
									"end": 4360,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4383,
									"end": 4386,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4375,
									"end": 4381,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4387,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4369,
									"end": 4491,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4369,
									"end": 4491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 4369,
									"end": 4491,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4402,
									"end": 4481,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 4402,
									"end": 4481,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 4402,
									"end": 4481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4402,
									"end": 4481,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 4402,
									"end": 4481,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4369,
									"end": 4491,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 4369,
									"end": 4491,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4517,
									"end": 4523,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4500,
									"end": 4731,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 4500,
									"end": 4731,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4534,
									"end": 4540,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4529,
									"end": 4532,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4526,
									"end": 4541,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4500,
									"end": 4731,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4500,
									"end": 4731,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 4500,
									"end": 4731,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4609,
									"end": 4612,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4638,
									"end": 4686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 4682,
									"end": 4685,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4670,
									"end": 4680,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4638,
									"end": 4686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 4638,
									"end": 4686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4638,
									"end": 4686,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 4638,
									"end": 4686,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4633,
									"end": 4636,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4626,
									"end": 4687,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4716,
									"end": 4720,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4711,
									"end": 4714,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4707,
									"end": 4721,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4721,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4721,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4576,
									"end": 4731,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4560,
									"end": 4564,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4555,
									"end": 4558,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4551,
									"end": 4565,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4544,
									"end": 4565,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4544,
									"end": 4565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4500,
									"end": 4731,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 4500,
									"end": 4731,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4500,
									"end": 4731,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 4500,
									"end": 4731,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4504,
									"end": 4525,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4737,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4737,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4737,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 5145,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4760,
									"end": 5145,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4842,
									"end": 4847,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4891,
									"end": 4894,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 4888,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4876,
									"end": 4882,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4872,
									"end": 4889,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4868,
									"end": 4895,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 4858,
									"end": 4980,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 4858,
									"end": 4980,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4899,
									"end": 4978,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 4899,
									"end": 4978,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 4899,
									"end": 4978,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4899,
									"end": 4978,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 4899,
									"end": 4978,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4858,
									"end": 4980,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 4858,
									"end": 4980,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5009,
									"end": 5015,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5003,
									"end": 5016,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5034,
									"end": 5139,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 5135,
									"end": 5138,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5127,
									"end": 5133,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5120,
									"end": 5124,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5112,
									"end": 5118,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5108,
									"end": 5125,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5034,
									"end": 5139,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5034,
									"end": 5139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5034,
									"end": 5139,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 5034,
									"end": 5139,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5025,
									"end": 5139,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5025,
									"end": 5139,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4848,
									"end": 5145,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 5145,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 5145,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 5145,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 5145,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 5145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5462,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 5151,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5228,
									"end": 5232,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5318,
									"end": 5336,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5310,
									"end": 5316,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5307,
									"end": 5337,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5304,
									"end": 5360,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5304,
									"end": 5360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 5304,
									"end": 5360,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5340,
									"end": 5358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 5340,
									"end": 5358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 5340,
									"end": 5358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5340,
									"end": 5358,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 5340,
									"end": 5358,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5304,
									"end": 5360,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 5304,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5390,
									"end": 5394,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5382,
									"end": 5388,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5378,
									"end": 5395,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5370,
									"end": 5395,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5370,
									"end": 5395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5450,
									"end": 5454,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5440,
									"end": 5455,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5462,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5462,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 6217,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 5485,
									"end": 6217,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5597,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5617,
									"end": 5698,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 5633,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 5690,
									"end": 5696,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5633,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 5633,
									"end": 5697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5633,
									"end": 5697,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 5633,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5617,
									"end": 5698,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 5617,
									"end": 5698,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5617,
									"end": 5698,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 5617,
									"end": 5698,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5608,
									"end": 5698,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5608,
									"end": 5698,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5718,
									"end": 5723,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5747,
									"end": 5753,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5740,
									"end": 5745,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5733,
									"end": 5754,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5781,
									"end": 5785,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5774,
									"end": 5779,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5770,
									"end": 5786,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5763,
									"end": 5786,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5763,
									"end": 5786,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5826,
									"end": 5832,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5839,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5810,
									"end": 5840,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5863,
									"end": 5866,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5852,
									"end": 5867,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 5971,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 5971,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 5849,
									"end": 5971,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5882,
									"end": 5961,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 5882,
									"end": 5961,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5882,
									"end": 5961,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5882,
									"end": 5961,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 5882,
									"end": 5961,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 5971,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 5849,
									"end": 5971,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5997,
									"end": 6003,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5980,
									"end": 6211,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 5980,
									"end": 6211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6014,
									"end": 6020,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6009,
									"end": 6012,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6021,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5980,
									"end": 6211,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5980,
									"end": 6211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 5980,
									"end": 6211,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6089,
									"end": 6092,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6118,
									"end": 6166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 6162,
									"end": 6165,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6150,
									"end": 6160,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6118,
									"end": 6166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 6118,
									"end": 6166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6118,
									"end": 6166,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 6118,
									"end": 6166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6113,
									"end": 6116,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6106,
									"end": 6167,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6196,
									"end": 6200,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6191,
									"end": 6194,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6187,
									"end": 6201,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6180,
									"end": 6201,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6180,
									"end": 6201,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6056,
									"end": 6211,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6040,
									"end": 6044,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6035,
									"end": 6038,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6031,
									"end": 6045,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6045,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5980,
									"end": 6211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 5980,
									"end": 6211,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5980,
									"end": 6211,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 5980,
									"end": 6211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5984,
									"end": 6005,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5598,
									"end": 6217,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5598,
									"end": 6217,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 6217,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 6217,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 6217,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 6217,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 6217,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 6217,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6240,
									"end": 6625,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 6240,
									"end": 6625,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6322,
									"end": 6327,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6371,
									"end": 6374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6364,
									"end": 6368,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6356,
									"end": 6362,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6352,
									"end": 6369,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6348,
									"end": 6375,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 6338,
									"end": 6460,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 6338,
									"end": 6460,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6379,
									"end": 6458,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 6379,
									"end": 6458,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 6379,
									"end": 6458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6379,
									"end": 6458,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 6379,
									"end": 6458,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6338,
									"end": 6460,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 6338,
									"end": 6460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 6495,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6483,
									"end": 6496,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6514,
									"end": 6619,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 6615,
									"end": 6618,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6607,
									"end": 6613,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6600,
									"end": 6604,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6592,
									"end": 6598,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6588,
									"end": 6605,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6514,
									"end": 6619,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 6514,
									"end": 6619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6514,
									"end": 6619,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 6514,
									"end": 6619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6505,
									"end": 6619,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6505,
									"end": 6619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6328,
									"end": 6625,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6240,
									"end": 6625,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6240,
									"end": 6625,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6240,
									"end": 6625,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6240,
									"end": 6625,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6240,
									"end": 6625,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6631,
									"end": 8674,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 6631,
									"end": 8674,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6825,
									"end": 6831,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6833,
									"end": 6839,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6841,
									"end": 6847,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6849,
									"end": 6855,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6857,
									"end": 6863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6865,
									"end": 6871,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6873,
									"end": 6879,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6922,
									"end": 6925,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 6910,
									"end": 6919,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6901,
									"end": 6908,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 6897,
									"end": 6920,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 6893,
									"end": 6926,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7010,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7010,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 6890,
									"end": 7010,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6929,
									"end": 7008,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 6929,
									"end": 7008,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6929,
									"end": 7008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6929,
									"end": 7008,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 6929,
									"end": 7008,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7010,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 6890,
									"end": 7010,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7049,
									"end": 7050,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7074,
									"end": 7138,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 7130,
									"end": 7137,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 7121,
									"end": 7127,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7110,
									"end": 7119,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 7106,
									"end": 7128,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7074,
									"end": 7138,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7074,
									"end": 7138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7074,
									"end": 7138,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 7074,
									"end": 7138,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7064,
									"end": 7138,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 7064,
									"end": 7138,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7020,
									"end": 7148,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7208,
									"end": 7210,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7197,
									"end": 7206,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 7193,
									"end": 7211,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7187,
									"end": 7212,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7231,
									"end": 7237,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7228,
									"end": 7258,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7225,
									"end": 7342,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7225,
									"end": 7342,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 7225,
									"end": 7342,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7261,
									"end": 7340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 7261,
									"end": 7340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7261,
									"end": 7340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7261,
									"end": 7340,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 7261,
									"end": 7340,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7225,
									"end": 7342,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 7225,
									"end": 7342,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7366,
									"end": 7440,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 7423,
									"end": 7429,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7412,
									"end": 7421,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 7408,
									"end": 7430,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7366,
									"end": 7440,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 7366,
									"end": 7440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7366,
									"end": 7440,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 7366,
									"end": 7440,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7356,
									"end": 7440,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 7356,
									"end": 7440,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7158,
									"end": 7450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7510,
									"end": 7512,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7499,
									"end": 7508,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 7495,
									"end": 7513,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7489,
									"end": 7514,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7541,
									"end": 7559,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7533,
									"end": 7539,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7530,
									"end": 7560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7527,
									"end": 7644,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7527,
									"end": 7644,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 7527,
									"end": 7644,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7563,
									"end": 7642,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 7563,
									"end": 7642,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7563,
									"end": 7642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7563,
									"end": 7642,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 7563,
									"end": 7642,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7527,
									"end": 7644,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 7527,
									"end": 7644,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7668,
									"end": 7742,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 7734,
									"end": 7741,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 7725,
									"end": 7731,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7714,
									"end": 7723,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 7710,
									"end": 7732,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7668,
									"end": 7742,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 7668,
									"end": 7742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7668,
									"end": 7742,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 7668,
									"end": 7742,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7658,
									"end": 7742,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 7658,
									"end": 7742,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7460,
									"end": 7752,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7791,
									"end": 7793,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7817,
									"end": 7881,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 7873,
									"end": 7880,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 7864,
									"end": 7870,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 7849,
									"end": 7871,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7817,
									"end": 7881,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 7817,
									"end": 7881,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7817,
									"end": 7881,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 7817,
									"end": 7881,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7807,
									"end": 7881,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7807,
									"end": 7881,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7762,
									"end": 7891,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7951,
									"end": 7954,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 7936,
									"end": 7955,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7930,
									"end": 7956,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7983,
									"end": 8001,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7975,
									"end": 7981,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7972,
									"end": 8002,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7969,
									"end": 8086,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7969,
									"end": 8086,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 7969,
									"end": 8086,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8005,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 8005,
									"end": 8084,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 8005,
									"end": 8084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8005,
									"end": 8084,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 8005,
									"end": 8084,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7969,
									"end": 8086,
									"name": "tag",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 7969,
									"end": 8086,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8110,
									"end": 8199,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 8191,
									"end": 8198,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 8182,
									"end": 8188,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8171,
									"end": 8180,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 8167,
									"end": 8189,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8110,
									"end": 8199,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 8110,
									"end": 8199,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8110,
									"end": 8199,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 8110,
									"end": 8199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8100,
									"end": 8199,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 8100,
									"end": 8199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7901,
									"end": 8209,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8269,
									"end": 8272,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 8258,
									"end": 8267,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8254,
									"end": 8273,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8248,
									"end": 8274,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8301,
									"end": 8319,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8293,
									"end": 8299,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8290,
									"end": 8320,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8287,
									"end": 8404,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8287,
									"end": 8404,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 8287,
									"end": 8404,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8323,
									"end": 8402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 8323,
									"end": 8402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 8323,
									"end": 8402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8323,
									"end": 8402,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 8323,
									"end": 8402,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8287,
									"end": 8404,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 8287,
									"end": 8404,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8428,
									"end": 8517,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 8509,
									"end": 8516,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 8500,
									"end": 8506,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8489,
									"end": 8498,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 8485,
									"end": 8507,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8428,
									"end": 8517,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 8428,
									"end": 8517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8428,
									"end": 8517,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 8428,
									"end": 8517,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8418,
									"end": 8517,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8418,
									"end": 8517,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8219,
									"end": 8527,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8566,
									"end": 8569,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 8593,
									"end": 8657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 8649,
									"end": 8656,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 8640,
									"end": 8646,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8629,
									"end": 8638,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 8625,
									"end": 8647,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8593,
									"end": 8657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 8593,
									"end": 8657,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8593,
									"end": 8657,
									"name": "tag",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 8593,
									"end": 8657,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8583,
									"end": 8657,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8583,
									"end": 8657,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8537,
									"end": 8667,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6631,
									"end": 8674,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6631,
									"end": 8674,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 6631,
									"end": 8674,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": 6631,
									"end": 8674,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6631,
									"end": 8674,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6631,
									"end": 8674,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 6631,
									"end": 8674,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6631,
									"end": 8674,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6631,
									"end": 8674,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 6631,
									"end": 8674,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6631,
									"end": 8674,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8680,
									"end": 8779,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 8680,
									"end": 8779,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8732,
									"end": 8738,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8766,
									"end": 8771,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8760,
									"end": 8772,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8750,
									"end": 8772,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8750,
									"end": 8772,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8680,
									"end": 8779,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8680,
									"end": 8779,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8680,
									"end": 8779,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8680,
									"end": 8779,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8785,
									"end": 8965,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 8785,
									"end": 8965,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8833,
									"end": 8910,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8830,
									"end": 8831,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8823,
									"end": 8911,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8930,
									"end": 8934,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 8927,
									"end": 8928,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 8920,
									"end": 8935,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8954,
									"end": 8958,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 8951,
									"end": 8952,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8944,
									"end": 8959,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 8971,
									"end": 9291,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 8971,
									"end": 9291,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9015,
									"end": 9021,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9052,
									"end": 9053,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9046,
									"end": 9050,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9042,
									"end": 9054,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 9032,
									"end": 9054,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9032,
									"end": 9054,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9099,
									"end": 9100,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9093,
									"end": 9097,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9089,
									"end": 9101,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9120,
									"end": 9138,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9110,
									"end": 9191,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 9110,
									"end": 9191,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9176,
									"end": 9180,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 9168,
									"end": 9174,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9181,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9154,
									"end": 9181,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9154,
									"end": 9181,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9110,
									"end": 9191,
									"name": "tag",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 9110,
									"end": 9191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9238,
									"end": 9240,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9230,
									"end": 9236,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9227,
									"end": 9241,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 9207,
									"end": 9225,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9204,
									"end": 9242,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 9201,
									"end": 9285,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 9201,
									"end": 9285,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9257,
									"end": 9275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 9257,
									"end": 9275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 9257,
									"end": 9275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9257,
									"end": 9275,
									"name": "tag",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 9257,
									"end": 9275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9201,
									"end": 9285,
									"name": "tag",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 9201,
									"end": 9285,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9022,
									"end": 9291,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8971,
									"end": 9291,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8971,
									"end": 9291,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8971,
									"end": 9291,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8971,
									"end": 9291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9297,
									"end": 9438,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 9297,
									"end": 9438,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9346,
									"end": 9350,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9369,
									"end": 9372,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9361,
									"end": 9372,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9361,
									"end": 9372,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9392,
									"end": 9395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9389,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9382,
									"end": 9396,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9426,
									"end": 9430,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9423,
									"end": 9424,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9413,
									"end": 9431,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 9405,
									"end": 9431,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9405,
									"end": 9431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9297,
									"end": 9438,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9297,
									"end": 9438,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9297,
									"end": 9438,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9297,
									"end": 9438,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9444,
									"end": 9537,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 9444,
									"end": 9537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9481,
									"end": 9487,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9528,
									"end": 9530,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9523,
									"end": 9525,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9516,
									"end": 9521,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9512,
									"end": 9526,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9508,
									"end": 9531,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 9498,
									"end": 9531,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9498,
									"end": 9531,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9444,
									"end": 9537,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9444,
									"end": 9537,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9444,
									"end": 9537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9444,
									"end": 9537,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9543,
									"end": 9650,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 9543,
									"end": 9650,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9587,
									"end": 9595,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9637,
									"end": 9642,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9631,
									"end": 9635,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9627,
									"end": 9643,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 9606,
									"end": 9643,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9606,
									"end": 9643,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9543,
									"end": 9650,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9543,
									"end": 9650,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9543,
									"end": 9650,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9543,
									"end": 9650,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9543,
									"end": 9650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9656,
									"end": 10049,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 9656,
									"end": 10049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9725,
									"end": 9731,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9775,
									"end": 9776,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 9763,
									"end": 9773,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9759,
									"end": 9777,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9798,
									"end": 9895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 9828,
									"end": 9894,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9817,
									"end": 9826,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9798,
									"end": 9895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 9798,
									"end": 9895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9798,
									"end": 9895,
									"name": "tag",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 9798,
									"end": 9895,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9916,
									"end": 9955,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 9946,
									"end": 9954,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9935,
									"end": 9944,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9916,
									"end": 9955,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 9916,
									"end": 9955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9916,
									"end": 9955,
									"name": "tag",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 9916,
									"end": 9955,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9904,
									"end": 9955,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 9904,
									"end": 9955,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9988,
									"end": 9992,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9984,
									"end": 9993,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 9977,
									"end": 9982,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9973,
									"end": 9994,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9964,
									"end": 9994,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 9964,
									"end": 9994,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10037,
									"end": 10041,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10027,
									"end": 10035,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10023,
									"end": 10042,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 10016,
									"end": 10021,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10013,
									"end": 10043,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 10003,
									"end": 10043,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10003,
									"end": 10043,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9732,
									"end": 10049,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9732,
									"end": 10049,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9656,
									"end": 10049,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 9656,
									"end": 10049,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9656,
									"end": 10049,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9656,
									"end": 10049,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9656,
									"end": 10049,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9656,
									"end": 10049,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10055,
									"end": 10115,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 10055,
									"end": 10115,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10083,
									"end": 10086,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10104,
									"end": 10109,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10097,
									"end": 10109,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10097,
									"end": 10109,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10055,
									"end": 10115,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10055,
									"end": 10115,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10055,
									"end": 10115,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10055,
									"end": 10115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10121,
									"end": 10263,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 10121,
									"end": 10263,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10171,
									"end": 10180,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10204,
									"end": 10257,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 10222,
									"end": 10256,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "229"
								},
								{
									"begin": 10231,
									"end": 10255,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 10249,
									"end": 10254,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10231,
									"end": 10255,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 10231,
									"end": 10255,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10231,
									"end": 10255,
									"name": "tag",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 10231,
									"end": 10255,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10222,
									"end": 10256,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 10222,
									"end": 10256,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10222,
									"end": 10256,
									"name": "tag",
									"source": 7,
									"value": "229"
								},
								{
									"begin": 10222,
									"end": 10256,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10204,
									"end": 10257,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 10204,
									"end": 10257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10204,
									"end": 10257,
									"name": "tag",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 10204,
									"end": 10257,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10191,
									"end": 10257,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10191,
									"end": 10257,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10121,
									"end": 10263,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10121,
									"end": 10263,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10121,
									"end": 10263,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10121,
									"end": 10263,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10269,
									"end": 10344,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 10269,
									"end": 10344,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10312,
									"end": 10315,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10333,
									"end": 10338,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10326,
									"end": 10338,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10326,
									"end": 10338,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10269,
									"end": 10344,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10269,
									"end": 10344,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10269,
									"end": 10344,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10269,
									"end": 10344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10350,
									"end": 10619,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 10350,
									"end": 10619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10460,
									"end": 10499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 10491,
									"end": 10498,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10460,
									"end": 10499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 10460,
									"end": 10499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10460,
									"end": 10499,
									"name": "tag",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 10460,
									"end": 10499,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10521,
									"end": 10612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 10570,
									"end": 10611,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 10594,
									"end": 10610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10570,
									"end": 10611,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 10570,
									"end": 10611,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10570,
									"end": 10611,
									"name": "tag",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 10570,
									"end": 10611,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10562,
									"end": 10568,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10555,
									"end": 10559,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10549,
									"end": 10560,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 10521,
									"end": 10612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 10521,
									"end": 10612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10521,
									"end": 10612,
									"name": "tag",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 10521,
									"end": 10612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10515,
									"end": 10519,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10508,
									"end": 10613,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 10426,
									"end": 10619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10350,
									"end": 10619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10350,
									"end": 10619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10350,
									"end": 10619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10350,
									"end": 10619,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10625,
									"end": 10698,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 10625,
									"end": 10698,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10670,
									"end": 10673,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10625,
									"end": 10698,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10625,
									"end": 10698,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10704,
									"end": 10893,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 10704,
									"end": 10893,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10781,
									"end": 10813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 10781,
									"end": 10813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 10781,
									"end": 10813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10781,
									"end": 10813,
									"name": "tag",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 10781,
									"end": 10813,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10822,
									"end": 10887,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 10880,
									"end": 10886,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10872,
									"end": 10878,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10866,
									"end": 10870,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10822,
									"end": 10887,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 10822,
									"end": 10887,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10822,
									"end": 10887,
									"name": "tag",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 10822,
									"end": 10887,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10757,
									"end": 10893,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10704,
									"end": 10893,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10704,
									"end": 10893,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10704,
									"end": 10893,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10899,
									"end": 11085,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 10899,
									"end": 11085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10959,
									"end": 11079,
									"name": "tag",
									"source": 7,
									"value": "241"
								},
								{
									"begin": 10959,
									"end": 11079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10976,
									"end": 10979,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10969,
									"end": 10974,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10966,
									"end": 10980,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 10959,
									"end": 11079,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10959,
									"end": 11079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 10959,
									"end": 11079,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11030,
									"end": 11069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "244"
								},
								{
									"begin": 11067,
									"end": 11068,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11060,
									"end": 11065,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11030,
									"end": 11069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 11030,
									"end": 11069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11030,
									"end": 11069,
									"name": "tag",
									"source": 7,
									"value": "244"
								},
								{
									"begin": 11030,
									"end": 11069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11003,
									"end": 11004,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10996,
									"end": 11001,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10992,
									"end": 11005,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10983,
									"end": 11005,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10983,
									"end": 11005,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10959,
									"end": 11079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "241"
								},
								{
									"begin": 10959,
									"end": 11079,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10959,
									"end": 11079,
									"name": "tag",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 10959,
									"end": 11079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10899,
									"end": 11085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10899,
									"end": 11085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10899,
									"end": 11085,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11091,
									"end": 11634,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 11091,
									"end": 11634,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11192,
									"end": 11194,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 11187,
									"end": 11190,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11184,
									"end": 11195,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11181,
									"end": 11627,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11181,
									"end": 11627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "246"
								},
								{
									"begin": 11181,
									"end": 11627,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11226,
									"end": 11264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "247"
								},
								{
									"begin": 11258,
									"end": 11263,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11226,
									"end": 11264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 11226,
									"end": 11264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11226,
									"end": 11264,
									"name": "tag",
									"source": 7,
									"value": "247"
								},
								{
									"begin": 11226,
									"end": 11264,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11310,
									"end": 11339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "248"
								},
								{
									"begin": 11328,
									"end": 11338,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11310,
									"end": 11339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 11310,
									"end": 11339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11310,
									"end": 11339,
									"name": "tag",
									"source": 7,
									"value": "248"
								},
								{
									"begin": 11310,
									"end": 11339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11300,
									"end": 11308,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11296,
									"end": 11340,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11493,
									"end": 11495,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11481,
									"end": 11491,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 11478,
									"end": 11496,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 11475,
									"end": 11524,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11475,
									"end": 11524,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "249"
								},
								{
									"begin": 11475,
									"end": 11524,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11514,
									"end": 11522,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11499,
									"end": 11522,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11499,
									"end": 11522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11475,
									"end": 11524,
									"name": "tag",
									"source": 7,
									"value": "249"
								},
								{
									"begin": 11475,
									"end": 11524,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11537,
									"end": 11617,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "250"
								},
								{
									"begin": 11593,
									"end": 11615,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 11611,
									"end": 11614,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 11593,
									"end": 11615,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 11593,
									"end": 11615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11593,
									"end": 11615,
									"name": "tag",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 11593,
									"end": 11615,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11583,
									"end": 11591,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11579,
									"end": 11616,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11566,
									"end": 11577,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11537,
									"end": 11617,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 11537,
									"end": 11617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11537,
									"end": 11617,
									"name": "tag",
									"source": 7,
									"value": "250"
								},
								{
									"begin": 11537,
									"end": 11617,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11196,
									"end": 11627,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11196,
									"end": 11627,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11181,
									"end": 11627,
									"name": "tag",
									"source": 7,
									"value": "246"
								},
								{
									"begin": 11181,
									"end": 11627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11091,
									"end": 11634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11091,
									"end": 11634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11091,
									"end": 11634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11091,
									"end": 11634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11640,
									"end": 11757,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 11640,
									"end": 11757,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11694,
									"end": 11702,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11744,
									"end": 11749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11738,
									"end": 11742,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11734,
									"end": 11750,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 11713,
									"end": 11750,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11713,
									"end": 11750,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11640,
									"end": 11757,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11640,
									"end": 11757,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11640,
									"end": 11757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11640,
									"end": 11757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11640,
									"end": 11757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11763,
									"end": 11932,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 11763,
									"end": 11932,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11807,
									"end": 11813,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11840,
									"end": 11891,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "254"
								},
								{
									"begin": 11888,
									"end": 11889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11884,
									"end": 11890,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 11876,
									"end": 11881,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11873,
									"end": 11874,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 11869,
									"end": 11882,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 11840,
									"end": 11891,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 11840,
									"end": 11891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11840,
									"end": 11891,
									"name": "tag",
									"source": 7,
									"value": "254"
								},
								{
									"begin": 11840,
									"end": 11891,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11836,
									"end": 11892,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 11921,
									"end": 11925,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 11915,
									"end": 11919,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11911,
									"end": 11926,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 11901,
									"end": 11926,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11901,
									"end": 11926,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11814,
									"end": 11932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11763,
									"end": 11932,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11763,
									"end": 11932,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11763,
									"end": 11932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11763,
									"end": 11932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11763,
									"end": 11932,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11937,
									"end": 12232,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 11937,
									"end": 12232,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12013,
									"end": 12017,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12159,
									"end": 12188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "256"
								},
								{
									"begin": 12184,
									"end": 12187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12178,
									"end": 12182,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12159,
									"end": 12188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 12159,
									"end": 12188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12159,
									"end": 12188,
									"name": "tag",
									"source": 7,
									"value": "256"
								},
								{
									"begin": 12159,
									"end": 12188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12151,
									"end": 12188,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12151,
									"end": 12188,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12221,
									"end": 12224,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12218,
									"end": 12219,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 12214,
									"end": 12225,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 12208,
									"end": 12212,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12205,
									"end": 12226,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 12197,
									"end": 12226,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12197,
									"end": 12226,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11937,
									"end": 12232,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11937,
									"end": 12232,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11937,
									"end": 12232,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11937,
									"end": 12232,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11937,
									"end": 12232,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12237,
									"end": 13632,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 12237,
									"end": 13632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12354,
									"end": 12391,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "258"
								},
								{
									"begin": 12387,
									"end": 12390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12354,
									"end": 12391,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 12354,
									"end": 12391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12354,
									"end": 12391,
									"name": "tag",
									"source": 7,
									"value": "258"
								},
								{
									"begin": 12354,
									"end": 12391,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12456,
									"end": 12474,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12448,
									"end": 12454,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12445,
									"end": 12475,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 12442,
									"end": 12498,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 12442,
									"end": 12498,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "259"
								},
								{
									"begin": 12442,
									"end": 12498,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12478,
									"end": 12496,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "260"
								},
								{
									"begin": 12478,
									"end": 12496,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 12478,
									"end": 12496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12478,
									"end": 12496,
									"name": "tag",
									"source": 7,
									"value": "260"
								},
								{
									"begin": 12478,
									"end": 12496,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12442,
									"end": 12498,
									"name": "tag",
									"source": 7,
									"value": "259"
								},
								{
									"begin": 12442,
									"end": 12498,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12522,
									"end": 12560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "261"
								},
								{
									"begin": 12554,
									"end": 12558,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12548,
									"end": 12559,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 12522,
									"end": 12560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 12522,
									"end": 12560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12522,
									"end": 12560,
									"name": "tag",
									"source": 7,
									"value": "261"
								},
								{
									"begin": 12522,
									"end": 12560,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12607,
									"end": 12674,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "262"
								},
								{
									"begin": 12667,
									"end": 12673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12659,
									"end": 12665,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12653,
									"end": 12657,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 12607,
									"end": 12674,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 12607,
									"end": 12674,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12607,
									"end": 12674,
									"name": "tag",
									"source": 7,
									"value": "262"
								},
								{
									"begin": 12607,
									"end": 12674,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12701,
									"end": 12702,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12725,
									"end": 12729,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12712,
									"end": 12729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12712,
									"end": 12729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12757,
									"end": 12759,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 12749,
									"end": 12755,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12746,
									"end": 12760,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 12774,
									"end": 12775,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 12769,
									"end": 13387,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12769,
									"end": 13387,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 12769,
									"end": 13387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "264"
								},
								{
									"begin": 12769,
									"end": 13387,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 13431,
									"end": 13432,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13448,
									"end": 13454,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13445,
									"end": 13522,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 13445,
									"end": 13522,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "265"
								},
								{
									"begin": 13445,
									"end": 13522,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 13497,
									"end": 13506,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13492,
									"end": 13495,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 13488,
									"end": 13507,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13482,
									"end": 13508,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 13473,
									"end": 13508,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13473,
									"end": 13508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13445,
									"end": 13522,
									"name": "tag",
									"source": 7,
									"value": "265"
								},
								{
									"begin": 13445,
									"end": 13522,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13548,
									"end": 13615,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "266"
								},
								{
									"begin": 13608,
									"end": 13614,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 13601,
									"end": 13606,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13548,
									"end": 13615,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 13548,
									"end": 13615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13548,
									"end": 13615,
									"name": "tag",
									"source": 7,
									"value": "266"
								},
								{
									"begin": 13548,
									"end": 13615,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13542,
									"end": 13546,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 13535,
									"end": 13616,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 13404,
									"end": 13626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12739,
									"end": 13626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "263"
								},
								{
									"begin": 12739,
									"end": 13626,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12769,
									"end": 13387,
									"name": "tag",
									"source": 7,
									"value": "264"
								},
								{
									"begin": 12769,
									"end": 13387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12821,
									"end": 12825,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 12817,
									"end": 12826,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 12809,
									"end": 12815,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12805,
									"end": 12827,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 12855,
									"end": 12892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "267"
								},
								{
									"begin": 12887,
									"end": 12891,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 12855,
									"end": 12892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 12855,
									"end": 12892,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12855,
									"end": 12892,
									"name": "tag",
									"source": 7,
									"value": "267"
								},
								{
									"begin": 12855,
									"end": 12892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12914,
									"end": 12915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12928,
									"end": 13136,
									"name": "tag",
									"source": 7,
									"value": "268"
								},
								{
									"begin": 12928,
									"end": 13136,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12942,
									"end": 12949,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12939,
									"end": 12940,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12936,
									"end": 12950,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 12928,
									"end": 13136,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 12928,
									"end": 13136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "270"
								},
								{
									"begin": 12928,
									"end": 13136,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 13021,
									"end": 13030,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13016,
									"end": 13019,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 13012,
									"end": 13031,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13006,
									"end": 13032,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 12998,
									"end": 13004,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12991,
									"end": 13033,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 13072,
									"end": 13073,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 13064,
									"end": 13070,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13060,
									"end": 13074,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13050,
									"end": 13074,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13050,
									"end": 13074,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13119,
									"end": 13121,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13108,
									"end": 13117,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 13104,
									"end": 13122,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13091,
									"end": 13122,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 13091,
									"end": 13122,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12965,
									"end": 12969,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12962,
									"end": 12963,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12958,
									"end": 12970,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12953,
									"end": 12970,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12953,
									"end": 12970,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12928,
									"end": 13136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "268"
								},
								{
									"begin": 12928,
									"end": 13136,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12928,
									"end": 13136,
									"name": "tag",
									"source": 7,
									"value": "270"
								},
								{
									"begin": 12928,
									"end": 13136,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13164,
									"end": 13170,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 13155,
									"end": 13162,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13152,
									"end": 13171,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 13149,
									"end": 13328,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 13149,
									"end": 13328,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "271"
								},
								{
									"begin": 13149,
									"end": 13328,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 13222,
									"end": 13231,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13217,
									"end": 13220,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 13213,
									"end": 13232,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13207,
									"end": 13233,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 13265,
									"end": 13313,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "272"
								},
								{
									"begin": 13307,
									"end": 13311,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 13299,
									"end": 13305,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 13295,
									"end": 13312,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 13284,
									"end": 13293,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13265,
									"end": 13313,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 13265,
									"end": 13313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13265,
									"end": 13313,
									"name": "tag",
									"source": 7,
									"value": "272"
								},
								{
									"begin": 13265,
									"end": 13313,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13257,
									"end": 13263,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13250,
									"end": 13314,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 13172,
									"end": 13328,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13149,
									"end": 13328,
									"name": "tag",
									"source": 7,
									"value": "271"
								},
								{
									"begin": 13149,
									"end": 13328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13374,
									"end": 13375,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 13370,
									"end": 13371,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 13362,
									"end": 13368,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 13358,
									"end": 13372,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 13354,
									"end": 13376,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13348,
									"end": 13352,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 13341,
									"end": 13377,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 12776,
									"end": 13387,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12776,
									"end": 13387,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12776,
									"end": 13387,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12739,
									"end": 13626,
									"name": "tag",
									"source": 7,
									"value": "263"
								},
								{
									"begin": 12739,
									"end": 13626,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12739,
									"end": 13626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12329,
									"end": 13632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12329,
									"end": 13632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12329,
									"end": 13632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12237,
									"end": 13632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12237,
									"end": 13632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12237,
									"end": 13632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13638,
									"end": 13756,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 13638,
									"end": 13756,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13725,
									"end": 13749,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "274"
								},
								{
									"begin": 13743,
									"end": 13748,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 13725,
									"end": 13749,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 13725,
									"end": 13749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13725,
									"end": 13749,
									"name": "tag",
									"source": 7,
									"value": "274"
								},
								{
									"begin": 13725,
									"end": 13749,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13720,
									"end": 13723,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13713,
									"end": 13750,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 13638,
									"end": 13756,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13638,
									"end": 13756,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13638,
									"end": 13756,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13762,
									"end": 13984,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 13762,
									"end": 13984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13855,
									"end": 13859,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13893,
									"end": 13895,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13882,
									"end": 13891,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13878,
									"end": 13896,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13870,
									"end": 13896,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13870,
									"end": 13896,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13906,
									"end": 13977,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "276"
								},
								{
									"begin": 13974,
									"end": 13975,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13963,
									"end": 13972,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13959,
									"end": 13976,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13950,
									"end": 13956,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13906,
									"end": 13977,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 13906,
									"end": 13977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13906,
									"end": 13977,
									"name": "tag",
									"source": 7,
									"value": "276"
								},
								{
									"begin": 13906,
									"end": 13977,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13762,
									"end": 13984,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13762,
									"end": 13984,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13762,
									"end": 13984,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13762,
									"end": 13984,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13762,
									"end": 13984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13990,
									"end": 14159,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 13990,
									"end": 14159,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14074,
									"end": 14085,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14108,
									"end": 14114,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14103,
									"end": 14106,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14096,
									"end": 14115,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 14148,
									"end": 14152,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 14143,
									"end": 14146,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14139,
									"end": 14153,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14124,
									"end": 14153,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14124,
									"end": 14153,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13990,
									"end": 14159,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13990,
									"end": 14159,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13990,
									"end": 14159,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13990,
									"end": 14159,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13990,
									"end": 14159,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14165,
									"end": 14394,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 14165,
									"end": 14394,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14305,
									"end": 14339,
									"name": "PUSH",
									"source": 7,
									"value": "737562736372696265727320616E6420746865697220616D6F756E747320646F"
								},
								{
									"begin": 14301,
									"end": 14302,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14293,
									"end": 14299,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14289,
									"end": 14303,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14282,
									"end": 14340,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 14374,
									"end": 14386,
									"name": "PUSH",
									"source": 7,
									"value": "206E6F74206D6174636800000000000000000000000000000000000000000000"
								},
								{
									"begin": 14369,
									"end": 14371,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 14361,
									"end": 14367,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14357,
									"end": 14372,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14350,
									"end": 14387,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 14165,
									"end": 14394,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14165,
									"end": 14394,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14400,
									"end": 14766,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 14400,
									"end": 14766,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14542,
									"end": 14545,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14563,
									"end": 14630,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "280"
								},
								{
									"begin": 14627,
									"end": 14629,
									"name": "PUSH",
									"source": 7,
									"value": "2A"
								},
								{
									"begin": 14622,
									"end": 14625,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14563,
									"end": 14630,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 14563,
									"end": 14630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14563,
									"end": 14630,
									"name": "tag",
									"source": 7,
									"value": "280"
								},
								{
									"begin": 14563,
									"end": 14630,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14556,
									"end": 14630,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14556,
									"end": 14630,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14639,
									"end": 14732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "281"
								},
								{
									"begin": 14728,
									"end": 14731,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14639,
									"end": 14732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 14639,
									"end": 14732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14639,
									"end": 14732,
									"name": "tag",
									"source": 7,
									"value": "281"
								},
								{
									"begin": 14639,
									"end": 14732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14757,
									"end": 14759,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 14752,
									"end": 14755,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14748,
									"end": 14760,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14741,
									"end": 14760,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14741,
									"end": 14760,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14400,
									"end": 14766,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14400,
									"end": 14766,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14400,
									"end": 14766,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14400,
									"end": 14766,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14772,
									"end": 15191,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 14772,
									"end": 15191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14938,
									"end": 14942,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14976,
									"end": 14978,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 14965,
									"end": 14974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14961,
									"end": 14979,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14953,
									"end": 14979,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14953,
									"end": 14979,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15025,
									"end": 15034,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 15019,
									"end": 15023,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 15015,
									"end": 15035,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 15011,
									"end": 15012,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15000,
									"end": 15009,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14996,
									"end": 15013,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14989,
									"end": 15036,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 15053,
									"end": 15184,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "283"
								},
								{
									"begin": 15179,
									"end": 15183,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 15053,
									"end": 15184,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 15053,
									"end": 15184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15053,
									"end": 15184,
									"name": "tag",
									"source": 7,
									"value": "283"
								},
								{
									"begin": 15053,
									"end": 15184,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15045,
									"end": 15184,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 15045,
									"end": 15184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14772,
									"end": 15191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14772,
									"end": 15191,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14772,
									"end": 15191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14772,
									"end": 15191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15197,
									"end": 15377,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 15197,
									"end": 15377,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15245,
									"end": 15322,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15242,
									"end": 15243,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15235,
									"end": 15323,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 15342,
									"end": 15346,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 15339,
									"end": 15340,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 15332,
									"end": 15347,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 15366,
									"end": 15370,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 15363,
									"end": 15364,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15356,
									"end": 15371,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 15383,
									"end": 15574,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 15383,
									"end": 15574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15423,
									"end": 15426,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15442,
									"end": 15462,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "286"
								},
								{
									"begin": 15460,
									"end": 15461,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15442,
									"end": 15462,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 15442,
									"end": 15462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15442,
									"end": 15462,
									"name": "tag",
									"source": 7,
									"value": "286"
								},
								{
									"begin": 15442,
									"end": 15462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15437,
									"end": 15462,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 15437,
									"end": 15462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15476,
									"end": 15496,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "287"
								},
								{
									"begin": 15494,
									"end": 15495,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15476,
									"end": 15496,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 15476,
									"end": 15496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15476,
									"end": 15496,
									"name": "tag",
									"source": 7,
									"value": "287"
								},
								{
									"begin": 15476,
									"end": 15496,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15471,
									"end": 15496,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 15471,
									"end": 15496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15519,
									"end": 15520,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15516,
									"end": 15517,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15512,
									"end": 15521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15505,
									"end": 15521,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 15505,
									"end": 15521,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15540,
									"end": 15543,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 15537,
									"end": 15538,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15534,
									"end": 15544,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 15531,
									"end": 15567,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 15531,
									"end": 15567,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "288"
								},
								{
									"begin": 15531,
									"end": 15567,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 15547,
									"end": 15565,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "289"
								},
								{
									"begin": 15547,
									"end": 15565,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 15547,
									"end": 15565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15547,
									"end": 15565,
									"name": "tag",
									"source": 7,
									"value": "289"
								},
								{
									"begin": 15547,
									"end": 15565,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15531,
									"end": 15567,
									"name": "tag",
									"source": 7,
									"value": "288"
								},
								{
									"begin": 15531,
									"end": 15567,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15383,
									"end": 15574,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 15383,
									"end": 15574,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 15383,
									"end": 15574,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15383,
									"end": 15574,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15383,
									"end": 15574,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15580,
									"end": 15760,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 15580,
									"end": 15760,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15628,
									"end": 15705,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15625,
									"end": 15626,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15618,
									"end": 15706,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 15725,
									"end": 15729,
									"name": "PUSH",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 15722,
									"end": 15723,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 15715,
									"end": 15730,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 15749,
									"end": 15753,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 15746,
									"end": 15747,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15739,
									"end": 15754,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 15766,
									"end": 15999,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 15766,
									"end": 15999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15805,
									"end": 15808,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15828,
									"end": 15852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "292"
								},
								{
									"begin": 15846,
									"end": 15851,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15828,
									"end": 15852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 15828,
									"end": 15852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15828,
									"end": 15852,
									"name": "tag",
									"source": 7,
									"value": "292"
								},
								{
									"begin": 15828,
									"end": 15852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15819,
									"end": 15852,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 15819,
									"end": 15852,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15874,
									"end": 15940,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15867,
									"end": 15872,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15864,
									"end": 15941,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 15861,
									"end": 15964,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "293"
								},
								{
									"begin": 15861,
									"end": 15964,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 15944,
									"end": 15962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "294"
								},
								{
									"begin": 15944,
									"end": 15962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 15944,
									"end": 15962,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15944,
									"end": 15962,
									"name": "tag",
									"source": 7,
									"value": "294"
								},
								{
									"begin": 15944,
									"end": 15962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15861,
									"end": 15964,
									"name": "tag",
									"source": 7,
									"value": "293"
								},
								{
									"begin": 15861,
									"end": 15964,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15991,
									"end": 15992,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 15984,
									"end": 15989,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15980,
									"end": 15993,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15973,
									"end": 15993,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 15973,
									"end": 15993,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15766,
									"end": 15999,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 15766,
									"end": 15999,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 15766,
									"end": 15999,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15766,
									"end": 15999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16005,
									"end": 16199,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 16005,
									"end": 16199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16045,
									"end": 16049,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 16065,
									"end": 16085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "296"
								},
								{
									"begin": 16083,
									"end": 16084,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 16065,
									"end": 16085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 16065,
									"end": 16085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16065,
									"end": 16085,
									"name": "tag",
									"source": 7,
									"value": "296"
								},
								{
									"begin": 16065,
									"end": 16085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16060,
									"end": 16085,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 16060,
									"end": 16085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16099,
									"end": 16119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "297"
								},
								{
									"begin": 16117,
									"end": 16118,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 16099,
									"end": 16119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 16099,
									"end": 16119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16099,
									"end": 16119,
									"name": "tag",
									"source": 7,
									"value": "297"
								},
								{
									"begin": 16099,
									"end": 16119,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16094,
									"end": 16119,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 16094,
									"end": 16119,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16143,
									"end": 16144,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 16140,
									"end": 16141,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 16136,
									"end": 16145,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 16128,
									"end": 16145,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 16128,
									"end": 16145,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16167,
									"end": 16168,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 16161,
									"end": 16165,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 16158,
									"end": 16169,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 16155,
									"end": 16192,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 16155,
									"end": 16192,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "298"
								},
								{
									"begin": 16155,
									"end": 16192,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 16172,
									"end": 16190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "299"
								},
								{
									"begin": 16172,
									"end": 16190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 16172,
									"end": 16190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16172,
									"end": 16190,
									"name": "tag",
									"source": 7,
									"value": "299"
								},
								{
									"begin": 16172,
									"end": 16190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16155,
									"end": 16192,
									"name": "tag",
									"source": 7,
									"value": "298"
								},
								{
									"begin": 16155,
									"end": 16192,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16005,
									"end": 16199,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 16005,
									"end": 16199,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 16005,
									"end": 16199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16005,
									"end": 16199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16005,
									"end": 16199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16205,
									"end": 16323,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 16205,
									"end": 16323,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16292,
									"end": 16316,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "301"
								},
								{
									"begin": 16310,
									"end": 16315,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 16292,
									"end": 16316,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 16292,
									"end": 16316,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16292,
									"end": 16316,
									"name": "tag",
									"source": 7,
									"value": "301"
								},
								{
									"begin": 16292,
									"end": 16316,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16287,
									"end": 16290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 16280,
									"end": 16317,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 16205,
									"end": 16323,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16205,
									"end": 16323,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16205,
									"end": 16323,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16329,
									"end": 16771,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 16329,
									"end": 16771,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16478,
									"end": 16482,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 16516,
									"end": 16518,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 16505,
									"end": 16514,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 16501,
									"end": 16519,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 16493,
									"end": 16519,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 16493,
									"end": 16519,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16529,
									"end": 16600,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "303"
								},
								{
									"begin": 16597,
									"end": 16598,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 16586,
									"end": 16595,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 16582,
									"end": 16599,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 16573,
									"end": 16579,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 16529,
									"end": 16600,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 16529,
									"end": 16600,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16529,
									"end": 16600,
									"name": "tag",
									"source": 7,
									"value": "303"
								},
								{
									"begin": 16529,
									"end": 16600,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16610,
									"end": 16682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "304"
								},
								{
									"begin": 16678,
									"end": 16680,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 16667,
									"end": 16676,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 16663,
									"end": 16681,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 16654,
									"end": 16660,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 16610,
									"end": 16682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 16610,
									"end": 16682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16610,
									"end": 16682,
									"name": "tag",
									"source": 7,
									"value": "304"
								},
								{
									"begin": 16610,
									"end": 16682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16692,
									"end": 16764,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "305"
								},
								{
									"begin": 16760,
									"end": 16762,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 16749,
									"end": 16758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 16745,
									"end": 16763,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 16736,
									"end": 16742,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 16692,
									"end": 16764,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 16692,
									"end": 16764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16692,
									"end": 16764,
									"name": "tag",
									"source": 7,
									"value": "305"
								},
								{
									"begin": 16692,
									"end": 16764,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16329,
									"end": 16771,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 16329,
									"end": 16771,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 16329,
									"end": 16771,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16329,
									"end": 16771,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16329,
									"end": 16771,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16329,
									"end": 16771,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16329,
									"end": 16771,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16777,
									"end": 16999,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 16777,
									"end": 16999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16870,
									"end": 16874,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 16908,
									"end": 16910,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 16897,
									"end": 16906,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 16893,
									"end": 16911,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 16885,
									"end": 16911,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 16885,
									"end": 16911,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16921,
									"end": 16992,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "307"
								},
								{
									"begin": 16989,
									"end": 16990,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 16978,
									"end": 16987,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 16974,
									"end": 16991,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 16965,
									"end": 16971,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 16921,
									"end": 16992,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 16921,
									"end": 16992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 16921,
									"end": 16992,
									"name": "tag",
									"source": 7,
									"value": "307"
								},
								{
									"begin": 16921,
									"end": 16992,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 16777,
									"end": 16999,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 16777,
									"end": 16999,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 16777,
									"end": 16999,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16777,
									"end": 16999,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 16777,
									"end": 16999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 3775,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e70d2ea1e649f2e52c7cec53763fe632648c82d5adf0023b379ffbcdd6f752ca64736f6c63430008140033",
									".code": [
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "B93A5396"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "B93A5396"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "BD7DAC92"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "C0A4D64D"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "9F3ADB0E"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "AE84827A"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "DE65A44"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 3775,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3399,
											"end": 3516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2610,
											"end": 3283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2610,
											"end": 3283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2610,
											"end": 3283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1956,
											"end": 2040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1956,
											"end": 2040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2048,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2048,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2048,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3652,
											"end": 3772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3652,
											"end": 3772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3524,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3524,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3291,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3291,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2514,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2514,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3480,
											"end": 3508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3480,
											"end": 3508,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3480,
											"end": 3508,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3480,
											"end": 3508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2759,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2759,
											"end": 2766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2766,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2759,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2766,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2751,
											"end": 2766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2755,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2766,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2751,
											"end": 2766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2747,
											"end": 3006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2842,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2828,
											"end": 2842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2824,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2842,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2783,
											"end": 2903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2783,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2747,
											"end": 3006,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 3006,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2747,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2959,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2972,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2936,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2936,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 3006,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2747,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3016,
											"end": 3039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3052,
											"end": 3054,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3042,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3055,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3042,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3042,
											"end": 3064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3042,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3064,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3042,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3016,
											"end": 3064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3016,
											"end": 3064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3141,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3121,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3121,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3121,
											"end": 3134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3134,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3121,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3118,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3116,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3116,
											"end": 3134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3116,
											"end": 3134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3116,
											"end": 3134,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3116,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3115,
											"end": 3141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3115,
											"end": 3141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3141,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3115,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3097,
											"end": 3141,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3075,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3075,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3266,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3239,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3275,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3239,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 3283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 2040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 2040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 520,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 520,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 520,
											"end": 527,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 506,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 506,
											"end": 527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 506,
											"end": 516,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 506,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 506,
											"end": 527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 506,
											"end": 527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 502,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 502,
											"end": 688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 589,
											"end": 603,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 585,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 603,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 544,
											"end": 676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 544,
											"end": 676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 544,
											"end": 676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 544,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 544,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 544,
											"end": 676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 544,
											"end": 676,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 544,
											"end": 676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 688,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 502,
											"end": 688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 725,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 706,
											"end": 721,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 706,
											"end": 734,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 706,
											"end": 734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 698,
											"end": 755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 698,
											"end": 755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 698,
											"end": 755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 698,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 698,
											"end": 755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 698,
											"end": 755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 698,
											"end": 755,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 698,
											"end": 755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2223,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2214,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2211,
											"end": 2213,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2201,
											"end": 2214,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2214,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2201,
											"end": 2214,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2201,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2201,
											"end": 2223,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2223,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2201,
											"end": 2223,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2223,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2280,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2280,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2280,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2280,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2275,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2275,
											"end": 2293,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2293,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2275,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2275,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2274,
											"end": 2300,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2300,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2234,
											"end": 2378,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2234,
											"end": 2378,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8519CDB8AD47F1F5F5BC583D2063D1FC1FFED7DAC0CAB9E8B1F6492AA60CBD7F"
										},
										{
											"begin": 2415,
											"end": 2425,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2427,
											"end": 2429,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2396,
											"end": 2452,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2452,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2487,
											"end": 2489,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2491,
											"end": 2497,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2472,
											"end": 2498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2472,
											"end": 2498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2498,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3743,
											"end": 3755,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3763,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 3742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3737,
											"end": 3764,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 3764,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3737,
											"end": 3764,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3609,
											"end": 3636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3615,
											"end": 3627,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3629,
											"end": 3635,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3609,
											"end": 3636,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3609,
											"end": 3636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3351,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3371,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3364,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3364,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2585,
											"end": 2594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1382,
											"end": 1388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1660,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1664,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3563,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3446,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3569,
											"end": 3686,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3569,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3872,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3692,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3817,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3737,
											"end": 3738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3818,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3837,
											"end": 3841,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3834,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3861,
											"end": 3865,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3858,
											"end": 3859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 4159,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3878,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3961,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 3983,
											"end": 3987,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3961,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3961,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3961,
											"end": 3988,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 3961,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 3989,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4097,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4043,
											"end": 4053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4040,
											"end": 4074,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4099,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4034,
											"end": 4122,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4034,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 4034,
											"end": 4122,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4102,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4034,
											"end": 4122,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 4034,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4152,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4140,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4131,
											"end": 4153,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 4159,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 4159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4294,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4165,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 4226,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 4226,
											"end": 4246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4246,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 4226,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4246,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 4283,
											"end": 4287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4275,
											"end": 4281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4255,
											"end": 4288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4288,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 4255,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4294,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4165,
											"end": 4294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4608,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4300,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4471,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4438,
											"end": 4494,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4438,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 4438,
											"end": 4494,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4474,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4438,
											"end": 4494,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 4438,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 4512,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4541,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 4512,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4590,
											"end": 4594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4300,
											"end": 4608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4614,
											"end": 4760,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 4614,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4711,
											"end": 4717,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4709,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4701,
											"end": 4704,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4688,
											"end": 4718,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4738,
											"end": 4741,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4614,
											"end": 4760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4614,
											"end": 4760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4614,
											"end": 4760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4614,
											"end": 4760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5191,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4766,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4844,
											"end": 4849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4869,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4885,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4927,
											"end": 4933,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4885,
											"end": 4934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4934,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4885,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4869,
											"end": 4935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 4935,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4869,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4958,
											"end": 4964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4944,
											"end": 4965,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5000,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4989,
											"end": 4994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5037,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5025,
											"end": 5031,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5038,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5010,
											"end": 5122,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5010,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5010,
											"end": 5122,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 5041,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5041,
											"end": 5120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5120,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 5041,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5010,
											"end": 5122,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5010,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 5178,
											"end": 5184,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5171,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 5131,
											"end": 5185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5185,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 5131,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 5191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5191,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5191,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 5191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5551,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5211,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5267,
											"end": 5272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5301,
											"end": 5307,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5297,
											"end": 5314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5320,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 5283,
											"end": 5405,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 5324,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 5324,
											"end": 5403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5324,
											"end": 5403,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 5324,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5405,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 5283,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5448,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 5541,
											"end": 5544,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5539,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5530,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5524,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5514,
											"end": 5531,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 5466,
											"end": 5545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5545,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 5466,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5457,
											"end": 5545,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5457,
											"end": 5545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5273,
											"end": 5551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5551,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5551,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 6066,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 5557,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5626,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5677,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5672,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5654,
											"end": 5661,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5650,
											"end": 5673,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5678,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5681,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 5681,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 5681,
											"end": 5760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5681,
											"end": 5760,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 5681,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5832,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5859,
											"end": 5877,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5848,
											"end": 5878,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5962,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 5845,
											"end": 5962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 5881,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 5881,
											"end": 5960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5960,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 5881,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5962,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 5845,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 6041,
											"end": 6048,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6032,
											"end": 6038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5986,
											"end": 6049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 6049,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5986,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5772,
											"end": 6059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 6066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 6066,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 6066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 6066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 6066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6190,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6072,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 6177,
											"end": 6182,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6159,
											"end": 6183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6157,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6184,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6196,
											"end": 6418,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6196,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6289,
											"end": 6293,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6327,
											"end": 6329,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6316,
											"end": 6325,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6340,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6408,
											"end": 6409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6393,
											"end": 6410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6384,
											"end": 6390,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6340,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6340,
											"end": 6411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6340,
											"end": 6411,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6340,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6196,
											"end": 6418,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6196,
											"end": 6418,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6196,
											"end": 6418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6196,
											"end": 6418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6196,
											"end": 6418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 7043,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6424,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6501,
											"end": 6507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6509,
											"end": 6515,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6517,
											"end": 6523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6568,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6563,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6545,
											"end": 6552,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6541,
											"end": 6564,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 6569,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6653,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 6534,
											"end": 6653,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 6572,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 6572,
											"end": 6651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6651,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 6572,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6653,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 6534,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6762,
											"end": 6769,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6753,
											"end": 6759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6751,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6738,
											"end": 6760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6717,
											"end": 6770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6770,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6717,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6770,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6663,
											"end": 6780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 6821,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6845,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6890,
											"end": 6897,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6881,
											"end": 6887,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6870,
											"end": 6879,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6866,
											"end": 6888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6845,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6845,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6845,
											"end": 6898,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6845,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6835,
											"end": 6898,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6835,
											"end": 6898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6790,
											"end": 6908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 7018,
											"end": 7025,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7009,
											"end": 7015,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7007,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7016,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6973,
											"end": 7026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 7026,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6973,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 7026,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 7026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6918,
											"end": 7036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 7043,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 7043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 7043,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 7043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 7043,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 7043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7049,
											"end": 7135,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 7049,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7124,
											"end": 7128,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 7117,
											"end": 7122,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7113,
											"end": 7129,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7102,
											"end": 7129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7102,
											"end": 7129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7049,
											"end": 7135,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7049,
											"end": 7135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7049,
											"end": 7135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7049,
											"end": 7135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7141,
											"end": 7253,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 7141,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 7240,
											"end": 7245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 7224,
											"end": 7246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7246,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 7224,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7212,
											"end": 7247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7141,
											"end": 7253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7141,
											"end": 7253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7141,
											"end": 7253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7473,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 7259,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7348,
											"end": 7352,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7386,
											"end": 7388,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7375,
											"end": 7384,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7371,
											"end": 7389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7399,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7452,
											"end": 7461,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7465,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7445,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7399,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 7399,
											"end": 7466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7399,
											"end": 7466,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 7399,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7473,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7473,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7479,
											"end": 7808,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 7479,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7538,
											"end": 7544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7587,
											"end": 7589,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7575,
											"end": 7584,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7573,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7562,
											"end": 7585,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7558,
											"end": 7590,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7555,
											"end": 7674,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7555,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 7555,
											"end": 7674,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7593,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7593,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7672,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7593,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7555,
											"end": 7674,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 7555,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7713,
											"end": 7714,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7783,
											"end": 7790,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7774,
											"end": 7780,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7772,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 7738,
											"end": 7791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 7791,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7738,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7684,
											"end": 7801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7479,
											"end": 7808,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7479,
											"end": 7808,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7479,
											"end": 7808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7479,
											"end": 7808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7479,
											"end": 7808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7932,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 7814,
											"end": 7932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7919,
											"end": 7924,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 7901,
											"end": 7925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7925,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7901,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7896,
											"end": 7899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7889,
											"end": 7926,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8160,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 7938,
											"end": 8160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8071,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8058,
											"end": 8067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8072,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8046,
											"end": 8072,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8046,
											"end": 8072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 8150,
											"end": 8151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8148,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8135,
											"end": 8152,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8132,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 8082,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8153,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 8082,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8160,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8160,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8166,
											"end": 8640,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 8166,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8234,
											"end": 8240,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8242,
											"end": 8248,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8291,
											"end": 8293,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8279,
											"end": 8288,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8270,
											"end": 8277,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8266,
											"end": 8289,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8262,
											"end": 8294,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8378,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 8259,
											"end": 8378,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8297,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 8297,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8297,
											"end": 8376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8297,
											"end": 8376,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 8297,
											"end": 8376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8378,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 8259,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8487,
											"end": 8494,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8478,
											"end": 8484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8467,
											"end": 8476,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8463,
											"end": 8485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 8442,
											"end": 8495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8495,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8442,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8432,
											"end": 8495,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8432,
											"end": 8495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8388,
											"end": 8505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8544,
											"end": 8546,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8570,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8615,
											"end": 8622,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8595,
											"end": 8604,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8591,
											"end": 8613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 8570,
											"end": 8623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8623,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8570,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8560,
											"end": 8623,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8560,
											"end": 8623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8166,
											"end": 8640,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8166,
											"end": 8640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8166,
											"end": 8640,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8166,
											"end": 8640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8166,
											"end": 8640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8166,
											"end": 8640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8826,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 8646,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8694,
											"end": 8771,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8691,
											"end": 8692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8772,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8791,
											"end": 8795,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8788,
											"end": 8789,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8781,
											"end": 8796,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8815,
											"end": 8819,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8812,
											"end": 8813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8805,
											"end": 8820,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 9152,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 8832,
											"end": 9152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8876,
											"end": 8882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8914,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8907,
											"end": 8911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8915,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8893,
											"end": 8915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8893,
											"end": 8915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8961,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8954,
											"end": 8958,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8950,
											"end": 8962,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 8999,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8971,
											"end": 9052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8971,
											"end": 9052,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9037,
											"end": 9041,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 9029,
											"end": 9035,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9025,
											"end": 9042,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9042,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8971,
											"end": 9052,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8971,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9099,
											"end": 9101,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9091,
											"end": 9097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9088,
											"end": 9102,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9068,
											"end": 9086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9103,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9062,
											"end": 9146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 9062,
											"end": 9146,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 9118,
											"end": 9136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9062,
											"end": 9146,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 9062,
											"end": 9146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8883,
											"end": 9152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 9152,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 9152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 9152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 9152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9158,
											"end": 9299,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 9158,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9207,
											"end": 9211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9230,
											"end": 9233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9222,
											"end": 9233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9222,
											"end": 9233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9250,
											"end": 9251,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9243,
											"end": 9257,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9287,
											"end": 9291,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9284,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9274,
											"end": 9292,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9266,
											"end": 9292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9266,
											"end": 9292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9158,
											"end": 9299,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9158,
											"end": 9299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9158,
											"end": 9299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9158,
											"end": 9299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9398,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 9305,
											"end": 9398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9342,
											"end": 9348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9389,
											"end": 9391,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9384,
											"end": 9386,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9377,
											"end": 9382,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9373,
											"end": 9387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9369,
											"end": 9392,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9359,
											"end": 9392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9359,
											"end": 9392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9398,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9404,
											"end": 9511,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 9404,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9448,
											"end": 9456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9498,
											"end": 9503,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9492,
											"end": 9496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9488,
											"end": 9504,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 9467,
											"end": 9504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9467,
											"end": 9504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9404,
											"end": 9511,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9404,
											"end": 9511,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9404,
											"end": 9511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9404,
											"end": 9511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9404,
											"end": 9511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9517,
											"end": 9910,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 9517,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9586,
											"end": 9592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9636,
											"end": 9637,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 9624,
											"end": 9634,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9659,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 9689,
											"end": 9755,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9678,
											"end": 9687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9659,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 9659,
											"end": 9756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9659,
											"end": 9756,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 9659,
											"end": 9756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9777,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9807,
											"end": 9815,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9796,
											"end": 9805,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9777,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 9777,
											"end": 9816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9777,
											"end": 9816,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9777,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9816,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9849,
											"end": 9853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9845,
											"end": 9854,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9838,
											"end": 9843,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9834,
											"end": 9855,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 9855,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 9855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 9902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9896,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9884,
											"end": 9903,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9877,
											"end": 9882,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9874,
											"end": 9904,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9864,
											"end": 9904,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9864,
											"end": 9904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9593,
											"end": 9910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9593,
											"end": 9910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9517,
											"end": 9910,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9517,
											"end": 9910,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9517,
											"end": 9910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9517,
											"end": 9910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9517,
											"end": 9910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9517,
											"end": 9910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9916,
											"end": 9976,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 9916,
											"end": 9976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9944,
											"end": 9947,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 9970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 9970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 9970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9916,
											"end": 9976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9916,
											"end": 9976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9916,
											"end": 9976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9916,
											"end": 9976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9982,
											"end": 10124,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 9982,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10032,
											"end": 10041,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10065,
											"end": 10118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 10083,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 10092,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 10092,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10116,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 10092,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10083,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 10083,
											"end": 10117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10083,
											"end": 10117,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 10083,
											"end": 10117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10065,
											"end": 10118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 10065,
											"end": 10118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10065,
											"end": 10118,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 10065,
											"end": 10118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10052,
											"end": 10118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10052,
											"end": 10118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9982,
											"end": 10124,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9982,
											"end": 10124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9982,
											"end": 10124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9982,
											"end": 10124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10130,
											"end": 10205,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 10130,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10173,
											"end": 10176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10194,
											"end": 10199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10187,
											"end": 10199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10187,
											"end": 10199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10130,
											"end": 10205,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10130,
											"end": 10205,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10130,
											"end": 10205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10130,
											"end": 10205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10211,
											"end": 10480,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 10211,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10321,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 10352,
											"end": 10359,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10321,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 10321,
											"end": 10360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10321,
											"end": 10360,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 10321,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10382,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 10431,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 10455,
											"end": 10471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10431,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 10431,
											"end": 10472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10431,
											"end": 10472,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 10431,
											"end": 10472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10423,
											"end": 10429,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10416,
											"end": 10420,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10410,
											"end": 10421,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10382,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 10382,
											"end": 10473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10382,
											"end": 10473,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 10382,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 10380,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10369,
											"end": 10474,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10287,
											"end": 10480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10211,
											"end": 10480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10211,
											"end": 10480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10211,
											"end": 10480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10211,
											"end": 10480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10486,
											"end": 10559,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 10486,
											"end": 10559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10531,
											"end": 10534,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10486,
											"end": 10559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10486,
											"end": 10559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10565,
											"end": 10754,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 10565,
											"end": 10754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 10642,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 10642,
											"end": 10674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 10674,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 10642,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10733,
											"end": 10739,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10727,
											"end": 10731,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 10683,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10748,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10683,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10565,
											"end": 10754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10565,
											"end": 10754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10565,
											"end": 10754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10760,
											"end": 10946,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 10760,
											"end": 10946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10940,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 10820,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10837,
											"end": 10840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10830,
											"end": 10835,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10827,
											"end": 10841,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10940,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 10820,
											"end": 10940,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10891,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 10928,
											"end": 10929,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10921,
											"end": 10926,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10891,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 10891,
											"end": 10930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10891,
											"end": 10930,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 10891,
											"end": 10930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 10865,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10857,
											"end": 10862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10853,
											"end": 10866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10844,
											"end": 10866,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10844,
											"end": 10866,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 10820,
											"end": 10940,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10940,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 10820,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10760,
											"end": 10946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10760,
											"end": 10946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10760,
											"end": 10946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10952,
											"end": 11495,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10952,
											"end": 11495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11053,
											"end": 11055,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11048,
											"end": 11051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11045,
											"end": 11056,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 11488,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 11042,
											"end": 11488,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11087,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 11119,
											"end": 11124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11087,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 11087,
											"end": 11125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11087,
											"end": 11125,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 11087,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11171,
											"end": 11200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 11189,
											"end": 11199,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11171,
											"end": 11200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 11171,
											"end": 11200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11171,
											"end": 11200,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 11171,
											"end": 11200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11161,
											"end": 11169,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11157,
											"end": 11201,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11354,
											"end": 11356,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11342,
											"end": 11352,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11357,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11336,
											"end": 11385,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11336,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11336,
											"end": 11385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11375,
											"end": 11383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11360,
											"end": 11383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11360,
											"end": 11383,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11336,
											"end": 11385,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11336,
											"end": 11385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11398,
											"end": 11478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11454,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11472,
											"end": 11475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11454,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 11454,
											"end": 11476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11454,
											"end": 11476,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11454,
											"end": 11476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11444,
											"end": 11452,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11440,
											"end": 11477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11427,
											"end": 11438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11398,
											"end": 11478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 11398,
											"end": 11478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11398,
											"end": 11478,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11398,
											"end": 11478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11057,
											"end": 11488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11057,
											"end": 11488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 11488,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 11042,
											"end": 11488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10952,
											"end": 11495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10952,
											"end": 11495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10952,
											"end": 11495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10952,
											"end": 11495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11618,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 11501,
											"end": 11618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11555,
											"end": 11563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11605,
											"end": 11610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11599,
											"end": 11603,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11595,
											"end": 11611,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 11574,
											"end": 11611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11574,
											"end": 11611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11618,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11618,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11624,
											"end": 11793,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 11624,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11668,
											"end": 11674,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11701,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11749,
											"end": 11750,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11745,
											"end": 11751,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 11737,
											"end": 11742,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11734,
											"end": 11735,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 11730,
											"end": 11743,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11701,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 11701,
											"end": 11752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11701,
											"end": 11752,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11701,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11697,
											"end": 11753,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 11782,
											"end": 11786,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11776,
											"end": 11780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11772,
											"end": 11787,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11787,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11675,
											"end": 11793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11624,
											"end": 11793,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11624,
											"end": 11793,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11624,
											"end": 11793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11624,
											"end": 11793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11624,
											"end": 11793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11798,
											"end": 12093,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 11798,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 11878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 12045,
											"end": 12048,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12039,
											"end": 12043,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12020,
											"end": 12049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 12020,
											"end": 12049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12020,
											"end": 12049,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 12020,
											"end": 12049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12082,
											"end": 12085,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12079,
											"end": 12080,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 12075,
											"end": 12086,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 12069,
											"end": 12073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12066,
											"end": 12087,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 12058,
											"end": 12087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12058,
											"end": 12087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11798,
											"end": 12093,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11798,
											"end": 12093,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11798,
											"end": 12093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11798,
											"end": 12093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11798,
											"end": 12093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12098,
											"end": 13493,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 12098,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12215,
											"end": 12252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 12248,
											"end": 12251,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12215,
											"end": 12252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 12215,
											"end": 12252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12215,
											"end": 12252,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 12215,
											"end": 12252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12317,
											"end": 12335,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12309,
											"end": 12315,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12306,
											"end": 12336,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12303,
											"end": 12359,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12303,
											"end": 12359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 12303,
											"end": 12359,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 12339,
											"end": 12357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 12339,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12303,
											"end": 12359,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 12303,
											"end": 12359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12383,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 12415,
											"end": 12419,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12409,
											"end": 12420,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12383,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 12383,
											"end": 12421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12383,
											"end": 12421,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 12383,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12468,
											"end": 12535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 12528,
											"end": 12534,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12520,
											"end": 12526,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12514,
											"end": 12518,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12468,
											"end": 12535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 12468,
											"end": 12535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12468,
											"end": 12535,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 12468,
											"end": 12535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12562,
											"end": 12563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12586,
											"end": 12590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12573,
											"end": 12590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12573,
											"end": 12590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12618,
											"end": 12620,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 12610,
											"end": 12616,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12607,
											"end": 12621,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 12636,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12630,
											"end": 13248,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12630,
											"end": 13248,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12630,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 12630,
											"end": 13248,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13292,
											"end": 13293,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13309,
											"end": 13315,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13306,
											"end": 13383,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13306,
											"end": 13383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 13306,
											"end": 13383,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13358,
											"end": 13367,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13353,
											"end": 13356,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 13349,
											"end": 13368,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13343,
											"end": 13369,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13334,
											"end": 13369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13334,
											"end": 13369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13306,
											"end": 13383,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 13306,
											"end": 13383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13409,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 13469,
											"end": 13475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13462,
											"end": 13467,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13409,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 13409,
											"end": 13476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13409,
											"end": 13476,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 13409,
											"end": 13476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13407,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13396,
											"end": 13477,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13265,
											"end": 13487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12600,
											"end": 13487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 12600,
											"end": 13487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12630,
											"end": 13248,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 12630,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12682,
											"end": 12686,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 12678,
											"end": 12687,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 12670,
											"end": 12676,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12666,
											"end": 12688,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12716,
											"end": 12753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 12748,
											"end": 12752,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12716,
											"end": 12753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 12716,
											"end": 12753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12716,
											"end": 12753,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 12716,
											"end": 12753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12775,
											"end": 12776,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12789,
											"end": 12997,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 12789,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12803,
											"end": 12810,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12800,
											"end": 12801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12797,
											"end": 12811,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12789,
											"end": 12997,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12789,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 12789,
											"end": 12997,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12882,
											"end": 12891,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12877,
											"end": 12880,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 12892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12867,
											"end": 12893,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12859,
											"end": 12865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12852,
											"end": 12894,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12933,
											"end": 12934,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12925,
											"end": 12931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12921,
											"end": 12935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12911,
											"end": 12935,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12911,
											"end": 12935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12980,
											"end": 12982,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12969,
											"end": 12978,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12965,
											"end": 12983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12952,
											"end": 12983,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 12952,
											"end": 12983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12826,
											"end": 12830,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12823,
											"end": 12824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12819,
											"end": 12831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12814,
											"end": 12831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12814,
											"end": 12831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12789,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 12789,
											"end": 12997,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12789,
											"end": 12997,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 12789,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13025,
											"end": 13031,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13016,
											"end": 13023,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13013,
											"end": 13032,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13010,
											"end": 13189,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13010,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 13010,
											"end": 13189,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13083,
											"end": 13092,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13078,
											"end": 13081,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 13074,
											"end": 13093,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13068,
											"end": 13094,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13126,
											"end": 13174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 13168,
											"end": 13172,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13160,
											"end": 13166,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 13156,
											"end": 13173,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13145,
											"end": 13154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13126,
											"end": 13174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 13126,
											"end": 13174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13126,
											"end": 13174,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 13126,
											"end": 13174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13118,
											"end": 13124,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13111,
											"end": 13175,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13033,
											"end": 13189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13010,
											"end": 13189,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 13010,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13235,
											"end": 13236,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13231,
											"end": 13232,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13223,
											"end": 13229,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 13219,
											"end": 13233,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 13215,
											"end": 13237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13209,
											"end": 13213,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 13202,
											"end": 13238,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12637,
											"end": 13248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12637,
											"end": 13248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12637,
											"end": 13248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12600,
											"end": 13487,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 12600,
											"end": 13487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12600,
											"end": 13487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12190,
											"end": 13493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12190,
											"end": 13493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12190,
											"end": 13493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12098,
											"end": 13493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12098,
											"end": 13493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12098,
											"end": 13493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13499,
											"end": 13674,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 13499,
											"end": 13674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13639,
											"end": 13666,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E277320746F6B656E7320617265206C6F636B656400000000000000"
										},
										{
											"begin": 13635,
											"end": 13636,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13627,
											"end": 13633,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13623,
											"end": 13637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13616,
											"end": 13667,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13499,
											"end": 13674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13499,
											"end": 13674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13680,
											"end": 14046,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 13680,
											"end": 14046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13822,
											"end": 13825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13843,
											"end": 13910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 13907,
											"end": 13909,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 13902,
											"end": 13905,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13843,
											"end": 13910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 13843,
											"end": 13910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13843,
											"end": 13910,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 13843,
											"end": 13910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13836,
											"end": 13910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13836,
											"end": 13910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13919,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 14008,
											"end": 14011,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13919,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 13919,
											"end": 14012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13919,
											"end": 14012,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 13919,
											"end": 14012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14037,
											"end": 14039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14032,
											"end": 14035,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14040,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14021,
											"end": 14040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14021,
											"end": 14040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13680,
											"end": 14046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13680,
											"end": 14046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13680,
											"end": 14046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13680,
											"end": 14046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14052,
											"end": 14471,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 14052,
											"end": 14471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14218,
											"end": 14222,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14256,
											"end": 14258,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14245,
											"end": 14254,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14241,
											"end": 14259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14233,
											"end": 14259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14233,
											"end": 14259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14305,
											"end": 14314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14299,
											"end": 14303,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14295,
											"end": 14315,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14291,
											"end": 14292,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14280,
											"end": 14289,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14276,
											"end": 14293,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14269,
											"end": 14316,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14333,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 14459,
											"end": 14463,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14333,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 14333,
											"end": 14464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14333,
											"end": 14464,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 14333,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14325,
											"end": 14464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14325,
											"end": 14464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14052,
											"end": 14471,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14052,
											"end": 14471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14052,
											"end": 14471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14052,
											"end": 14471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14477,
											"end": 14644,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 14477,
											"end": 14644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14617,
											"end": 14636,
											"name": "PUSH",
											"source": 7,
											"value": "546F6B656E7320617265206C6F636B6564000000000000000000000000000000"
										},
										{
											"begin": 14613,
											"end": 14614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14605,
											"end": 14611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14601,
											"end": 14615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14594,
											"end": 14637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14477,
											"end": 14644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14477,
											"end": 14644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14650,
											"end": 15016,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 14650,
											"end": 15016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14792,
											"end": 14795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14813,
											"end": 14880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 14877,
											"end": 14879,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 14872,
											"end": 14875,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14813,
											"end": 14880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 14813,
											"end": 14880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14813,
											"end": 14880,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 14813,
											"end": 14880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14806,
											"end": 14880,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14806,
											"end": 14880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14889,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 14978,
											"end": 14981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14889,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 14889,
											"end": 14982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14889,
											"end": 14982,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 14889,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15007,
											"end": 15009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15002,
											"end": 15005,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14998,
											"end": 15010,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14991,
											"end": 15010,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14991,
											"end": 15010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14650,
											"end": 15016,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14650,
											"end": 15016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14650,
											"end": 15016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14650,
											"end": 15016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15022,
											"end": 15441,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 15022,
											"end": 15441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15188,
											"end": 15192,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15226,
											"end": 15228,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15215,
											"end": 15224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15211,
											"end": 15229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15203,
											"end": 15229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15203,
											"end": 15229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15275,
											"end": 15284,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15269,
											"end": 15273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15265,
											"end": 15285,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15261,
											"end": 15262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15250,
											"end": 15259,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15246,
											"end": 15263,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15239,
											"end": 15286,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15303,
											"end": 15434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 15429,
											"end": 15433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15303,
											"end": 15434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 15303,
											"end": 15434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15303,
											"end": 15434,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 15303,
											"end": 15434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15295,
											"end": 15434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15295,
											"end": 15434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15022,
											"end": 15441,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15022,
											"end": 15441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15022,
											"end": 15441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15022,
											"end": 15441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15447,
											"end": 15627,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 15447,
											"end": 15627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15495,
											"end": 15572,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15492,
											"end": 15493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15485,
											"end": 15573,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15592,
											"end": 15596,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 15589,
											"end": 15590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15582,
											"end": 15597,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15616,
											"end": 15620,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15613,
											"end": 15614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15606,
											"end": 15621,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15633,
											"end": 15824,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 15633,
											"end": 15824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15673,
											"end": 15676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15692,
											"end": 15712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 15710,
											"end": 15711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15692,
											"end": 15712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 15692,
											"end": 15712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15692,
											"end": 15712,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 15692,
											"end": 15712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15687,
											"end": 15712,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15687,
											"end": 15712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15726,
											"end": 15746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 15744,
											"end": 15745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15726,
											"end": 15746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 15726,
											"end": 15746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15726,
											"end": 15746,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 15726,
											"end": 15746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15721,
											"end": 15746,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15721,
											"end": 15746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15769,
											"end": 15770,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15766,
											"end": 15767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15762,
											"end": 15771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15755,
											"end": 15771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15755,
											"end": 15771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15790,
											"end": 15793,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15787,
											"end": 15788,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15784,
											"end": 15794,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15781,
											"end": 15817,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15781,
											"end": 15817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 15781,
											"end": 15817,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 15797,
											"end": 15815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15781,
											"end": 15817,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 15781,
											"end": 15817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15633,
											"end": 15824,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15633,
											"end": 15824,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15633,
											"end": 15824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15633,
											"end": 15824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15633,
											"end": 15824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 16240,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 15830,
											"end": 16240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15870,
											"end": 15877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15893,
											"end": 15913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 15911,
											"end": 15912,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15893,
											"end": 15913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 15893,
											"end": 15913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15893,
											"end": 15913,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 15893,
											"end": 15913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15888,
											"end": 15913,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15888,
											"end": 15913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15927,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 15945,
											"end": 15946,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15927,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 15927,
											"end": 15947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15927,
											"end": 15947,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 15927,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15922,
											"end": 15947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15982,
											"end": 15983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15979,
											"end": 15980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15975,
											"end": 15984,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16004,
											"end": 16034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 16022,
											"end": 16033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16004,
											"end": 16034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 16004,
											"end": 16034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16004,
											"end": 16034,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 16004,
											"end": 16034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15993,
											"end": 16034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15993,
											"end": 16034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16183,
											"end": 16184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16174,
											"end": 16181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16170,
											"end": 16185,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 16167,
											"end": 16168,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16164,
											"end": 16186,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 16144,
											"end": 16145,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16146,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16117,
											"end": 16200,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 16094,
											"end": 16233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 16094,
											"end": 16233,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16213,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 16213,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 16213,
											"end": 16231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16213,
											"end": 16231,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 16213,
											"end": 16231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16094,
											"end": 16233,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 16094,
											"end": 16233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15878,
											"end": 16240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 16240,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 16240,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 16240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 16240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 16240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16246,
											"end": 16426,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 16246,
											"end": 16426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16294,
											"end": 16371,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16291,
											"end": 16292,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16284,
											"end": 16372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16391,
											"end": 16395,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 16388,
											"end": 16389,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16381,
											"end": 16396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16415,
											"end": 16419,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16412,
											"end": 16413,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16405,
											"end": 16420,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 16432,
											"end": 16617,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 16432,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16472,
											"end": 16473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16489,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 16507,
											"end": 16508,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16489,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 16489,
											"end": 16509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16489,
											"end": 16509,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 16489,
											"end": 16509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16484,
											"end": 16509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16484,
											"end": 16509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16523,
											"end": 16543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 16541,
											"end": 16542,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16523,
											"end": 16543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 16523,
											"end": 16543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16523,
											"end": 16543,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 16523,
											"end": 16543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16518,
											"end": 16543,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16518,
											"end": 16543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16562,
											"end": 16563,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16552,
											"end": 16587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 16552,
											"end": 16587,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16567,
											"end": 16585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 16567,
											"end": 16585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 16567,
											"end": 16585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16567,
											"end": 16585,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 16567,
											"end": 16585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16552,
											"end": 16587,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 16552,
											"end": 16587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16609,
											"end": 16610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16606,
											"end": 16607,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16602,
											"end": 16611,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 16597,
											"end": 16611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16597,
											"end": 16611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16432,
											"end": 16617,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16432,
											"end": 16617,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16432,
											"end": 16617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16432,
											"end": 16617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16432,
											"end": 16617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16623,
											"end": 16860,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 16623,
											"end": 16860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16763,
											"end": 16797,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E657273686970206361707065642061742032302520746F20656E737572"
										},
										{
											"begin": 16759,
											"end": 16760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16751,
											"end": 16757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16747,
											"end": 16761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16740,
											"end": 16798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 16852,
											"name": "PUSH",
											"source": 7,
											"value": "6520646563656E7472616C697A6174696F6E0000000000000000000000000000"
										},
										{
											"begin": 16827,
											"end": 16829,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16819,
											"end": 16825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16808,
											"end": 16853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16623,
											"end": 16860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16623,
											"end": 16860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16866,
											"end": 17232,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 16866,
											"end": 17232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17008,
											"end": 17011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17029,
											"end": 17096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 17093,
											"end": 17095,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 17088,
											"end": 17091,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17029,
											"end": 17096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 17029,
											"end": 17096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17029,
											"end": 17096,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 17029,
											"end": 17096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17022,
											"end": 17096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17022,
											"end": 17096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17105,
											"end": 17198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 17194,
											"end": 17197,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17105,
											"end": 17198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 17105,
											"end": 17198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17105,
											"end": 17198,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 17105,
											"end": 17198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17225,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17218,
											"end": 17221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17214,
											"end": 17226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17207,
											"end": 17226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17207,
											"end": 17226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16866,
											"end": 17232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16866,
											"end": 17232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16866,
											"end": 17232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16866,
											"end": 17232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17238,
											"end": 17657,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 17238,
											"end": 17657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17404,
											"end": 17408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17442,
											"end": 17444,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17440,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17427,
											"end": 17445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17419,
											"end": 17445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17419,
											"end": 17445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17491,
											"end": 17500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17485,
											"end": 17489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17481,
											"end": 17501,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17477,
											"end": 17478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17466,
											"end": 17475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17462,
											"end": 17479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17455,
											"end": 17502,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17519,
											"end": 17650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 17645,
											"end": 17649,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17519,
											"end": 17650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 17519,
											"end": 17650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17519,
											"end": 17650,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 17519,
											"end": 17650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17511,
											"end": 17650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17511,
											"end": 17650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17238,
											"end": 17657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17238,
											"end": 17657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17238,
											"end": 17657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17238,
											"end": 17657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17663,
											"end": 17887,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 17663,
											"end": 17887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17803,
											"end": 17837,
											"name": "PUSH",
											"source": 7,
											"value": "61646D696E277320746F6B656E7320617265206C6F636B656420666F7220616E"
										},
										{
											"begin": 17799,
											"end": 17800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17791,
											"end": 17797,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17787,
											"end": 17801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17780,
											"end": 17838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17872,
											"end": 17879,
											"name": "PUSH",
											"source": 7,
											"value": "2079656172000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17867,
											"end": 17869,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17859,
											"end": 17865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17855,
											"end": 17870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17848,
											"end": 17880,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17663,
											"end": 17887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17663,
											"end": 17887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17893,
											"end": 18259,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 17893,
											"end": 18259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18035,
											"end": 18038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18056,
											"end": 18123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 18120,
											"end": 18122,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 18115,
											"end": 18118,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18056,
											"end": 18123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 18056,
											"end": 18123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18056,
											"end": 18123,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 18056,
											"end": 18123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18049,
											"end": 18123,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18049,
											"end": 18123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18132,
											"end": 18225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 18221,
											"end": 18224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18132,
											"end": 18225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 18132,
											"end": 18225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18132,
											"end": 18225,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 18132,
											"end": 18225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18250,
											"end": 18252,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 18245,
											"end": 18248,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18241,
											"end": 18253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18234,
											"end": 18253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18234,
											"end": 18253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17893,
											"end": 18259,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17893,
											"end": 18259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17893,
											"end": 18259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17893,
											"end": 18259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18265,
											"end": 18684,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 18265,
											"end": 18684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18431,
											"end": 18435,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18469,
											"end": 18471,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18458,
											"end": 18467,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18454,
											"end": 18472,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18446,
											"end": 18472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18446,
											"end": 18472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18518,
											"end": 18527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18512,
											"end": 18516,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18508,
											"end": 18528,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18504,
											"end": 18505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18493,
											"end": 18502,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18489,
											"end": 18506,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18482,
											"end": 18529,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18546,
											"end": 18677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 18672,
											"end": 18676,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18546,
											"end": 18677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 18546,
											"end": 18677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18546,
											"end": 18677,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 18546,
											"end": 18677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18538,
											"end": 18677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18538,
											"end": 18677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18265,
											"end": 18684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18265,
											"end": 18684,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18265,
											"end": 18684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18265,
											"end": 18684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18690,
											"end": 18856,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 18690,
											"end": 18856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18830,
											"end": 18848,
											"name": "PUSH",
											"source": 7,
											"value": "6E6F7420666F722073616C652079657400000000000000000000000000000000"
										},
										{
											"begin": 18826,
											"end": 18827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18818,
											"end": 18824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18814,
											"end": 18828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18807,
											"end": 18849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18690,
											"end": 18856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18690,
											"end": 18856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18862,
											"end": 19228,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 18862,
											"end": 19228,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19004,
											"end": 19007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19025,
											"end": 19092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 19089,
											"end": 19091,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 19084,
											"end": 19087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19025,
											"end": 19092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 19025,
											"end": 19092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19025,
											"end": 19092,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 19025,
											"end": 19092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19018,
											"end": 19092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19018,
											"end": 19092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19101,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 19190,
											"end": 19193,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19101,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 19101,
											"end": 19194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19101,
											"end": 19194,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 19101,
											"end": 19194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19219,
											"end": 19221,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19214,
											"end": 19217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19210,
											"end": 19222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19203,
											"end": 19222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19203,
											"end": 19222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18862,
											"end": 19228,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18862,
											"end": 19228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18862,
											"end": 19228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18862,
											"end": 19228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19234,
											"end": 19653,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 19234,
											"end": 19653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19400,
											"end": 19404,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19438,
											"end": 19440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19427,
											"end": 19436,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19423,
											"end": 19441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19415,
											"end": 19441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19415,
											"end": 19441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19487,
											"end": 19496,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19481,
											"end": 19485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19477,
											"end": 19497,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19473,
											"end": 19474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19462,
											"end": 19471,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19458,
											"end": 19475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19451,
											"end": 19498,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19515,
											"end": 19646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 19641,
											"end": 19645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19515,
											"end": 19646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 19515,
											"end": 19646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19515,
											"end": 19646,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 19515,
											"end": 19646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19507,
											"end": 19646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19507,
											"end": 19646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19234,
											"end": 19653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19234,
											"end": 19653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19234,
											"end": 19653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19234,
											"end": 19653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19683,
											"end": 20514,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 19683,
											"end": 20514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19768,
											"end": 19771,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19805,
											"end": 19810,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19799,
											"end": 19811,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19834,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 19860,
											"end": 19869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19834,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 19834,
											"end": 19870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19834,
											"end": 19870,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 19834,
											"end": 19870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19886,
											"end": 19957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 19950,
											"end": 19956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19945,
											"end": 19948,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19886,
											"end": 19957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 19886,
											"end": 19957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19886,
											"end": 19957,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 19886,
											"end": 19957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19879,
											"end": 19957,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 19879,
											"end": 19957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19988,
											"end": 19989,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 19977,
											"end": 19986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19973,
											"end": 19990,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20004,
											"end": 20005,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19999,
											"end": 20163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19999,
											"end": 20163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 19999,
											"end": 20163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 19999,
											"end": 20163,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20177,
											"end": 20178,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 20172,
											"end": 20508,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20172,
											"end": 20508,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 20172,
											"end": 20508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 20172,
											"end": 20508,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19966,
											"end": 20508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 19966,
											"end": 20508,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19999,
											"end": 20163,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 19999,
											"end": 20163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20083,
											"end": 20087,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 20079,
											"end": 20088,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 20068,
											"end": 20077,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20064,
											"end": 20089,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20059,
											"end": 20062,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20052,
											"end": 20090,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20143,
											"end": 20149,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20136,
											"end": 20150,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20129,
											"end": 20151,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20123,
											"end": 20127,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20119,
											"end": 20152,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 20114,
											"end": 20117,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20110,
											"end": 20153,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20103,
											"end": 20153,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 20103,
											"end": 20153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19999,
											"end": 20163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 19999,
											"end": 20163,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20172,
											"end": 20508,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 20172,
											"end": 20508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20239,
											"end": 20277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 20271,
											"end": 20276,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20239,
											"end": 20277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 20239,
											"end": 20277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20239,
											"end": 20277,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 20239,
											"end": 20277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20299,
											"end": 20300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20313,
											"end": 20467,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 20313,
											"end": 20467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20327,
											"end": 20333,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20324,
											"end": 20325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20321,
											"end": 20334,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 20313,
											"end": 20467,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20313,
											"end": 20467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 20313,
											"end": 20467,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20401,
											"end": 20408,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20395,
											"end": 20409,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 20391,
											"end": 20392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20386,
											"end": 20389,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 20382,
											"end": 20393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20375,
											"end": 20410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20451,
											"end": 20452,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 20442,
											"end": 20449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20438,
											"end": 20453,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20427,
											"end": 20453,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20427,
											"end": 20453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20349,
											"end": 20353,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20346,
											"end": 20347,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20342,
											"end": 20354,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20337,
											"end": 20354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20337,
											"end": 20354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20313,
											"end": 20467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 20313,
											"end": 20467,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20313,
											"end": 20467,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 20313,
											"end": 20467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20496,
											"end": 20497,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 20491,
											"end": 20494,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 20487,
											"end": 20498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20480,
											"end": 20498,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 20480,
											"end": 20498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20179,
											"end": 20508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20179,
											"end": 20508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19966,
											"end": 20508,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 19966,
											"end": 20508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19966,
											"end": 20508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19772,
											"end": 20514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19772,
											"end": 20514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19683,
											"end": 20514,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19683,
											"end": 20514,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19683,
											"end": 20514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19683,
											"end": 20514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19683,
											"end": 20514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20520,
											"end": 21158,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 20520,
											"end": 21158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20714,
											"end": 20718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20752,
											"end": 20755,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 20741,
											"end": 20750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20737,
											"end": 20756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20729,
											"end": 20756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20729,
											"end": 20756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20766,
											"end": 20837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 20834,
											"end": 20835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20823,
											"end": 20832,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20819,
											"end": 20836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20810,
											"end": 20816,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 20766,
											"end": 20837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 20766,
											"end": 20837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20766,
											"end": 20837,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 20766,
											"end": 20837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20847,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 20915,
											"end": 20917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20904,
											"end": 20913,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20900,
											"end": 20918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20891,
											"end": 20897,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20847,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 20847,
											"end": 20919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20847,
											"end": 20919,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 20847,
											"end": 20919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20929,
											"end": 21001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 20997,
											"end": 20999,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20986,
											"end": 20995,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20982,
											"end": 21000,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20973,
											"end": 20979,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20929,
											"end": 21001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 20929,
											"end": 21001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20929,
											"end": 21001,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 20929,
											"end": 21001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21048,
											"end": 21057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21042,
											"end": 21046,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21038,
											"end": 21058,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 21033,
											"end": 21035,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 21022,
											"end": 21031,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21018,
											"end": 21036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21011,
											"end": 21059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21076,
											"end": 21151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 21146,
											"end": 21150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21137,
											"end": 21143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21076,
											"end": 21151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 21076,
											"end": 21151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21076,
											"end": 21151,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 21076,
											"end": 21151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21068,
											"end": 21151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21068,
											"end": 21151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20520,
											"end": 21158,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 20520,
											"end": 21158,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 20520,
											"end": 21158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20520,
											"end": 21158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20520,
											"end": 21158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20520,
											"end": 21158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20520,
											"end": 21158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20520,
											"end": 21158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21164,
											"end": 21606,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 21164,
											"end": 21606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21313,
											"end": 21317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21351,
											"end": 21353,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 21340,
											"end": 21349,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21336,
											"end": 21354,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21328,
											"end": 21354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21328,
											"end": 21354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21364,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 21432,
											"end": 21433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21421,
											"end": 21430,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21417,
											"end": 21434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21408,
											"end": 21414,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 21364,
											"end": 21435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 21364,
											"end": 21435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21364,
											"end": 21435,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 21364,
											"end": 21435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21445,
											"end": 21517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 21513,
											"end": 21515,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21502,
											"end": 21511,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21498,
											"end": 21516,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21489,
											"end": 21495,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 21445,
											"end": 21517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 21445,
											"end": 21517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21445,
											"end": 21517,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 21445,
											"end": 21517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21527,
											"end": 21599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 21595,
											"end": 21597,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21584,
											"end": 21593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21580,
											"end": 21598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21571,
											"end": 21577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21527,
											"end": 21599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 21527,
											"end": 21599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21527,
											"end": 21599,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 21527,
											"end": 21599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21164,
											"end": 21606,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 21164,
											"end": 21606,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 21164,
											"end": 21606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21164,
											"end": 21606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21164,
											"end": 21606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21164,
											"end": 21606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21164,
											"end": 21606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"userfrontend/contracts/ERC20subscription.sol",
								"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol",
								"userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ForceBurn(address,uint256)": "ae84827a",
							"ForceMint(address,uint256)": "b93a5396",
							"_adminLockTime()": "9f3adb0e",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getDocumentURI()": "bd7dac92",
							"getLockTime()": "c0a4d64d",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setDocumentURI(string)": "0de65a44",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"__totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"subscribers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"__lockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"TransferWithSymbol\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_useraddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ForceBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_useraddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ForceMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_adminLockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDocumentURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"__documentURI\",\"type\":\"string\"}],\"name\":\"setDocumentURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"userfrontend/contracts/ERC20subscription.sol\":\"ERC20subscription\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"userfrontend/contracts/ERC20subscription.sol\":{\"keccak256\":\"0x7f8cbb3b3560d024efa6a8225684ea2d8cf3af4d38b9d85806f9d776f3f084eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96c0da45156c7773fe02355e8105eb27d3fc3c9ad9f3f7dfcf1c2da5633b9456\",\"dweb:/ipfs/QmdvBwUrjwNb8GNAMy5f7BQv2LpvvyuTZBZonMDZJsSUsm\"]},\"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 652,
								"contract": "userfrontend/contracts/ERC20subscription.sol:ERC20subscription",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 658,
								"contract": "userfrontend/contracts/ERC20subscription.sol:ERC20subscription",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 660,
								"contract": "userfrontend/contracts/ERC20subscription.sol:ERC20subscription",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 662,
								"contract": "userfrontend/contracts/ERC20subscription.sol:ERC20subscription",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 664,
								"contract": "userfrontend/contracts/ERC20subscription.sol:ERC20subscription",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 353,
								"contract": "userfrontend/contracts/ERC20subscription.sol:ERC20subscription",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "userfrontend/contracts/ERC20subscription.sol:ERC20subscription",
								"label": "_totalMinted",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 11,
								"contract": "userfrontend/contracts/ERC20subscription.sol:ERC20subscription",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 13,
								"contract": "userfrontend/contracts/ERC20subscription.sol:ERC20subscription",
								"label": "_lockTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 15,
								"contract": "userfrontend/contracts/ERC20subscription.sol:ERC20subscription",
								"label": "_adminLockTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 17,
								"contract": "userfrontend/contracts/ERC20subscription.sol:ERC20subscription",
								"label": "_documentURI",
								"offset": 0,
								"slot": "10",
								"type": "t_string_storage"
							},
							{
								"astId": 19,
								"contract": "userfrontend/contracts/ERC20subscription.sol:ERC20subscription",
								"label": "_tokenSymbol",
								"offset": 0,
								"slot": "11",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 353,
								"contract": "userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 652,
								"contract": "userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 658,
								"contract": "userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 660,
								"contract": "userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 662,
								"contract": "userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 664,
								"contract": "userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"userfrontend/contracts/ERC20subscription.sol": {
				"ast": {
					"absolutePath": "userfrontend/contracts/ERC20subscription.sol",
					"exportedSymbols": {
						"Context": [
							1270
						],
						"ERC20": [
							1144
						],
						"ERC20subscription": [
							344
						],
						"IERC20": [
							1222
						],
						"IERC20Errors": [
							534
						],
						"IERC20Metadata": [
							1248
						],
						"Ownable": [
							492
						]
					},
					"id": 345,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 345,
							"sourceUnit": 493,
							"src": "61:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 345,
							"sourceUnit": 1145,
							"src": "131:71:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC20",
										"nameLocations": [
											"236:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1144,
										"src": "236:5:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "236:5:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "Ownable",
										"nameLocations": [
											"243:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 492,
										"src": "243:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "243:7:0"
								}
							],
							"canonicalName": "ERC20subscription",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 344,
							"linearizedBaseContracts": [
								344,
								492,
								1144,
								534,
								1248,
								1222,
								1270
							],
							"name": "ERC20subscription",
							"nameLocation": "215:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "_totalMinted",
									"nameLocation": "274:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 344,
									"src": "258:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "258:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "309:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 344,
									"src": "293:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "293:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "_lockTime",
									"nameLocation": "344:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 344,
									"src": "328:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9f3adb0e",
									"id": 15,
									"mutability": "mutable",
									"name": "_adminLockTime",
									"nameLocation": "375:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 344,
									"src": "360:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "360:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "_documentURI",
									"nameLocation": "411:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 344,
									"src": "396:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 16,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "396:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "_tokenSymbol",
									"nameLocation": "445:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 344,
									"src": "430:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 18,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "430:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "491:284:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 21,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "506:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "510:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "506:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 23,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "520:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "520:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "506:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 35,
												"nodeType": "IfStatement",
												"src": "502:186:0",
												"trueBody": {
													"id": 34,
													"nodeType": "Block",
													"src": "529:159:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 27,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "570:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 28,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "576:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "570:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 29,
																			"name": "_adminLockTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "589:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "570:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "61646d696e277320746f6b656e7320617265206c6f636b656420666f7220616e2079656172",
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "622:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e",
																			"typeString": "literal_string \"admin's tokens are locked for an year\""
																		},
																		"value": "admin's tokens are locked for an year"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_053e5ec8a243f38bff220091d3335882f47603686cd757556a90ce59acc1710e",
																			"typeString": "literal_string \"admin's tokens are locked for an year\""
																		}
																	],
																	"id": 26,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "544:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "544:132:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 33,
															"nodeType": "ExpressionStatement",
															"src": "544:132:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 37,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "706:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "712:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "706:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 39,
																"name": "_lockTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "725:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "706:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420666f722073616c6520796574",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "736:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a",
																"typeString": "literal_string \"not for sale yet\""
															},
															"value": "not for sale yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6073505e8746b653ef8bb8dfe1d4d94b78c08031166897aeb1c7eade05655f5a",
																"typeString": "literal_string \"not for sale yet\""
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "698:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "698:57:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "766:1:0"
											}
										]
									},
									"id": 46,
									"name": "lockTimeCheck",
									"nameLocation": "475:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "488:2:0"
									},
									"src": "466:309:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1168:648:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 73,
																	"name": "subscribers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "1187:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1199:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1187:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 75,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "1209:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1217:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1209:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1187:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "737562736372696265727320616e6420746865697220616d6f756e747320646f206e6f74206d61746368",
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1225:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f",
																"typeString": "literal_string \"subscribers and their amounts do not match\""
															},
															"value": "subscribers and their amounts do not match"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_354fe7080e4cb32c075fc70677bb4f2b6ffa79d455b05cd3ab6024ecdf5c9a3f",
																"typeString": "literal_string \"subscribers and their amounts do not match\""
															}
														],
														"id": 72,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1179:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1179:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "1179:91:0"
											},
											{
												"expression": {
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 81,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1281:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 82,
														"name": "__totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1296:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1281:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1281:28:0"
											},
											{
												"expression": {
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "_lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1320:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 86,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1332:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1338:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1332:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 88,
															"name": "__lockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1350:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1332:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1320:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1320:40:0"
											},
											{
												"body": {
													"id": 128,
													"nodeType": "Block",
													"src": "1422:166:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 104,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 60,
																					"src": "1445:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 106,
																				"indexExpression": {
																					"id": 105,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 93,
																					"src": "1453:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1445:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 107,
																				"name": "_totalMinted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "1458:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1445:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 109,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "1474:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1445:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 103,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1437:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1437:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 112,
															"nodeType": "ExpressionStatement",
															"src": "1437:50:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 114,
																			"name": "subscribers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 57,
																			"src": "1508:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 116,
																		"indexExpression": {
																			"id": 115,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "1520:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1508:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 117,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 60,
																			"src": "1524:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 119,
																		"indexExpression": {
																			"id": 118,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "1532:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1524:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 113,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "1502:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1502:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 121,
															"nodeType": "ExpressionStatement",
															"src": "1502:33:0"
														},
														{
															"expression": {
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 122,
																	"name": "_totalMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1550:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 123,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "1566:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 125,
																	"indexExpression": {
																		"id": 124,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 93,
																		"src": "1574:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1566:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1550:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "1550:26:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 96,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1393:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 97,
															"name": "subscribers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "1397:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1409:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1393:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"initializationExpression": {
													"assignments": [
														93
													],
													"declarations": [
														{
															"constant": false,
															"id": 93,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1386:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 129,
															"src": "1378:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 92,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1378:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 95,
													"initialValue": {
														"hexValue": "30",
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1390:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1378:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1417:3:0",
														"subExpression": {
															"id": 100,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1417:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 102,
													"nodeType": "ExpressionStatement",
													"src": "1417:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1373:215:0"
											},
											{
												"assignments": [
													131
												],
												"declarations": [
													{
														"constant": false,
														"id": 131,
														"mutability": "mutable",
														"name": "remainedTokens",
														"nameLocation": "1608:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "1600:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1600:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 132,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1625:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 133,
														"name": "_totalMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1640:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1625:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1600:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 136,
														"name": "remainedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1667:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1684:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1667:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"nodeType": "IfStatement",
												"src": "1663:146:0",
												"trueBody": {
													"id": 151,
													"nodeType": "Block",
													"src": "1687:122:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 140,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "1708:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 141,
																		"name": "remainedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 131,
																		"src": "1716:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 139,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "1702:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1702:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 143,
															"nodeType": "ExpressionStatement",
															"src": "1702:29:0"
														},
														{
															"expression": {
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 144,
																	"name": "_adminLockTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1746:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 145,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1763:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1769:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1763:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3331353336303030",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1781:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31536000_by_1",
																			"typeString": "int_const 31536000"
																		},
																		"value": "31536000"
																	},
																	"src": "1763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1746:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 150,
															"nodeType": "ExpressionStatement",
															"src": "1746:43:0"
														}
													]
												}
											}
										]
									},
									"id": 154,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 65,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 50,
													"src": "1138:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 66,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 52,
													"src": "1144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 67,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 64,
												"name": "ERC20",
												"nameLocations": [
													"1132:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1144,
												"src": "1132:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1132:20:0"
										},
										{
											"arguments": [
												{
													"id": 69,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 48,
													"src": "1161:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 70,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 68,
												"name": "Ownable",
												"nameLocations": [
													"1153:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 492,
												"src": "1153:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1153:15:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "920:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "912:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "951:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "937:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "937:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "981:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "967:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "967:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "__totalSupply",
												"nameLocation": "1007:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "999:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "subscribers",
												"nameLocation": "1048:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1031:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 55,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1031:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 56,
													"nodeType": "ArrayTypeName",
													"src": "1031:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1087:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1070:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 58,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1070:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 59,
													"nodeType": "ArrayTypeName",
													"src": "1070:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "__lockTime",
												"nameLocation": "1113:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1105:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:229:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1168:0:0"
									},
									"scope": 344,
									"src": "890:926:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8519cdb8ad47f1f5f5bc583d2063d1fc1ffed7dac0cab9e8b1f6492aa60cbd7f",
									"id": 164,
									"name": "TransferWithSymbol",
									"nameLocation": "1830:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1867:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1859:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1859:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1890:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1882:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1911:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1903:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": false,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1934:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1927:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 161,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1927:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1848:99:0"
									},
									"src": "1824:124:0"
								},
								{
									"baseFunctions": [
										708
									],
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "2013:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2031:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 169,
												"id": 171,
												"nodeType": "Return",
												"src": "2024:8:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1965:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 166,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1988:8:0"
									},
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1973:2:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2006:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 167,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2006:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2005:7:0"
									},
									"scope": 344,
									"src": "1956:84:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2164:342:0",
										"statements": [
											{
												"assignments": [
													186
												],
												"declarations": [
													{
														"constant": false,
														"id": 186,
														"mutability": "mutable",
														"name": "newTotalBalance",
														"nameLocation": "2183:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2175:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 185,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2175:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 192,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 188,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "2211:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 187,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "2201:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2201:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 190,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "2217:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2201:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2175:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "newTotalBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "2256:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3230",
																				"id": 195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2275:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_20_by_1",
																					"typeString": "int_const 20"
																				},
																				"value": "20"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 196,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 717,
																					"src": "2280:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2280:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2275:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 199,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2274:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2297:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2274:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2256:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e657273686970206361707065642061742032302520746f20656e7375726520646563656e7472616c697a6174696f6e",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2315:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036",
																"typeString": "literal_string \"Ownership capped at 20% to ensure decentralization\""
															},
															"value": "Ownership capped at 20% to ensure decentralization"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036",
																"typeString": "literal_string \"Ownership capped at 20% to ensure decentralization\""
															}
														],
														"id": 193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2234:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:144:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "2234:144:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 207,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2415:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2419:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2415:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2427:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 210,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "2431:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 211,
															"name": "_tokenSymbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "2439:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 206,
														"name": "TransferWithSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2396:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,string memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2396:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "EmitStatement",
												"src": "2391:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 216,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2487:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "2491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 214,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2472:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20subscription_$344_$",
																"typeString": "type(contract super ERC20subscription)"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2478:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 754,
														"src": "2472:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2472:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 184,
												"id": 219,
												"nodeType": "Return",
												"src": "2465:33:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 180,
												"name": "lockTimeCheck",
												"nameLocations": [
													"2135:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2135:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2135:13:0"
										}
									],
									"name": "transfer",
									"nameLocation": "2057:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 179,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2126:8:0"
									},
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2084:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2076:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2105:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2097:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:53:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2158:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2158:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:6:0"
									},
									"scope": 344,
									"src": "2048:458:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "2567:35:0",
										"statements": [
											{
												"expression": {
													"id": 226,
													"name": "_lockTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "2585:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 225,
												"id": 227,
												"nodeType": "Return",
												"src": "2578:16:0"
											}
										]
									},
									"functionSelector": "c0a4d64d",
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLockTime",
									"nameLocation": "2523:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2534:2:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2558:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:9:0"
									},
									"scope": 344,
									"src": "2514:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										827
									],
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "2736:547:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 241,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2751:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 242,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "2759:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2759:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2751:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 262,
													"nodeType": "Block",
													"src": "2921:85:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 255,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2944:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2950:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "2944:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 257,
																			"name": "_lockTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "2963:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2944:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546f6b656e7320617265206c6f636b6564",
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2974:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc",
																			"typeString": "literal_string \"Tokens are locked\""
																		},
																		"value": "Tokens are locked"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc",
																			"typeString": "literal_string \"Tokens are locked\""
																		}
																	],
																	"id": 254,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2936:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2936:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 261,
															"nodeType": "ExpressionStatement",
															"src": "2936:58:0"
														}
													]
												},
												"id": 263,
												"nodeType": "IfStatement",
												"src": "2747:259:0",
												"trueBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "2768:147:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 246,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2809:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2815:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "2809:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 248,
																			"name": "_adminLockTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "2828:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2809:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "41646d696e277320746f6b656e7320617265206c6f636b6564",
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2861:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625",
																			"typeString": "literal_string \"Admin's tokens are locked\""
																		},
																		"value": "Admin's tokens are locked"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_19aa3a546bbb79a3e600bdb3da3e9c109b845774ff5639f66249030775acf625",
																			"typeString": "literal_string \"Admin's tokens are locked\""
																		}
																	],
																	"id": 245,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2783:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2783:120:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 252,
															"nodeType": "ExpressionStatement",
															"src": "2783:120:0"
														}
													]
												}
											},
											{
												"assignments": [
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "newTotalBalance",
														"nameLocation": "3024:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 292,
														"src": "3016:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 264,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3016:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 267,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "3052:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 266,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "3042:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3042:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 269,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "3058:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3042:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3016:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 273,
																"name": "newTotalBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "3097:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3230",
																				"id": 274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3116:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_20_by_1",
																					"typeString": "int_const 20"
																				},
																				"value": "20"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 275,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 717,
																					"src": "3121:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3121:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3116:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 278,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3115:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3138:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3115:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3097:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e657273686970206361707065642061742032302520746f20656e7375726520646563656e7472616c697a6174696f6e",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3156:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036",
																"typeString": "literal_string \"Ownership capped at 20% to ensure decentralization\""
															},
															"value": "Ownership capped at 20% to ensure decentralization"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9b54eebb67306e94a3ffb54e8d0b540747e949d7f0741918ed059e583192036",
																"typeString": "literal_string \"Ownership capped at 20% to ensure decentralization\""
															}
														],
														"id": 272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3075:144:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "3075:144:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 287,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "3258:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 288,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "3264:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 289,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "3268:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 285,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3239:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20subscription_$344_$",
																"typeString": "type(contract super ERC20subscription)"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3245:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 827,
														"src": "3239:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3239:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 240,
												"id": 291,
												"nodeType": "Return",
												"src": "3232:43:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2619:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 237,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2712:8:0"
									},
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2650:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2642:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2673:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2665:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2691:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2686:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2686:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:73:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2730:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2730:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:6:0"
									},
									"scope": 344,
									"src": "2610:673:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3353:38:0",
										"statements": [
											{
												"expression": {
													"id": 298,
													"name": "_documentURI",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "3371:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 297,
												"id": 299,
												"nodeType": "Return",
												"src": "3364:19:0"
											}
										]
									},
									"functionSelector": "bd7dac92",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDocumentURI",
									"nameLocation": "3300:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3314:2:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3338:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3338:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3337:15:0"
									},
									"scope": 344,
									"src": "3291:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "3469:47:0",
										"statements": [
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 308,
														"name": "_documentURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "3480:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 309,
														"name": "__documentURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "3495:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3480:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "3480:28:0"
											}
										]
									},
									"functionSelector": "0de65a44",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 306,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 305,
												"name": "onlyOwner",
												"nameLocations": [
													"3460:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "3460:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3460:9:0"
										}
									],
									"name": "setDocumentURI",
									"nameLocation": "3408:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "__documentURI",
												"nameLocation": "3438:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "3424:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 302,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3424:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3423:29:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3469:0:0"
									},
									"scope": 344,
									"src": "3399:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "3598:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 323,
															"name": "_useraddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "3615:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 324,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3629:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 322,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "3609:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3609:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "3609:27:0"
											}
										]
									},
									"functionSelector": "b93a5396",
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 320,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 319,
												"name": "onlyOwner",
												"nameLocations": [
													"3588:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "3588:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3588:9:0"
										}
									],
									"name": "ForceMint",
									"nameLocation": "3533:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "_useraddress",
												"nameLocation": "3551:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3543:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3573:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3565:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3542:38:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:0"
									},
									"scope": 344,
									"src": "3524:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "3726:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 338,
															"name": "_useraddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "3743:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 339,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 337,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "3737:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3737:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "3737:27:0"
											}
										]
									},
									"functionSelector": "ae84827a",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 335,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 334,
												"name": "onlyOwner",
												"nameLocations": [
													"3716:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "3716:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3716:9:0"
										}
									],
									"name": "ForceBurn",
									"nameLocation": "3661:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "_useraddress",
												"nameLocation": "3679:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3671:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3701:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3693:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3670:38:0"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3726:0:0"
									},
									"scope": 344,
									"src": "3652:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 345,
							"src": "206:3569:0",
							"usedErrors": [
								358,
								363,
								504,
								509,
								514,
								523,
								528,
								533
							],
							"usedEvents": [
								164,
								369,
								1156,
								1165
							]
						}
					],
					"src": "33:3947:0"
				},
				"id": 0
			},
			"userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1270
						],
						"Ownable": [
							492
						]
					},
					"id": 493,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 346,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 348,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 493,
							"sourceUnit": 1271,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 347,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1270,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 350,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1270,
										"src": "692:7:1"
									},
									"id": 351,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 349,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 492,
							"linearizedBaseContracts": [
								492,
								1270
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 353,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 492,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 352,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 358,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 363,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 369,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 375,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 376,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 389,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 388,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 382,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 381,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 387,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 390,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 395,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 492,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 398,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 401,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 403,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 409,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 353,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 408,
												"id": 410,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 492,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 416,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 418,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 427,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 426,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 422,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 421,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 425,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 492,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 436,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 435,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 433,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 432,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 492,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 452,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 465,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 464,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 458,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 457,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 463,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 467,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 466,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 449,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 448,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 403,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 492,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 490,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 477,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"id": 479,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 353,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 481,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 482,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 486,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 485,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 492,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 493,
							"src": "663:2438:1",
							"usedErrors": [
								358,
								363
							],
							"usedEvents": [
								369
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							629
						],
						"IERC20Errors": [
							534
						],
						"IERC721Errors": [
							582
						]
					},
					"id": 630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 494,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 495,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 534,
							"linearizedBaseContracts": [
								534
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 504,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 509,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 514,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 523,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 528,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 533,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 630,
							"src": "278:1764:2",
							"usedErrors": [
								504,
								509,
								514,
								523,
								528,
								533
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 535,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 540,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 545,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 554,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 559,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 564,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 571,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 576,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 581,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 630,
							"src": "2186:2092:2",
							"usedErrors": [
								540,
								545,
								554,
								559,
								564,
								571,
								576,
								581
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 583,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 629,
							"linearizedBaseContracts": [
								629
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 594,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 599,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 604,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 611,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 616,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 621,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 628,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 630,
							"src": "4424:2107:2",
							"usedErrors": [
								594,
								599,
								604,
								611,
								616,
								621,
								628
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1270
						],
						"ERC20": [
							1144
						],
						"IERC20": [
							1222
						],
						"IERC20Errors": [
							534
						],
						"IERC20Metadata": [
							1248
						]
					},
					"id": 1145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 1223,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 632,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1222,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 1249,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 634,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1248,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 637,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 1271,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 636,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1270,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 630,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 638,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 534,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 641,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1270,
										"src": "1428:7:3"
									},
									"id": 642,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 643,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1222,
										"src": "1437:6:3"
									},
									"id": 644,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 645,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1248,
										"src": "1445:14:3"
									},
									"id": 646,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 647,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 534,
										"src": "1461:12:3"
									},
									"id": 648,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 640,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1144,
							"linearizedBaseContracts": [
								1144,
								534,
								1248,
								1222,
								1270
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 652,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1144,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 651,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 649,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 650,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 658,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1144,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 657,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 653,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 656,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 654,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 655,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 660,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1144,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 659,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 662,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1144,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 661,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 664,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1144,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 663,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 672,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 673,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 676,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 677,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 681,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 666,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 1144,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 687,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 662,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 686,
												"id": 688,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 684,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 1144,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1241
									],
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 696,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 664,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 695,
												"id": 697,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 693,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 1144,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1247
									],
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 704,
												"id": 706,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 702,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 1144,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1171
									],
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 714,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 660,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 713,
												"id": 715,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 1144,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1179
									],
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 725,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 727,
													"indexExpression": {
														"id": 726,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 724,
												"id": 728,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 1144,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1189
									],
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													741
												],
												"declarations": [
													{
														"constant": false,
														"id": 741,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 740,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 742,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 746,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 745,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 739,
												"id": 752,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 1144,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1199
									],
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 764,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 766,
														"indexExpression": {
															"id": 765,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 768,
													"indexExpression": {
														"id": 767,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 763,
												"id": 769,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 1144,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1209
									],
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													782
												],
												"declarations": [
													{
														"constant": false,
														"id": 782,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 781,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 783,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 787,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 789,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 786,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1035,
															1095
														],
														"referencedDeclaration": 1035,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 780,
												"id": 793,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 778,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 1144,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1221
									],
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 807,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 811,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 809,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 813,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 806,
												"id": 825,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 804,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 1144,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 837,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 838,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 846,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 844,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 843,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 859,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 858,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 864,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 868,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 867,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 1144,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																896
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 896,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 921,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 895,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 900,
															"initialValue": {
																"baseExpression": {
																	"id": 897,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 899,
																"indexExpression": {
																	"id": 898,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 901,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 902,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 911,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 910,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 905,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 877,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 906,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 896,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 907,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 904,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 909,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 920,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 912,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 652,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 914,
																			"indexExpression": {
																				"id": 913,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 877,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 915,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 896,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 916,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 919,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 894,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 890,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 891,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 893,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 924,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 942,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 941,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 935,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 652,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 937,
																			"indexExpression": {
																				"id": 936,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 879,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 938,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 940,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 943,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 934,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 933,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 929,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 660,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 930,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 932,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 945,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 944,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 1144,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 959,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 960,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 966,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 965,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 971,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 975,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 979,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 1144,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 993,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 999,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 998,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1004,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1008,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1007,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 1144,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1028,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1030,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1027,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1035,
															1095
														],
														"referencedDeclaration": 1095,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 1144,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1047,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1048,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1061,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 1060,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1054,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1053,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1059,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1062,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1063,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1069,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1068,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1074,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1077,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1080,
															"indexExpression": {
																"id": 1078,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1081,
														"indexExpression": {
															"id": 1079,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1082,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 1085,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1044,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1093,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 1092,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1087,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1088,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1089,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1086,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1091,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 1144,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													1106
												],
												"declarations": [
													{
														"constant": false,
														"id": 1106,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"initialValue": {
													"arguments": [
														{
															"id": 1108,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1107,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1112,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1114,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1113,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1119,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1120,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1129,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 1128,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1123,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1100,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1124,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1106,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1125,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1102,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1122,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1127,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 1139,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1131,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1098,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1132,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1133,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1106,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1134,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1102,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1130,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1035,
																				1095
																			],
																			"referencedDeclaration": 1095,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1138,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 1144,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1145,
							"src": "1401:9741:3",
							"usedErrors": [
								504,
								509,
								514,
								523,
								528,
								533
							],
							"usedEvents": [
								1156,
								1165
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1222
						]
					},
					"id": 1223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1147,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1222,
							"linearizedBaseContracts": [
								1222
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1156,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1165,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 1222,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 1222,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 1222,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 1222,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 1222,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 1222,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1223,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1156,
								1165
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1222
						],
						"IERC20Metadata": [
							1248
						]
					},
					"id": 1249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1226,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1249,
							"sourceUnit": 1223,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1225,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1222,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1228,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1222,
										"src": "305:6:5"
									},
									"id": 1229,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1227,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1248,
							"linearizedBaseContracts": [
								1248,
								1222
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 1248,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 1248,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1244,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 1248,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1249,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								1156,
								1165
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "userfrontend/node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1270
						]
					},
					"id": 1271,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1251,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1270,
							"linearizedBaseContracts": [
								1270
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1256,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1255,
												"id": 1258,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1270,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1265,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1264,
												"id": 1267,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1270,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1271,
							"src": "624:235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:6"
				},
				"id": 6
			}
		}
	}
}